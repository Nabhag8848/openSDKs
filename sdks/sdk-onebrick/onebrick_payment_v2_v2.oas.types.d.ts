/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

/** OneOf type helpers */
type Without<T, U> = {[P in Exclude<keyof T, keyof U>]?: never}
type XOR<T, U> = T | U extends object
  ? (Without<T, U> & U) | (Without<U, T> & T)
  : T | U
type OneOf<T extends any[]> = T extends [infer Only]
  ? Only
  : T extends [infer A, infer B, ...infer Rest]
    ? OneOf<[XOR<A, B>, ...Rest]>
    : never

export interface paths {
  '/disbursements': {
    /**
     * Disbursement
     * @description Sending funds via Brick allows you to perform digital fund transfers, and Brick currently supports fund transfers to financial accounts and e-wallets. Before you can send out funds, you will need to make sure that there are sufficient funds in your account with Brick for disbursements to be possible. To do that, deposit funds to your Brick account.
     *
     * Before using this API, it is suggested to use **Account Verification API** to validate the recipient's account.
     */
    post: operations['disbursement-api']
  }
  '/disbursements/{contractId}': {
    /**
     * Get Disbursement Status
     * @description This API helps you to retrieve the past disbursement
     * Note: A real transaction is only available in a production environment.
     */
    get: operations['retrieve-disbursement-api']
  }
  '/va/open': {
    /** Generate Open VA */
    post: operations['generate-open-va']
  }
  '/va/open?vaId=vaId': {
    /** Status of Open VA */
    get: operations['status-of-open-va']
  }
  '/va/close': {
    /** Generate Close VA */
    post: operations['generate-closed-va']
  }
  '/va/close?vaId=vaId': {
    /** Status of Close VA */
    get: operations['status-of-close-va']
  }
  '/bank-account-validation': {
    /**
     * Account Verification
     * @description This API helps verify the bank account to prevent error.
     */
    get: operations['account-verification-api']
  }
  '/qris/dynamic': {
    /**
     * Generate Dynamic QRIS
     * @description We need to build one standalone APIs for clients to consume of QRIS product. This APIs will help clients to create new dynamic QRIS for clients.
     */
    post: operations['generate-dynamic-qris']
  }
  '/qris/dynamic/{referenceId}/cancel/': {
    /**
     * Cancel Dynamic QRIS
     * @description We need to provide Cancel QRIS APIs to our clients, This APIs will help to cancel the QRIS and then will can’t be use.
     */
    post: operations['cancel-dynamic-qris']
  }
  '/bifast-disbursements': {
    /**
     * BIFAST Disbursement API
     * @description The BIFAST Disbursement service offers two distinct packages: BIFAST Only and Regular APIs. The BIFAST standalone disbursement APIs are designed for all of BRICK’s users who wish to exclusively utilize BIFAST transactions for their disbursements. By utilizing BIFAST, users can benefit from real-time transactions at a significantly reduced cost.
     */
    post: operations['disbursement-copy']
  }
  '/bifast-disbursements (COPY)': {
    /**
     * BIFAST Account Verification API
     * @description This API helps verify the bank account to prevent error.
     */
    get: operations['account-verification-copy-1']
  }
  '/bank-account-validation (COPY)': {
    /**
     * Account Verification
     * @description This API helps verify the bank account to prevent error.
     */
    get: operations['account-verification-copy-2']
  }
  '/payment-link': {
    /**
     * Generate Payment Link
     * @description Allows merchants to programmatically generate unique payment links tailored to specific transaction requirements, including amount, currency, and optional descriptions or attachments.
     */
    post: operations['generate-open-va-copy']
  }
  '/payment-link?pin=1111&referenceId=0876743bdbae48b8a3e7cc9fb116f867': {
    /**
     * Get Payment Link Detail
     * @description Retrieves details of a specific payment link, including transaction information and customization settings.
     */
    get: operations['status-of-open-va-copy-copy']
  }
  '/payment-link/bank?referenceId=0876743bdbae48b8a3e7cc9fb116f867&pin=1111 (COPY)': {
    /**
     * Get Virtual Account Availability
     * @description Checks the availability of virtual accounts associated with payment links for specific transactions.
     */
    get: operations['get-virtual-account-availability-copy']
  }
  '/payment-link/status': {
    /**
     * Get Payment Link Status
     * @description Obtains the current status of a payment link, indicating whether the associated transaction has been completed or is still pending.
     */
    get: operations['get-payment-link-detail-copy']
  }
  '/qris/static/{referenceId}': {
    /**
     * Status for Static QRIs
     * @description This APIs will help clients to initialise the status update from their side, They have to pass on the transactions referenceId and gets the update.
     */
    get: operations['status-for-dynamic-qris-copy']
  }
  '/qris/merchant/{id}': {
    /**
     * Static QRIS Get Merchant Details
     * @description These APIs will help clients get the bulk merchant details list from their side. They have to pass the right token, and they will get the details of the list
     */
    get: operations['static-qris-get-merchant-details']
  }
  '/qris/dynamic/{referenceId} (COPY-2)': {
    /**
     * Status for Dynamic QRIS
     * @description This APIs will help clients to initialise the status update from their side, They have to pass on the transactions referenceId and gets the update.
     */
    get: operations['status-for-dynamic-qris-copy-3']
  }
  '/qris/merchant/bulk': {
    /**
     * Static QRIS Get Merchant List
     * @description These APIs will help clients get the bulk merchant list from their side. They have to pass the right token, and they will get the list
     */
    get: operations['static-qris-get-merchant-list']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: never
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Disbursement
   * @description Sending funds via Brick allows you to perform digital fund transfers, and Brick currently supports fund transfers to financial accounts and e-wallets. Before you can send out funds, you will need to make sure that there are sufficient funds in your account with Brick for disbursements to be possible. To do that, deposit funds to your Brick account.
   *
   * Before using this API, it is suggested to use **Account Verification API** to validate the recipient's account.
   */
  'disbursement-api': {
    parameters: {
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description A unique reference ID as a unique identifier
           * @default test-disbursement-1
           */
          referenceId?: string
          /**
           * @description An arbitrary string attached to the object. Often useful for displaying to users what the transaction was for. Description length limit is 1000 chars.
           * @default test-disbursement-1
           */
          description?: string
          /**
           * Format: int32
           * @description Amount that you would like to send
           * @default 10000
           */
          amount?: number
          recipientEmail?: string
          disbursementMethod?: {
            /** @default bank_transfer */
            type?: string
            /** @default MANDIRI */
            bankShortCode?: string
            /** @default 12345678 */
            bankAccountNo?: string
            /** @default PROD ONLY */
            bankAccountHolderName?: string
          }
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We have received your request and are processing it, please check your callback URL for transaction status */
              message?: string
              /** @example asdasd123123asdasdasd */
              id?: string
              /** @example disbursement */
              type?: string
              attributes?: {
                /** @example test-disbursement-1 */
                referenceId?: string
                /** @example test-disbursement-1 */
                description?: string
                /** @example 10000 */
                amount?: string
                /** @example processing */
                status?: string
                /** @example null */
                settlementStatus?: string
                /** @example 2022-07-21T13:49:39.752+07:00 */
                createdAt?: string
                disbursementMethod?: {
                  /** @example bank_transfer */
                  type?: string
                  /** @example 12345678 */
                  bankAccountNo?: string
                  /** @example BCA */
                  bankShortCode?: string
                  /** @example PROD ONLY */
                  bankAccountHolderName?: string
                }
              }
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use amount more than minimum transfer limit, ie:10.000 */
                  message?: string
                  /** @example Please make sure the amount you requested is in the range of Rp 10.000 to Rp 100.000.000 */
                  action?: string
                  /** @example Your amount of transfer is below our minimum transfer amount */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use valid bankShortCode in the request query */
                  message?: string
                  /** @example Please revalidate your bank short code https://docs.google.com/spreadsheets/d/1OvnDKPnQ0nAdFq8PLyvOjrZlfeVMtu8WE2HymmoY8Og/edit#gid=0 */
                  action?: string
                  /** @example bankShortCode is not valid in the request query */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example session_available_in_other_device */
                  code?: string
                  /** @example Callback URL is not available */
                  message?: string
                  /** @example Please add the callback URL from dashboard or contact contact sales team */
                  action?: string
                  /** @example This is Async API, Final response will be sended over callback URL */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please make sure your External key (reference id) has never been used before */
                  message?: string
                  /** @example Please make sure to always use unique reference ID in the parameter */
                  action?: string
                  /** @example Your external id (referenceId) has already been taken */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please make sure you have sufficient fund to process this transaction */
                  message?: string
                  /** @example Please do the top up to proceed this transactions */
                  action?: string
                  /** @example Your Account has insufficient funds to process this transaction */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
      /** @description 500 */
      500: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 500
             */
            status?: number
            error?: {
              /** @example Institution_not_available */
              code?: string
              /** @example Requested bank for transfer is currently unavailable */
              message?: string
              /** @example Please wait and retry again */
              action?: string
              /** @example Institution is currently under maintainence */
              reason?: string
            }
            metadata?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            data?: unknown
          }
        }
      }
    }
  }
  /**
   * Get Disbursement Status
   * @description This API helps you to retrieve the past disbursement
   * Note: A real transaction is only available in a production environment.
   */
  'retrieve-disbursement-api': {
    parameters: {
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
      path: {
        /** @description Unique identifier to identify the transaction */
        contractId: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We have successfuly retrieve your disbursement */
              message?: string
              /** @example asdasd123123asdasdasd */
              id?: string
              /** @example disbursement */
              type?: string
              attributes?: {
                /** @example test-disbursement-1 */
                referenceId?: string
                /** @example test-disbursement-1 */
                description?: string
                /** @example 10000 */
                amount?: string
                /** @example completed */
                status?: string
                settlementStatus?: unknown
                /** @example 2022-07-21T13:49:39.752+07:00 */
                createdAt?: string
                disbursementMethod?: {
                  /** @example bank_transfer */
                  type?: string
                  /** @example 12345678 */
                  bankAccountNo?: string
                  /** @example BCA */
                  bankShortCode?: string
                  /** @example PROD ONLY */
                  bankAccountHolderName?: string
                  /** @example Bank Central Asia */
                  bankName?: string
                }
              }
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 401
             */
            status?: number
            error?: {
              /** @example invalid_parameters_in_headers */
              code?: string
              /** @example Please use valid Public_access_token in headers */
              message?: string
              /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
              action?: string
              /** @example Invalid public_access_token in headers */
              reason?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            data?: unknown
          }
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 401
             */
            status?: number
            error?: {
              /** @example Unauthorized */
              code?: string
              /** @example contract_id_invalid */
              message?: string
              /** @example Please check again the request/data */
              action?: string
              /** @example Error on request or data */
              reason?: string
            }
            metadata?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            data?: unknown
          }
        }
      }
    }
  }
  /** Generate Open VA */
  'generate-open-va': {
    parameters: {
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description Institution short code of the bank
           * @default MANDIRI
           */
          bankShortCode?: string
          /**
           * @description Unique ID that is being generated by the client to track each VA generation (maximum 255 characters)
           * @default test-VA-1
           */
          referenceId?: string
          /**
           * @description The display name that will be shown in the user's payment platform (maximum 24 characters)
           * @default PRODONLY
           */
          displayName?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We have successfully generated the open VA */
              message?: string
              /** @example OP_SA123212SDS123123SAD11222 */
              id?: string
              /** @example BRICK1234 */
              referenceId?: string
              /** @example MANDIRI */
              bankShortCode?: string
              /** @example 130432138889902 */
              accountNo?: string
              /** @example BRICK */
              displayName?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example Incorrect_format_of_parameters_in_request */
                  code?: string
                  /** @example Please use Bank Code that we support in the request query */
                  message?: string
                  /** @example Please revisit our API doc to see our supported Bank Code */
                  action?: string
                  /** @example Bank Code is not supported */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please make sure your External key (reference id) has never been used before */
                  message?: string
                  /** @example Please make sure to always use unique reference ID in the parameter */
                  action?: string
                  /** @example Your external id (referenceId) has already been taken */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please do not customize the suffix number for this Bank Code */
                  message?: string
                  /** @example Please use the suffix number given without customization */
                  action?: string
                  /** @example Suffix number customization is not supported for this Bank Code */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 401
             */
            status?: number
            error?: {
              /** @example invalid_parameters_in_headers */
              code?: string
              /** @example Please use valid Public_access_token in headers */
              message?: string
              /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
              action?: string
              /** @example Invalid public_access_token in headers */
              reason?: string
            }
            metadata?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            data?: unknown
          }
        }
      }
    }
  }
  /** Status of Open VA */
  'status-of-open-va': {
    parameters: {
      query?: {
        /** @description Unique id of virtual account */
        vaId?: string
      }
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We have successfully retrieved the open VA */
              message?: string
              /** @example OP_123451123123 */
              id?: string
              /** @example brick12345 */
              referenceId?: string
              /** @example BCA */
              bankShortCode?: string
              /** @example 1304321312312310 */
              accountNo?: string
              /** @example BRICK */
              displayName?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Transaction ID not found */
                  message?: string
                  /** @example Please ensure that the transaction ID is correct */
                  action?: string
                  /** @example We did not find any transaction with such ID */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
    }
  }
  /** Generate Close VA */
  'generate-closed-va': {
    parameters: {
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description Only virtual bank account is available for now
           * @default virtual_bank_account
           */
          paymentMethodType?: string
          /**
           * Format: int32
           * @description The amount that will be stated in the virtual account
           * @default 10000
           */
          amount?: number
          /**
           * @description The description that will be stated in the virtual account (maximum 255 characters)
           * @default test-closeVA-1
           */
          description?: string
          /**
           * Format: int32
           * @description The expiration time of the close VA in Minute
           * @default null
           */
          expiredAt?: number
          /**
           * @description Unique ID that is being generated by the client to track each VA generation
           * @default test-closeVA-1
           */
          referenceId?: string
          /** @description Displayed name of VA */
          displayName?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We have successfully generated the close VA */
              message?: string
              /** @example CL_asd31231SAD123123asasd122 */
              id?: string
              /** @example brick12345 */
              referenceId?: string
              /** @example Test Initial VA Close */
              description?: string
              /** @example 15000.0 */
              amount?: string
              /** @example pending */
              status?: string
              /** @example 2021-12-13T14:26:43.000+07:00 */
              createdAt?: string
              /** @example 2021-12-31T15:27:43.000+07:00 */
              expiredAt?: string
              /** @example MANDIRI */
              bankShortCode?: string
              /** @example 1304421991909265 */
              accountNo?: string
              /** @example IKN-BRICK */
              displayName?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example Incorrect_format_of_parameters_in_request */
                  code?: string
                  /** @example Please use Bank Code that we support in the request query */
                  message?: string
                  /** @example Please revisit our API doc to see our supported Bank Code */
                  action?: string
                  /** @example Bank Code is not supported */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please make sure your External key (reference id) has never been used before */
                  message?: string
                  /** @example Please make sure to always use unique reference ID in the parameter */
                  action?: string
                  /** @example Your external id (referenceId) has already been taken */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please do not customize the suffix number for this Bank Code */
                  message?: string
                  /** @example Please use the suffix number given without customization */
                  action?: string
                  /** @example Suffix number customization is not supported for this Bank Code */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 401
             */
            status?: number
            error?: {
              /** @example invalid_parameters_in_headers */
              code?: string
              /** @example Please use valid Public_access_token in headers */
              message?: string
              /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
              action?: string
              /** @example Invalid public_access_token in headers */
              reason?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            data?: unknown
          }
        }
      }
    }
  }
  /** Status of Close VA */
  'status-of-close-va': {
    parameters: {
      query?: {
        /** @description Unique id of virtual account */
        vaId?: string
      }
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We have successfully retrieved the close VA */
              message?: string
              /** @example BR_1238512012301923 */
              id?: string
              /** @example BRICK-12345 */
              referenceId?: string
              /** @example Test Initial VA Close */
              description?: string
              /** @example 15000.0 */
              amount?: string
              /** @example pending */
              status?: string
              /** @example 2023-03-28T17:12:55.638+07:00 */
              createdAt?: string
              /** @example 2023-03-29T12:07:04.000+07:00 */
              expiredAt?: string
              /** @example MANDIRI */
              bankShortCode?: string
              /** @example 7001202303299393369 */
              accountNo?: string
              /** @example BRICK */
              displayName?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Transaction ID not found */
                  message?: string
                  /** @example Please ensure that the transaction ID is correct */
                  action?: string
                  /** @example We did not find any transaction with such ID */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
    }
  }
  /**
   * Account Verification
   * @description This API helps verify the bank account to prevent error.
   */
  'account-verification-api': {
    parameters: {
      query?: {
        /** @description Bank account Number */
        accountNumber?: number
        /** @description Brick's bankShortCode for official bank (e.g Bank Mandiri -> Mandiri) */
        bankShortCode?: string
      }
      header?: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description Unique number for banks */
          accountNumber?: string
          /** @description This should be the institution that your end-customer intends to receive funds in. Please see list bank destination for full list of bank accounts you can send to. */
          bankShortCode?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We are successfully able to verify the account */
              message?: string
              /** @example 4124668005 */
              accountNo?: string
              /** @example M.HIBBAN IRSYAD */
              accountName?: string
              /** @example PERMATA */
              bankShortCode?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use valid and active accountNumber in request query */
                  message?: string
                  /** @example Please verify the account number in /v2/payments/bank-account-validation API */
                  action?: string
                  /** @example accountNumber is invalid in request body */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use the API with bankShortCode in the request param */
                  message?: string
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string
                  /** @example bankShortCode  is missing from request param */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use valid bankShortCode in the request query */
                  message?: string
                  /** @example Please revalidate your bank short code https://docs.google.com/spreadsheets/d/1OvnDKPnQ0nAdFq8PLyvOjrZlfeVMtu8WE2HymmoY8Og/edit#gid=0 */
                  action?: string
                  /** @example bankShortCode is not valid in the request query */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
    }
  }
  /**
   * Generate Dynamic QRIS
   * @description We need to build one standalone APIs for clients to consume of QRIS product. This APIs will help clients to create new dynamic QRIS for clients.
   */
  'generate-dynamic-qris': {
    parameters: {
      header: {
        /** @description One time access-token generated using the auth token API */
        publicAccessToken: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description Unique reference of Transactions from client side(Maximum length of 25 characters) */
          referenceId: string
          /** @description Amount that clients wants to transfer */
          amount: string
          /**
           * Format: date
           * @description Maximum 31 days from created
           */
          expiredAt: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We have successfully generated the dynamic qris */
              message?: string
              /** @example QR_7d13c668fea84081832d02368c61af69 */
              id?: string
              /** @example test-qris-sandbox */
              referenceId?: string
              /**
               * @default 0
               * @example 10000
               */
              amount?: number
              /** @example 2024-01-16T17:00:00.000+07:00 */
              createdAt?: string
              /** @example 2024-01-19T17:00:00.000+07:00 */
              expiredAt?: string
              /** @example 00020101021226670016COM.NOBUBANK.WWW01189360050300000491530214082500000318170303UKE51440014ID.CO.QRIS.WWW0215ID20200814004210303UKE5204549953033605405100005802ID5914BRICK PAYMENT 6015Banten - Kota T61051581162570114011200010968090620202401121013231606140703A010804POSP630443C4 */
              qrData?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': unknown
        }
      }
    }
  }
  /**
   * Cancel Dynamic QRIS
   * @description We need to provide Cancel QRIS APIs to our clients, This APIs will help to cancel the QRIS and then will can’t be use.
   */
  'cancel-dynamic-qris': {
    parameters: {
      header: {
        /** @description One time access-token generated using the auth token API */
        publicAccessToken: string
      }
      path: {
        /** @description Unique reference of Transactions from client side */
        referecneId: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': unknown
        }
      }
    }
  }
  /**
   * BIFAST Disbursement API
   * @description The BIFAST Disbursement service offers two distinct packages: BIFAST Only and Regular APIs. The BIFAST standalone disbursement APIs are designed for all of BRICK’s users who wish to exclusively utilize BIFAST transactions for their disbursements. By utilizing BIFAST, users can benefit from real-time transactions at a significantly reduced cost.
   */
  'disbursement-copy': {
    parameters: {
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description A unique reference ID as a unique identifier
           * @default test-disbursement-1
           */
          referenceId?: string
          /**
           * @description An arbitrary string attached to the object. Often useful for displaying to users what the transaction was for. Description length limit is 1000 chars.
           * @default test-disbursement-1
           */
          description?: string
          /**
           * Format: int32
           * @description Amount that you would like to send
           * @default 10000
           */
          amount?: number
          recipientEmail?: string
          disbursementMethod?: {
            /** @default bank_transfer */
            type?: string
            /** @default MANDIRI */
            bankShortCode?: string
            /** @default 12345678 */
            bankAccountNo?: string
            /** @default PROD ONLY */
            bankAccountHolderName?: string
          }
          /**
           * @description Name of the user that transfer
           * @default Daviga Teguh
           */
          name?: string
          /**
           * @description Allowed Value only KTP/SIM/KITAS/NPWP
           * @default KTP
           */
          identityType?: string
          /**
           * @description Identity Number of the User
           * @default 327602241019990004
           */
          identityNumber?: string
          /**
           * @description Country Code based on the user
           * @default ID
           */
          countryCode?: string
          /**
           * @description Province Code based on the user
           * @default 35
           */
          provinceCode?: string
          /**
           * @description City Code based on the user
           * @default 1226
           */
          cityCode?: string
          /**
           * @description Job Code based on the user
           * @default 89
           */
          jobCode?: string
          /**
           * @description Place of the user birth
           * @default Tulodong Bawah No 4
           */
          address?: string
          /**
           * @description Place of Birth sender
           * @default Jakarta
           */
          placeOfBirth?: string
          /**
           * Format: date
           * @default 1999-10-24
           */
          dateofBirth?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            /** @example We have received your request and are processing it, please check your callback URL for transaction status */
            message?: string
            /** @example asdasd123123asdasdasd */
            id?: string
            /** @example disbursement */
            type?: string
            attributes?: {
              /** @example test-disbursement-1 */
              referenceId?: string
              /** @example test-disbursement-1 */
              description?: string
              /** @example 10000 */
              amount?: string
              /** @example processing */
              status?: string
              /** @example null */
              settlementStatus?: string
              /** @example 2022-07-21T13:49:39.752+07:00 */
              createdAt?: string
              disbursementMethod?: {
                /** @example bank_transfer */
                type?: string
                /** @example 12345678 */
                bankAccountNo?: string
                /** @example BCA */
                bankShortCode?: string
                /** @example PROD ONLY */
                bankAccountHolderName?: string
              }
              sender?: {
                /** @example Daviga Teguh */
                name?: string
                /** @example KTP */
                identityType?: string
                /** @example 3501041001820003 */
                identityNumber?: string
                /** @example ID */
                countryCode?: string
                /** @example 35 */
                provinceCode?: string
                /** @example 1226 */
                cityCode?: string
                /** @example 89 */
                jobCode?: string
                /** @example Tulodong Bawah No 4 */
                address?: string
                /** @example Jakarta */
                placeOfBirth?: string
                /** @example 1998-04-23 */
                dateOfBirth?: string
              }
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use amount more than minimum transfer limit, ie:10.000 */
                  message?: string
                  /** @example Please make sure the amount you requested is in the range of Rp 10.000 to Rp 100.000.000 */
                  action?: string
                  /** @example Your amount of transfer is below our minimum transfer amount */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use valid bankShortCode in the request query */
                  message?: string
                  /** @example Please revalidate your bank short code https://docs.google.com/spreadsheets/d/1OvnDKPnQ0nAdFq8PLyvOjrZlfeVMtu8WE2HymmoY8Og/edit#gid=0 */
                  action?: string
                  /** @example bankShortCode is not valid in the request query */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example session_available_in_other_device */
                  code?: string
                  /** @example Callback URL is not available */
                  message?: string
                  /** @example Please add the callback URL from dashboard or contact contact sales team */
                  action?: string
                  /** @example This is Async API, Final response will be sended over callback URL */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please make sure your External key (reference id) has never been used before */
                  message?: string
                  /** @example Please make sure to always use unique reference ID in the parameter */
                  action?: string
                  /** @example Your external id (referenceId) has already been taken */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please make sure you have sufficient fund to process this transaction */
                  message?: string
                  /** @example Please do the top up to proceed this transactions */
                  action?: string
                  /** @example Your Account has insufficient funds to process this transaction */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
      /** @description 500 */
      500: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 500
             */
            status?: number
            error?: {
              /** @example Institution_not_available */
              code?: string
              /** @example Requested bank for transfer is currently unavailable */
              message?: string
              /** @example Please wait and retry again */
              action?: string
              /** @example Institution is currently under maintainence */
              reason?: string
            }
            metadata?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            data?: unknown
          }
        }
      }
    }
  }
  /**
   * BIFAST Account Verification API
   * @description This API helps verify the bank account to prevent error.
   */
  'account-verification-copy-1': {
    parameters: {
      query?: {
        /** @description Bank account Number */
        accountNumber?: number
        /** @description Brick's bankShortCode for official bank (e.g Bank Mandiri -> Mandiri) */
        bankShortCode?: string
      }
      header?: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description Unique number for banks */
          accountNumber?: string
          /** @description This should be the institution that your end-customer intends to receive funds in. Please see list bank destination for full list of bank accounts you can send to. */
          bankShortCode?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We are successfully able to verify the account */
              message?: string
              /** @example 4124668005 */
              accountNo?: string
              /** @example M.HIBBAN IRSYAD */
              accountName?: string
              /** @example PERMATA */
              bankShortCode?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use valid and active accountNumber in request query */
                  message?: string
                  /** @example Please verify the account number in /v2/payments/bank-account-validation API */
                  action?: string
                  /** @example accountNumber is invalid in request body */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use the API with bankShortCode in the request param */
                  message?: string
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string
                  /** @example bankShortCode  is missing from request param */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use valid bankShortCode in the request query */
                  message?: string
                  /** @example Please revalidate your bank short code https://docs.google.com/spreadsheets/d/1OvnDKPnQ0nAdFq8PLyvOjrZlfeVMtu8WE2HymmoY8Og/edit#gid=0 */
                  action?: string
                  /** @example bankShortCode is not valid in the request query */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
    }
  }
  /**
   * Account Verification
   * @description This API helps verify the bank account to prevent error.
   */
  'account-verification-copy-2': {
    parameters: {
      query?: {
        /** @description Bank account Number */
        accountNumber?: number
        /** @description Brick's bankShortCode for official bank (e.g Bank Mandiri -> Mandiri) */
        bankShortCode?: string
      }
      header?: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description Unique number for banks */
          accountNumber?: string
          /** @description This should be the institution that your end-customer intends to receive funds in. Please see list bank destination for full list of bank accounts you can send to. */
          bankShortCode?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example We are successfully able to verify the account */
              message?: string
              /** @example 4124668005 */
              accountNo?: string
              /** @example M.HIBBAN IRSYAD */
              accountName?: string
              /** @example PERMATA */
              bankShortCode?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use valid and active accountNumber in request query */
                  message?: string
                  /** @example Please verify the account number in /v2/payments/bank-account-validation API */
                  action?: string
                  /** @example accountNumber is invalid in request body */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use the API with bankShortCode in the request param */
                  message?: string
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string
                  /** @example bankShortCode  is missing from request param */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_request */
                  code?: string
                  /** @example Please use valid bankShortCode in the request query */
                  message?: string
                  /** @example Please revalidate your bank short code https://docs.google.com/spreadsheets/d/1OvnDKPnQ0nAdFq8PLyvOjrZlfeVMtu8WE2HymmoY8Og/edit#gid=0 */
                  action?: string
                  /** @example bankShortCode is not valid in the request query */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metadata?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
    }
  }
  /**
   * Generate Payment Link
   * @description Allows merchants to programmatically generate unique payment links tailored to specific transaction requirements, including amount, currency, and optional descriptions or attachments.
   */
  'generate-open-va-copy': {
    parameters: {
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description Files attached if any
           * @default []
           */
          files?: string
          /**
           * @description Amount the user need to transfer
           * @default 50000
           */
          amount?: string
          /**
           * @description Unique ID that is being generated by the client to track each VA generation (maximum 255 characters)
           * @default test-VA-1
           */
          referenceId?: string
          /**
           * @description Description of the Payment Link
           * @default Pay me please!
           */
          description?: string
          /**
           * @description Phone Number of the End-User
           * @default +62819859238232
           */
          endUserPhoneNumber?: string
          /**
           * @description Email of the end user
           * @default daviga@onebrick.io
           */
          endUserEmail?: string
          /**
           * @description Address of the end user
           * @default Jalan Tulodong Bawah IV
           */
          endUserAddress?: string
          /**
           * @description If any
           * @default 1234
           */
          pin?: string
          /**
           * @description Redirect URL after the payment link
           * @default https://onebrick.io
           */
          redirectUrl?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 400
             */
            status?: number
            error?: {
              /** @example invalid_parameters_in_request */
              code?: string
              /** @example Please make sure your External key (reference id) has never been used before */
              message?: string
              /** @example Please make sure to always use unique reference ID in the parameter */
              action?: string
              /** @example Your external id (referenceId) has already been taken */
              reason?: string
            }
            metadata?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            data?: unknown
          }
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 401
             */
            status?: number
            error?: {
              /** @example invalid_parameters_in_headers */
              code?: string
              /** @example Please use valid Public_access_token in headers */
              message?: string
              /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
              action?: string
              /** @example Invalid public_access_token in headers */
              reason?: string
            }
            metadata?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            data?: unknown
          }
        }
      }
    }
  }
  /**
   * Get Payment Link Detail
   * @description Retrieves details of a specific payment link, including transaction information and customization settings.
   */
  'status-of-open-va-copy-copy': {
    parameters: {
      query?: {
        /** @description Unique id of payment link */
        referenceId?: string
        /** @description If the PIN is required */
        pin?: string
      }
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Transaction ID not found */
                  message?: string
                  /** @example Please ensure that the transaction ID is correct */
                  action?: string
                  /** @example We did not find any transaction with such ID */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
    }
  }
  /**
   * Get Virtual Account Availability
   * @description Checks the availability of virtual accounts associated with payment links for specific transactions.
   */
  'get-virtual-account-availability-copy': {
    parameters: {
      query?: {
        /** @description Unique id of payment link */
        referenceId?: string
        /** @description If the PIN is required */
        pin?: string
      }
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              virtualAccount?: {
                /** @example Bank Negara Indonesia */
                bankName?: string
                /** @example BNI */
                bankShortCode?: string
                /** @example */
                availabilityInformation?: string
                /**
                 * @default true
                 * @example true
                 */
                isAvailable?: boolean
              }[]
              bankTransfer?: {
                /** @example Bank Central Asia */
                bankName?: string
                /** @example BCA */
                bankShortCode?: string
                /** @example */
                availabilityInformation?: string
                /**
                 * @default true
                 * @example true
                 */
                isAvailable?: boolean
              }[]
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Transaction ID not found */
                  message?: string
                  /** @example Please ensure that the transaction ID is correct */
                  action?: string
                  /** @example We did not find any transaction with such ID */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
    }
  }
  /**
   * Get Payment Link Status
   * @description Obtains the current status of a payment link, indicating whether the associated transaction has been completed or is still pending.
   */
  'get-payment-link-detail-copy': {
    parameters: {
      query?: {
        /** @description Unique id of payment link */
        referenceId?: string
        /** @description If the PIN is required */
        pin?: string
      }
      header: {
        /** @description Unique Identifier for Client(Public access token), It should be called with bearer */
        publicAccessToken: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 401 */
      401: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Transaction ID not found */
                  message?: string
                  /** @example Please ensure that the transaction ID is correct */
                  action?: string
                  /** @example We did not find any transaction with such ID */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
              {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string
                  /** @example Please use valid Public_access_token in headers */
                  message?: string
                  /** @example Please generate valid public access token via /v2/payments/auth/token APIs or contact to Brick sales team */
                  action?: string
                  /** @example Invalid public_access_token in headers */
                  reason?: string
                }
                metaData?: {
                  /** @example API */
                  source?: string
                  /** @example Payment */
                  entity?: string
                }
                data?: unknown
              },
            ]
          >
        }
      }
    }
  }
  /**
   * Status for Static QRIs
   * @description This APIs will help clients to initialise the status update from their side, They have to pass on the transactions referenceId and gets the update.
   */
  'status-for-dynamic-qris-copy': {
    parameters: {
      header: {
        /** @description One time access-token generated using the auth token API */
        publicAccessToken: string
      }
      path: {
        /** @description Unique referenceId of Transactions */
        referenceId: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example XXXX */
              referenceId?: string
              /** @example QR_XXXX */
              id?: string
              /**
               * @default 0
               * @example 32000
               */
              amount?: number
              /** @example completed */
              status?: string
              /** @example */
              qrData?: string
              /** @example 2024-03-05T01:51:01.000+07:00 */
              paidAt?: string
              /** @example STATIC */
              type?: string
              /** @example merchant_name */
              merchant?: string
              /** @example merchat_Nmid */
              merchantNmid?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': unknown
        }
      }
    }
  }
  /**
   * Static QRIS Get Merchant Details
   * @description These APIs will help clients get the bulk merchant details list from their side. They have to pass the right token, and they will get the details of the list
   */
  'static-qris-get-merchant-details': {
    parameters: {
      header: {
        /** @description One time access-token generated using the auth token API */
        publicAccessToken: string
      }
      path: {
        /** @description Unique ID of QRIS Merchant */
        id: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /**
               * @default 0
               * @example 25
               */
              id?: number
              /** @example Brick Qris Merchant */
              name?: string
              /** @example merchant@mail.com */
              email?: string
              /** @example Brick */
              ownerName?: string
              /** @example JL Tulodong */
              address?: string
              /** @example ID2020088800402 */
              nmid?: string
              /** @example {{url_qr_code_merchant}} */
              qrisImageUrl?: string
              /** @example VERIFIED */
              status?: string
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': unknown
        }
      }
    }
  }
  /**
   * Status for Dynamic QRIS
   * @description This APIs will help clients to initialise the status update from their side, They have to pass on the transactions referenceId and gets the update.
   */
  'status-for-dynamic-qris-copy-3': {
    parameters: {
      header: {
        /** @description One time access-token generated using the auth token API */
        publicAccessToken: string
      }
      path: {
        /** @description Unique referenceId of Transactions */
        referenceId: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /**
             * @default 0
             * @example 200
             */
            status?: number
            data?: {
              /** @example QR_7d13c668fea84081832d02368c61af69 */
              id?: string
              /** @example test-qris-sandbox */
              referenceId?: string
              /**
               * @default 0
               * @example 10000
               */
              amount?: number
              /** @example processing */
              status?: string
              /** @example 00020101021226670016COM.NOBUBANK.WWW01189360050300000491530214082500000318170303UKE51440014ID.CO.QRIS.WWW0215ID20200814004210303UKE5204549953033605405100005802ID5914BRICK PAYMENT 6015Banten - Kota T61051581162570114011200010968090620202401121013231606140703A010804POSP630443C4 */
              qrData?: string
              paidAt?: unknown
            }
            metaData?: {
              /** @example API */
              source?: string
              /** @example Payment */
              entity?: string
            }
            error?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': unknown
        }
      }
    }
  }
  /**
   * Static QRIS Get Merchant List
   * @description These APIs will help clients get the bulk merchant list from their side. They have to pass the right token, and they will get the list
   */
  'static-qris-get-merchant-list': {
    parameters: {
      header: {
        /** @description One time access-token generated using the auth token API */
        publicAccessToken: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': unknown
        }
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
