/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/workspaces': {
    /** List workspaces */
    get: operations['listWorkspaces']
    /** Create a workspace */
    post: operations['createWorkspace']
  }
  '/workspaces/{workspaceId}': {
    /** Get Workspace details */
    get: operations['getWorkspace']
    /** Delete a Workspace */
    delete: operations['deleteWorkspace']
    /** Update a workspace */
    patch: operations['updateWorkspace']
    parameters: {
      path: {
        workspaceId: string
      }
    }
  }
  '/workspaces/{workspaceId}/oauthCredentials': {
    /**
     * Create OAuth override credentials for a workspace and source type.
     * @description Create/update a set of OAuth credentials to override the Airbyte-provided OAuth credentials used for source/destination OAuth.
     * In order to determine what the credential configuration needs to be, please see the connector specification of the relevant  source/destination.
     */
    put: operations['createOrUpdateWorkspaceOAuthCredentials']
    parameters: {
      path: {
        workspaceId: string
      }
    }
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    /** Format: uuid */
    WorkspaceId: string
    /** Format: uuid */
    OrganizationId: string
    /**
     * @description Describes what actions/endpoints the permission entitles to
     * @enum {string}
     */
    PermissionType:
      | 'instance_admin'
      | 'organization_admin'
      | 'organization_editor'
      | 'organization_reader'
      | 'organization_member'
      | 'workspace_owner'
      | 'workspace_admin'
      | 'workspace_editor'
      | 'workspace_reader'
    /**
     * Format: uuid
     * @description Internal Airbyte user ID
     */
    UserId: string
    /** @description The values required to configure OAuth flows. The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema. */
    OAuthConfiguration: unknown
    OAuthInputConfiguration: components['schemas']['OAuthConfiguration']
    /**
     * Root Type for RedirectUrlResponse
     * @example {
     *   "redirectUrl": "https://example.com"
     * }
     */
    RedirectUrlResponse: {
      /** Format: url */
      redirectUrl?: string
    }
    /**
     * Root Type for JobResponse
     * @description Provides details of a single job.
     * @example {
     *   "id": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826",
     *   "status": "running",
     *   "jobType": "sync",
     *   "startTime": "2023-03-25T01:30:50Z",
     *   "duration": "PT8H6M12S"
     * }
     */
    JobResponse: {
      /** Format: int64 */
      jobId: number
      status: components['schemas']['JobStatusEnum']
      jobType: components['schemas']['JobTypeEnum']
      startTime: string
      /** Format: UUID */
      connectionId: string
      lastUpdatedAt?: string
      /** @description Duration of a sync in ISO_8601 format */
      duration?: string
      /** Format: int64 */
      bytesSynced?: number
      /** Format: int64 */
      rowsSynced?: number
    }
    /**
     * Root Type for JobsResponse
     * @example {
     *   "next": "https://api.airbyte.com/v1/jobs?limit=5&offset=10",
     *   "previous": "https://api.airbyte.com/v1/jobs?limit=5&offset=0",
     *   "data": [
     *     {
     *       "id": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826",
     *       "status": "running",
     *       "jobType": "sync",
     *       "startTime": "2023-03-25T01:30:50Z"
     *     }
     *   ]
     * }
     */
    JobsResponse: {
      previous?: string
      next?: string
      data: components['schemas']['JobResponse'][]
    }
    ConnectionCreateRequest: {
      /** @description Optional name of the connection */
      name?: string
      /** Format: uuid */
      sourceId: string
      /** Format: uuid */
      destinationId: string
      configurations?: components['schemas']['StreamConfigurations']
      schedule?: components['schemas']['AirbyteApiConnectionSchedule']
      dataResidency?: components['schemas']['GeographyEnum']
      namespaceDefinition?: components['schemas']['NamespaceDefinitionEnum']
      /**
       * @description Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
       * @default null
       * @example ${SOURCE_NAMESPACE}
       */
      namespaceFormat?: string
      /** @description Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_” causes “projects” => “airbyte_projects”). */
      prefix?: string
      nonBreakingSchemaUpdatesBehavior?: components['schemas']['NonBreakingSchemaUpdatesBehaviorEnum']
      status?: components['schemas']['ConnectionStatusEnum']
    }
    ConnectionPatchRequest: {
      /** @description Optional name of the connection */
      name?: string
      configurations?: components['schemas']['StreamConfigurations']
      schedule?: components['schemas']['AirbyteApiConnectionSchedule']
      dataResidency?: components['schemas']['GeographyEnumNoDefault']
      namespaceDefinition?: components['schemas']['NamespaceDefinitionEnumNoDefault']
      /**
       * @description Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
       * @default null
       * @example ${SOURCE_NAMESPACE}
       */
      namespaceFormat?: string
      /** @description Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_” causes “projects” => “airbyte_projects”). */
      prefix?: string
      nonBreakingSchemaUpdatesBehavior?: components['schemas']['NonBreakingSchemaUpdatesBehaviorEnumNoDefault']
      status?: components['schemas']['ConnectionStatusEnum']
    }
    /**
     * Root Type for JobCreate
     * @description Creates a new Job from the configuration provided in the request body.
     * @example {
     *   "connectionId": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826",
     *   "jobType": "sync"
     * }
     */
    JobCreateRequest: {
      /** Format: UUID */
      connectionId: string
      jobType: components['schemas']['JobTypeEnum']
    }
    /** @enum {string} */
    JobStatusEnum:
      | 'pending'
      | 'running'
      | 'incomplete'
      | 'failed'
      | 'succeeded'
      | 'cancelled'
    /**
     * @description Enum that describes the different types of jobs that the platform runs.
     * @enum {string}
     */
    JobTypeEnum: 'sync' | 'reset'
    SourceCreateRequest: {
      /** @description Name of the source e.g. dev-mysql-instance. */
      name: string
      /**
       * Format: uuid
       * @description The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided.
       */
      definitionId?: string
      /** Format: uuid */
      workspaceId: string
      configuration: components['schemas']['SourceConfiguration']
      /** @description Optional secretID obtained through the  OAuth redirect flow. */
      secretId?: string
    }
    SourcePutRequest: {
      name: string
      configuration: components['schemas']['SourceConfiguration']
    }
    SourcePatchRequest: {
      /** @example My source */
      name?: string
      /** Format: uuid */
      workspaceId?: string
      configuration?: components['schemas']['SourceConfiguration']
      /** @description Optional secretID obtained through the  OAuth redirect flow. */
      secretId?: string
    }
    /**
     * Root Type for ConnectionResponse
     * @description Provides details of a single connection.
     */
    ConnectionResponse: {
      /** Format: UUID */
      connectionId: string
      name: string
      /** Format: UUID */
      sourceId: string
      /** Format: UUID */
      destinationId: string
      /** Format: UUID */
      workspaceId: string
      status: components['schemas']['ConnectionStatusEnum']
      schedule: components['schemas']['ConnectionScheduleResponse']
      dataResidency: components['schemas']['GeographyEnum']
      nonBreakingSchemaUpdatesBehavior?: components['schemas']['NonBreakingSchemaUpdatesBehaviorEnum']
      namespaceDefinition?: components['schemas']['NamespaceDefinitionEnum']
      namespaceFormat?: string
      prefix?: string
      configurations: components['schemas']['StreamConfigurations']
    }
    /** @description schedule for when the the connection should run, per the schedule type */
    AirbyteApiConnectionSchedule: {
      scheduleType: components['schemas']['ScheduleTypeEnum']
      cronExpression?: string
    }
    /** @enum {string} */
    ScheduleTypeEnum: 'manual' | 'cron'
    /** @description schedule for when the the connection should run, per the schedule type */
    ConnectionScheduleResponse: {
      scheduleType: components['schemas']['ScheduleTypeWithBasicEnum']
      cronExpression?: string
      basicTiming?: string
    }
    /** @enum {string} */
    ScheduleTypeWithBasicEnum: 'manual' | 'cron' | 'basic'
    /**
     * @default auto
     * @enum {string}
     */
    GeographyEnum: 'auto' | 'us' | 'eu'
    /** @enum {string} */
    GeographyEnumNoDefault: 'auto' | 'us' | 'eu'
    /** @enum {string} */
    ConnectionStatusEnum: 'active' | 'inactive' | 'deprecated'
    /**
     * @description Define the location where the data will be stored in the destination
     * @default destination
     * @enum {string}
     */
    NamespaceDefinitionEnum: 'source' | 'destination' | 'custom_format'
    /**
     * @description Set how Airbyte handles syncs when it detects a non-breaking schema change in the source
     * @default ignore
     * @enum {string}
     */
    NonBreakingSchemaUpdatesBehaviorEnum:
      | 'ignore'
      | 'disable_connection'
      | 'propagate_columns'
      | 'propagate_fully'
    /**
     * @description Define the location where the data will be stored in the destination
     * @enum {string}
     */
    NamespaceDefinitionEnumNoDefault: 'source' | 'destination' | 'custom_format'
    /**
     * @description Set how Airbyte handles syncs when it detects a non-breaking schema change in the source
     * @enum {string}
     */
    NonBreakingSchemaUpdatesBehaviorEnumNoDefault:
      | 'ignore'
      | 'disable_connection'
      | 'propagate_columns'
      | 'propagate_fully'
    /**
     * Root Type for DestinationResponse
     * @description Provides details of a single destination.
     * @example {
     *   "destinationId": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826",
     *   "name": "Analytics Team Postgres",
     *   "destinationType": "postgres",
     *   "workspaceId": "871d9b60-11d1-44cb-8c92-c246d53bf87e"
     * }
     */
    DestinationResponse: {
      /** Format: UUID */
      destinationId: string
      name: string
      destinationType: string
      /** Format: UUID */
      workspaceId: string
      configuration: components['schemas']['DestinationConfiguration']
    }
    /**
     * Root Type for SourceResponse
     * @description Provides details of a single source.
     * @example {
     *   "sourceId": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826",
     *   "name": "Analytics Team Postgres",
     *   "sourceType": "postgres",
     *   "workspaceId": "871d9b60-11d1-44cb-8c92-c246d53bf87e"
     * }
     */
    SourceResponse: {
      /** Format: UUID */
      sourceId: string
      name: string
      sourceType: string
      /** Format: UUID */
      workspaceId: string
      configuration: components['schemas']['SourceConfiguration']
    }
    DestinationCreateRequest: {
      /** @description Name of the destination e.g. dev-mysql-instance. */
      name: string
      /**
       * Format: uuid
       * @description The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided.
       */
      definitionId?: string
      /** Format: uuid */
      workspaceId: string
      configuration: components['schemas']['DestinationConfiguration']
    }
    DestinationPatchRequest: {
      name?: string
      configuration?: components['schemas']['DestinationConfiguration']
    }
    DestinationPutRequest: {
      name: string
      configuration: components['schemas']['DestinationConfiguration']
    }
    WorkspaceCreateRequest: {
      /** @description Name of the workspace */
      name: string
      /**
       * Format: uuid
       * @description ID of organization to add workspace to.
       */
      organizationId?: string
    }
    WorkspaceUpdateRequest: {
      /** @description Name of the workspace */
      name: string
    }
    /**
     * Root Type for WorkspaceResponse
     * @description Provides details of a single workspace.
     */
    WorkspaceResponse: {
      /** Format: UUID */
      workspaceId: string
      name: string
      dataResidency: components['schemas']['GeographyEnum']
    }
    PermissionCreateRequest: {
      permissionType: components['schemas']['PermissionType']
      userId: components['schemas']['UserId']
      workspaceId?: components['schemas']['WorkspaceId']
      organizationId?: components['schemas']['OrganizationId']
    }
    /**
     * Root Type for PermissionResponse
     * @description Provides details of a single permission.
     */
    PermissionResponse: {
      /** Format: uuid */
      permissionId: string
      permissionType: components['schemas']['PermissionType']
      userId: components['schemas']['UserId']
      workspaceId?: components['schemas']['WorkspaceId']
      organizationId?: components['schemas']['OrganizationId']
    }
    /**
     * Root Type for ConnectionsResponse
     * @example {
     *   "next": "https://api.airbyte.com/v1/connections?limit=5&offset=10",
     *   "previous": "https://api.airbyte.com/v1/connections?limit=5&offset=0",
     *   "data": [
     *     {
     *       "name": "test-connection"
     *     },
     *     {
     *       "connection_id": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826"
     *     },
     *     {
     *       "sourceId": "49237019-645d-47d4-b45b-5eddf97775ce"
     *     },
     *     {
     *       "destinationId": "al312fs-0ab1-4f72-9ed7-0b8fc27c5826"
     *     },
     *     {
     *       "schedule": {
     *         "scheduleType": "manual"
     *       }
     *     },
     *     {
     *       "status": "active"
     *     },
     *     {
     *       "dataResidency": "auto"
     *     }
     *   ]
     * }
     */
    ConnectionsResponse: {
      previous?: string
      next?: string
      /** @default [] */
      data: components['schemas']['ConnectionResponse'][]
    }
    /**
     * Root Type for SourcesResponse
     * @example {
     *   "next": "https://api.airbyte.com/v1/sources?limit=5&offset=10",
     *   "previous": "https://api.airbyte.com/v1/sources?limit=5&offset=0",
     *   "data": {
     *     "sourceId": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826",
     *     "name": "Analytics Team Postgres",
     *     "sourceType": "postgres",
     *     "workspaceId": "871d9b60-11d1-44cb-8c92-c246d53bf87e"
     *   }
     * }
     */
    SourcesResponse: {
      previous?: string
      next?: string
      data: components['schemas']['SourceResponse'][]
    }
    /**
     * Root Type for DestinationsResponse
     * @example {
     *   "next": "https://api.airbyte.com/v1/destinations?limit=5&offset=10",
     *   "previous": "https://api.airbyte.com/v1/destinations?limit=5&offset=0",
     *   "data": {
     *     "destinationId": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826",
     *     "name": "Analytics Team Postgres",
     *     "destinationType": "postgres",
     *     "workspaceId": "871d9b60-11d1-44cb-8c92-c246d53bf87e"
     *   }
     * }
     */
    DestinationsResponse: {
      previous?: string
      next?: string
      data: components['schemas']['DestinationResponse'][]
    }
    /**
     * Root Type for WorkspacesResponse
     * @example {
     *   "next": "https://api.airbyte.com/v1/workspaces?limit=5&offset=10",
     *   "previous": "https://api.airbyte.com/v1/workspaces?limit=5&offset=0",
     *   "data": {
     *     "workspaceId": "18dccc91-0ab1-4f72-9ed7-0b8fc27c5826",
     *     "name": "Acme Company",
     *     "dataResidency": "auto"
     *   }
     * }
     */
    WorkspacesResponse: {
      previous?: string
      next?: string
      data: components['schemas']['WorkspaceResponse'][]
    }
    /** @description Configurations for a single stream. */
    StreamConfiguration: {
      name: string
      syncMode?: components['schemas']['ConnectionSyncModeEnum']
      /** @description Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental` unless there is a default. */
      cursorField?: string[]
      /** @description Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup` unless it is already supplied by the source schema. */
      primaryKey?: string[][]
    }
    /** @description A list of configured stream options for a connection. */
    StreamConfigurations: {
      streams?: components['schemas']['StreamConfiguration'][]
    }
    /** @description A list of stream properties. */
    StreamPropertiesResponse: components['schemas']['StreamProperties'][]
    /** @description The stream properties associated with a connection. */
    StreamProperties: {
      streamName?: string
      syncModes?: components['schemas']['ConnectionSyncModeEnum'][]
      defaultCursorField?: string[]
      sourceDefinedCursorField?: boolean
      sourceDefinedPrimaryKey?: string[][]
      propertyFields?: string[][]
    }
    /** @enum {unknown} */
    ConnectionSyncModeEnum:
      | 'full_refresh_overwrite'
      | 'full_refresh_append'
      | 'incremental_append'
      | 'incremental_deduped_history'
    /**
     * @description Whether you're setting this override for a source or destination
     * @enum {unknown}
     */
    ActorTypeEnum: 'source' | 'destination'
    trello: unknown
    /** Zendesk Chat Spec */
    'zendesk-chat': {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your OAuth application
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your OAuth application.
         */
        client_secret?: string
      }
    }
    /** Google Ads Spec */
    'google-ads': {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your Google Ads developer application. For detailed instructions on finding this value, refer to our <a href="https://docs.airbyte.com/integrations/sources/google-ads#setup-guide">documentation</a>.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your Google Ads developer application. For detailed instructions on finding this value, refer to our <a href="https://docs.airbyte.com/integrations/sources/google-ads#setup-guide">documentation</a>.
         */
        client_secret?: string
        /**
         * Developer Token
         * @description The Developer Token granted by Google to use their APIs. For detailed instructions on finding this value, refer to our <a href="https://docs.airbyte.com/integrations/sources/google-ads#setup-guide">documentation</a>.
         */
        developer_token?: string
      }
    }
    /** Google Search Console Spec */
    'google-search-console': {
      authorization?: {
        /**
         * Client ID
         * @description The client ID of your Google Search Console developer application. Read more <a href="https://developers.google.com/webmaster-tools/v1/how-tos/authorizing">here</a>.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The client secret of your Google Search Console developer application. Read more <a href="https://developers.google.com/webmaster-tools/v1/how-tos/authorizing">here</a>.
         */
        client_secret?: string
      }
    }
    /** Strava Spec */
    strava: {
      /**
       * Client ID
       * @description The Client ID of your Strava developer application.
       */
      client_id?: string
      /**
       * Client Secret
       * @description The Client Secret of your Strava developer application.
       */
      client_secret?: string
    }
    /** Shopify Source CDK Specifications */
    shopify: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of the Shopify developer application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of the Shopify developer application.
         */
        client_secret?: string
      }
    }
    /** Retently Api Spec */
    retently: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your Retently developer application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your Retently developer application.
         */
        client_secret?: string
      }
    }
    /** Source Instagram */
    instagram: {
      /**
       * Client Id
       * @description The Client ID for your Oauth application
       */
      client_id?: string
      /**
       * Client Secret
       * @description The Client Secret for your Oauth application
       */
      client_secret?: string
    }
    /** SourceAzureBlobStorageSpec */
    'azure-blob-storage': {
      credentials?: {
        /**
         * Client ID
         * @description Client ID of your Microsoft developer application
         */
        client_id?: string
        /**
         * Client Secret
         * @description Client Secret of your Microsoft developer application
         */
        client_secret?: string
      }
    }
    'zendesk-sunshine': {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your OAuth application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your OAuth application.
         */
        client_secret?: string
      }
    }
    /** Snapchat Marketing Spec */
    'snapchat-marketing': {
      /**
       * Client ID
       * @description The Client ID of your Snapchat developer application.
       */
      client_id?: string
      /**
       * Client Secret
       * @description The Client Secret of your Snapchat developer application.
       */
      client_secret?: string
    }
    /** Source Gitlab Spec */
    gitlab: {
      credentials?: {
        /** @description The API ID of the Gitlab developer application. */
        client_id?: string
        /** @description The API Secret the Gitlab developer application. */
        client_secret?: string
      }
    }
    /** Snowflake Source Spec */
    snowflake: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your Snowflake developer application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your Snowflake developer application.
         */
        client_secret?: string
      }
    }
    /** Microsoft SharePoint Source Spec */
    'microsoft-sharepoint': {
      credentials?: {
        /**
         * Client ID
         * @description Client ID of your Microsoft developer application
         */
        client_id?: string
        /**
         * Client Secret
         * @description Client Secret of your Microsoft developer application
         */
        client_secret?: string
      }
    }
    /** Smartsheets Source Spec */
    smartsheets: {
      credentials?: {
        /** @description The API ID of the SmartSheets developer application. */
        client_id?: string
        /** @description The API Secret the SmartSheets developer application. */
        client_secret?: string
      }
    }
    /** Notion Source Spec */
    notion: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your Notion integration. See our <a href='https://docs.airbyte.com/integrations/sources/notion#step-2-set-permissions-and-acquire-authorization-credentials'>docs</a> for more information.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your Notion integration. See our <a href='https://docs.airbyte.com/integrations/sources/notion#step-2-set-permissions-and-acquire-authorization-credentials'>docs</a> for more information.
         */
        client_secret?: string
      }
    }
    /** Slack Spec */
    slack: {
      credentials?: {
        /**
         * Client ID
         * @description Slack client_id. See our <a href="https://docs.airbyte.com/integrations/sources/slack">docs</a> if you need help finding this id.
         */
        client_id?: string
        /**
         * Client Secret
         * @description Slack client_secret. See our <a href="https://docs.airbyte.com/integrations/sources/slack">docs</a> if you need help finding this secret.
         */
        client_secret?: string
      }
    }
    /** YouTube Analytics Spec */
    'youtube-analytics': {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your developer application
         */
        client_id?: string
        /**
         * Client Secret
         * @description The client secret of your developer application
         */
        client_secret?: string
      }
    }
    /** Google Sheets Source Spec */
    'google-sheets': {
      credentials?: {
        /**
         * Client ID
         * @description Enter your Google application's Client ID. See <a href='https://developers.google.com/identity/protocols/oauth2'>Google's documentation</a> for more information.
         */
        client_id?: string
        /**
         * Client Secret
         * @description Enter your Google application's Client Secret. See <a href='https://developers.google.com/identity/protocols/oauth2'>Google's documentation</a> for more information.
         */
        client_secret?: string
      }
    }
    /** Source Zendesk Talk Spec */
    'zendesk-talk': {
      credentials?: {
        /**
         * Client ID
         * @description Client ID
         */
        client_id?: string
        /**
         * Client Secret
         * @description Client Secret
         */
        client_secret?: string
      }
    }
    /** Asana Spec */
    asana: {
      credentials?: {
        client_id?: string
        client_secret?: string
      }
    }
    /** Microsoft Teams Spec */
    'microsoft-teams': {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your Microsoft Teams developer application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your Microsoft Teams developer application.
         */
        client_secret?: string
      }
    }
    /** Amazon Seller Partner Spec */
    'amazon-seller-partner': {
      /**
       * LWA Client Id
       * @description Your Login with Amazon Client ID.
       */
      lwa_app_id?: string
      /**
       * LWA Client Secret
       * @description Your Login with Amazon Client Secret.
       */
      lwa_client_secret?: string
    }
    /** Linkedin Ads Spec */
    'linkedin-ads': {
      credentials?: {
        /**
         * Client ID
         * @description The client ID of your developer application. Refer to our <a href='https://docs.airbyte.com/integrations/sources/linkedin-ads#setup-guide'>documentation</a> for more information.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The client secret of your developer application. Refer to our <a href='https://docs.airbyte.com/integrations/sources/linkedin-ads#setup-guide'>documentation</a> for more information.
         */
        client_secret?: string
      }
    }
    /** Pinterest Spec */
    pinterest: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your OAuth application
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your OAuth application.
         */
        client_secret?: string
      }
    }
    /** Source Zendesk Support Spec */
    'zendesk-support': {
      credentials?: {
        /**
         * Client ID
         * @description The OAuth client's ID. See <a href="https://docs.searchunify.com/Content/Content-Sources/Zendesk-Authentication-OAuth-Client-ID-Secret.htm#:~:text=Get%20Client%20ID%20and%20Client%20Secret&text=Go%20to%20OAuth%20Clients%20and,will%20be%20displayed%20only%20once.">this guide</a> for more information.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The OAuth client secret. See <a href="https://docs.searchunify.com/Content/Content-Sources/Zendesk-Authentication-OAuth-Client-ID-Secret.htm#:~:text=Get%20Client%20ID%20and%20Client%20Secret&text=Go%20to%20OAuth%20Clients%20and,will%20be%20displayed%20only%20once.">this guide</a> for more information.
         */
        client_secret?: string
      }
    }
    /** Microsoft OneDrive Source Spec */
    'microsoft-onedrive': {
      credentials?: {
        /**
         * Client ID
         * @description Client ID of your Microsoft developer application
         */
        client_id?: string
        /**
         * Client Secret
         * @description Client Secret of your Microsoft developer application
         */
        client_secret?: string
      }
    }
    /** TikTok Marketing Source Spec */
    'tiktok-marketing': {
      credentials?: {
        /**
         * App ID
         * @description The Developer Application App ID.
         */
        app_id?: string
        /**
         * Secret
         * @description The Developer Application Secret.
         */
        secret?: string
      }
    }
    /** HubSpot Source Spec */
    hubspot: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your HubSpot developer application. See the <a href="https://legacydocs.hubspot.com/docs/methods/oauth2/oauth2-quickstart">Hubspot docs</a> if you need help finding this ID.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The client secret for your HubSpot developer application. See the <a href="https://legacydocs.hubspot.com/docs/methods/oauth2/oauth2-quickstart">Hubspot docs</a> if you need help finding this secret.
         */
        client_secret?: string
      }
    }
    /** Google Analytics (Data API) Spec */
    'google-analytics-data-api': {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your Google Analytics developer application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your Google Analytics developer application.
         */
        client_secret?: string
      }
    }
    /** Source Intercom Spec */
    intercom: {
      /**
       * Client Id
       * @description Client Id for your Intercom application.
       */
      client_id?: string
      /**
       * Client Secret
       * @description Client Secret for your Intercom application.
       */
      client_secret?: string
    }
    typeform: {
      credentials?: {
        /** @description The Client ID of the Typeform developer application. */
        client_id?: string
        /** @description The Client Secret the Typeform developer application. */
        client_secret?: string
      }
    }
    /** Source Facebook Marketing */
    'facebook-marketing': {
      /**
       * Client Id
       * @description The Client Id for your OAuth app
       */
      client_id?: string
      /**
       * Client Secret
       * @description The Client Secret for your OAuth app
       */
      client_secret?: string
    }
    surveymonkey: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of the SurveyMonkey developer application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of the SurveyMonkey developer application.
         */
        client_secret?: string
      }
    }
    /** Bing Ads Spec */
    'bing-ads': {
      /**
       * Client ID
       * @description The Client ID of your Microsoft Advertising developer application.
       */
      client_id?: string
      /**
       * Client Secret
       * @description The Client Secret of your Microsoft Advertising developer application.
       * @default
       */
      client_secret?: string
    }
    /** Monday Spec */
    monday: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your OAuth application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your OAuth application.
         */
        client_secret?: string
      }
    }
    /** Amazon Ads Spec */
    'amazon-ads': {
      /**
       * Client ID
       * @description The client ID of your Amazon Ads developer application. See the <a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret">docs</a> for more information.
       */
      client_id?: string
      /**
       * Client Secret
       * @description The client secret of your Amazon Ads developer application. See the <a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret">docs</a> for more information.
       */
      client_secret?: string
    }
    /** GitHub Source Spec */
    github: {
      credentials?: {
        /**
         * Client Id
         * @description OAuth Client Id
         */
        client_id?: string
        /**
         * Client ssecret
         * @description OAuth Client secret
         */
        client_secret?: string
      }
    }
    /** Square Spec */
    square: {
      credentials?: {
        /**
         * Client ID
         * @description The Square-issued ID of your application
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Square-issued application secret for your application
         */
        client_secret?: string
      }
    }
    /** Mailchimp Spec */
    mailchimp: {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your OAuth application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your OAuth application.
         */
        client_secret?: string
      }
    }
    /** Airtable Source Spec */
    airtable: {
      credentials?: {
        /**
         * Client ID
         * @description The client ID of the Airtable developer application.
         */
        client_id?: string
        /**
         * Client secret
         * @description The client secret the Airtable developer application.
         */
        client_secret?: string
      }
    }
    /** Salesforce Source Spec */
    salesforce: {
      /**
       * Client ID
       * @description Enter your Salesforce developer application's <a href="https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG">Client ID</a>
       */
      client_id?: string
      /**
       * Client Secret
       * @description Enter your Salesforce developer application's <a href="https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG">Client secret</a>
       */
      client_secret?: string
    }
    /** Lever Hiring Source Spec */
    'lever-hiring': {
      credentials?: {
        /**
         * Client ID
         * @description The Client ID of your Lever Hiring developer application.
         */
        client_id?: string
        /**
         * Client Secret
         * @description The Client Secret of your Lever Hiring developer application.
         */
        client_secret?: string
      }
    }
    /** Google Drive Source Spec */
    'google-drive': {
      credentials?: {
        /**
         * Client ID
         * @description Client ID for the Google Drive API
         */
        client_id?: string
        /**
         * Client Secret
         * @description Client Secret for the Google Drive API
         */
        client_secret?: string
      }
    }
    /**
     * @description The values required to configure the source.
     * @example {
     *   "user": "charles"
     * }
     */
    OAuthCredentialsConfiguration:
      | components['schemas']['airtable']
      | components['schemas']['amazon-ads']
      | components['schemas']['amazon-seller-partner']
      | components['schemas']['asana']
      | components['schemas']['azure-blob-storage']
      | components['schemas']['bing-ads']
      | components['schemas']['facebook-marketing']
      | components['schemas']['github']
      | components['schemas']['gitlab']
      | components['schemas']['google-ads']
      | components['schemas']['google-analytics-data-api']
      | components['schemas']['google-drive']
      | components['schemas']['google-search-console']
      | components['schemas']['google-sheets']
      | components['schemas']['hubspot']
      | components['schemas']['instagram']
      | components['schemas']['intercom']
      | components['schemas']['lever-hiring']
      | components['schemas']['linkedin-ads']
      | components['schemas']['mailchimp']
      | components['schemas']['microsoft-onedrive']
      | components['schemas']['microsoft-sharepoint']
      | components['schemas']['microsoft-teams']
      | components['schemas']['monday']
      | components['schemas']['notion']
      | components['schemas']['pinterest']
      | components['schemas']['retently']
      | components['schemas']['salesforce']
      | components['schemas']['shopify']
      | components['schemas']['slack']
      | components['schemas']['smartsheets']
      | components['schemas']['snapchat-marketing']
      | components['schemas']['snowflake']
      | components['schemas']['square']
      | components['schemas']['strava']
      | components['schemas']['surveymonkey']
      | components['schemas']['tiktok-marketing']
      | components['schemas']['trello']
      | components['schemas']['typeform']
      | components['schemas']['youtube-analytics']
      | components['schemas']['zendesk-chat']
      | components['schemas']['zendesk-sunshine']
      | components['schemas']['zendesk-support']
      | components['schemas']['zendesk-talk']
    /**
     * @description The values required to configure the source.
     * @example {
     *   "user": "charles"
     * }
     */
    SourceConfiguration: unknown
    /**
     * @description The values required to configure the destination.
     * @example {
     *   "user": "charles"
     * }
     */
    DestinationConfiguration: unknown
    /**
     * Root Type for initiate-oauth-post-body
     * @description POST body for initiating OAuth via the public API
     * @example {
     *   "redirectUrl": "https://cloud.airbyte.io/v1/api/oauth/callback",
     *   "workspaceId": "871d9b60-11d1-44cb-8c92-c246d53bf87e",
     *   "destinationId": "3d93b16c-ff5f-421c-8908-5a3c82088f14"
     * }
     */
    InitiateOauthRequest: {
      /** @description The URL to redirect the user to with the OAuth secret stored in the secret_id query string parameter after authentication is complete. */
      redirectUrl: string
      /**
       * Format: uuid
       * @description The workspace to create the secret and eventually the full source.
       */
      workspaceId: string
      /** @description Input configuration for OAuth required by some sources. */
      oAuthInputConfiguration?: components['schemas']['OAuthInputConfiguration']
      sourceType: components['schemas']['OAuthActorNames']
    }
    /**
     * Root Type for WorkspaceOAuthCredentials
     * @description POST body for creating/updating workspace level OAuth credentials
     */
    WorkspaceOAuthCredentialsRequest: {
      actorType: components['schemas']['ActorTypeEnum']
      name: components['schemas']['OAuthActorNames']
      configuration: components['schemas']['OAuthCredentialsConfiguration']
    }
    /** @enum {unknown} */
    OAuthActorNames:
      | 'airtable'
      | 'amazon-ads'
      | 'amazon-seller-partner'
      | 'asana'
      | 'azure-blob-storage'
      | 'bing-ads'
      | 'facebook-marketing'
      | 'github'
      | 'gitlab'
      | 'google-ads'
      | 'google-analytics-data-api'
      | 'google-drive'
      | 'google-search-console'
      | 'google-sheets'
      | 'hubspot'
      | 'instagram'
      | 'intercom'
      | 'lever-hiring'
      | 'linkedin-ads'
      | 'mailchimp'
      | 'microsoft-onedrive'
      | 'microsoft-sharepoint'
      | 'microsoft-teams'
      | 'monday'
      | 'notion'
      | 'pinterest'
      | 'retently'
      | 'salesforce'
      | 'slack'
      | 'smartsheets'
      | 'snapchat-marketing'
      | 'snowflake'
      | 'square'
      | 'strava'
      | 'surveymonkey'
      | 'tiktok-marketing'
      | 'trello'
      | 'typeform'
      | 'youtube-analytics'
      | 'zendesk-chat'
      | 'zendesk-sunshine'
      | 'zendesk-support'
      | 'zendesk-talk'
  }
  responses: {
    /** @description Response from the initiate OAuth call should be an object with a single property which will be the `redirect_url`. If a user is redirected to this URL, they'll be prompted by the identity provider to authenticate. */
    InitiateOauthResponse: {
      content: {
        'application/json': unknown
      }
    }
  }
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /** List workspaces */
  listWorkspaces: {
    parameters: {
      query?: {
        /** @description The UUIDs of the workspaces you wish to fetch. Empty list will retrieve all allowed workspaces. */
        workspaceIds?: string[]
        /** @description Include deleted workspaces in the returned results. */
        includeDeleted?: boolean
        /** @description Set the limit on the number of workspaces returned. The default is 20. */
        limit?: number
        /** @description Set the offset to start at when returning workspaces. The default is 0 */
        offset?: number
      }
    }
    responses: {
      /** @description Successful operation */
      200: {
        content: {
          'application/json': components['schemas']['WorkspacesResponse']
        }
      }
      /** @description Not allowed */
      403: {
        content: never
      }
      /** @description Not found */
      404: {
        content: never
      }
    }
  }
  /** Create a workspace */
  createWorkspace: {
    requestBody: {
      content: {
        'application/json': components['schemas']['WorkspaceCreateRequest']
      }
    }
    responses: {
      /** @description Successful operation */
      200: {
        content: {
          'application/json': components['schemas']['WorkspaceResponse']
        }
      }
      /** @description Invalid data */
      400: {
        content: never
      }
      /** @description Not allowed */
      403: {
        content: never
      }
    }
  }
  /** Get Workspace details */
  getWorkspace: {
    parameters: {
      path: {
        workspaceId: string
      }
    }
    responses: {
      /** @description Get a Workspace by the id in the path. */
      200: {
        content: {
          'application/json': components['schemas']['WorkspaceResponse']
        }
      }
      /** @description Not allowed */
      403: {
        content: never
      }
      /** @description Not found */
      404: {
        content: never
      }
    }
  }
  /** Delete a Workspace */
  deleteWorkspace: {
    parameters: {
      path: {
        workspaceId: string
      }
    }
    responses: {
      /** @description The resource was deleted successfully */
      204: {
        content: never
      }
      /** @description Not allowed */
      403: {
        content: never
      }
      /** @description Not found */
      404: {
        content: never
      }
    }
  }
  /** Update a workspace */
  updateWorkspace: {
    parameters: {
      path: {
        workspaceId: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['WorkspaceUpdateRequest']
      }
    }
    responses: {
      /** @description Successful operation */
      200: {
        content: {
          'application/json': components['schemas']['WorkspaceResponse']
        }
      }
      /** @description Invalid data */
      400: {
        content: never
      }
      /** @description Not allowed */
      403: {
        content: never
      }
    }
  }
  /**
   * Create OAuth override credentials for a workspace and source type.
   * @description Create/update a set of OAuth credentials to override the Airbyte-provided OAuth credentials used for source/destination OAuth.
   * In order to determine what the credential configuration needs to be, please see the connector specification of the relevant  source/destination.
   */
  createOrUpdateWorkspaceOAuthCredentials: {
    parameters: {
      path: {
        workspaceId: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['WorkspaceOAuthCredentialsRequest']
      }
    }
    responses: {
      /** @description OAuth credential override was successful. */
      200: {
        content: never
      }
      /** @description A field in the body has not been set appropriately. */
      400: {
        content: never
      }
      /** @description API key is invalid. */
      403: {
        content: never
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
