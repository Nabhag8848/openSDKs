/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

/** OneOf type helpers */
type Without<T, U> = {[P in Exclude<keyof T, keyof U>]?: never}
type XOR<T, U> = T | U extends object
  ? (Without<T, U> & U) | (Without<U, T> & T)
  : T | U
type OneOf<T extends any[]> = T extends [infer Only]
  ? Only
  : T extends [infer A, infer B, ...infer Rest]
    ? OneOf<[XOR<A, B>, ...Rest]>
    : never

export interface paths {
  '/v1/access-groups/{idOrName}': {
    /**
     * Reads an access group
     * @description Allows to read an access group
     */
    get: operations['readAccessGroup']
    /**
     * Update an access group
     * @description Allows to update an access group metadata
     */
    post: operations['updateAccessGroup']
    /**
     * Deletes an access group
     * @description Allows to delete an access group
     */
    delete: operations['deleteAccessGroup']
  }
  '/v1/access-groups/{idOrName}/members': {
    /**
     * List members of an access group
     * @description List members of an access group
     */
    get: operations['listAccessGroupMembers']
  }
  '/v1/access-groups': {
    /**
     * List access groups for a team, project or member
     * @description List access groups
     */
    get: operations['listAccessGroups']
    /**
     * Creates an access group
     * @description Allows to create an access group
     */
    post: operations['createAccessGroup']
  }
  '/v1/access-groups/{idOrName}/projects': {
    /**
     * List projects of an access group
     * @description List projects of an access group
     */
    get: operations['listAccessGroupProjects']
  }
  '/v8/artifacts/events': {
    /**
     * Record an artifacts cache usage event
     * @description Records an artifacts cache usage event. The body of this request is an array of cache usage events. The supported event types are `HIT` and `MISS`. The source is either `LOCAL` the cache event was on the users filesystem cache or `REMOTE` if the cache event is for a remote cache. When the event is a `HIT` the request also accepts a number `duration` which is the time taken to generate the artifact in the cache.
     */
    post: operations['recordEvents']
  }
  '/v8/artifacts/status': {
    /**
     * Get status of Remote Caching for this principal
     * @description Check the status of Remote Caching for this principal. Returns a JSON-encoded status indicating if Remote Caching is enabled, disabled, or disabled due to usage limits.
     */
    get: operations['status']
  }
  '/v8/artifacts/{hash}': {
    /**
     * Download a cache artifact
     * @description Downloads a cache artifact indentified by its `hash` specified on the request path. The artifact is downloaded as an octet-stream. The client should verify the content-length header and response body.
     */
    get: operations['downloadArtifact']
    /**
     * Upload a cache artifact
     * @description Uploads a cache artifact identified by the `hash` specified on the path. The cache artifact can then be downloaded with the provided `hash`.
     */
    put: operations['uploadArtifact']
    /**
     * Check if a cache artifact exists
     * @description Check that a cache artifact with the given `hash` exists. This request returns response headers only and is equivalent to a `GET` request to this endpoint where the response contains no body.
     */
    head: operations['artifactExists']
  }
  '/v8/artifacts': {
    /**
     * Query information about an artifact
     * @description Query information about an array of artifacts.
     */
    post: operations['artifactQuery']
  }
  '/deployments/{deploymentId}/builds': {
    /** @description Retrieves the list of builds given their deployment's unique identifier. No longer listed as public API as of May 2023. */
    get: {
      parameters: {
        path: {
          /** @description The deployment unique identifier */
          deploymentId: string
        }
      }
      responses: {
        200: {
          content: {
            'application/json': {
              builds: {
                /** @description The unique identifier of the Build */
                id: string
                /** @description The unique identifier of the deployment */
                deploymentId: string
                /** @description The entrypoint of the deployment */
                entrypoint: string
                /**
                 * @description The state of the deployment depending on the process of deploying, or if it is ready or in an error state
                 * @enum {string}
                 */
                readyState:
                  | 'INITIALIZING'
                  | 'BUILDING'
                  | 'UPLOADING'
                  | 'DEPLOYING'
                  | 'READY'
                  | 'ARCHIVED'
                  | 'ERROR'
                  | 'QUEUED'
                  | 'CANCELED'
                /** @description The time at which the Build state was last modified */
                readyStateAt?: number
                /** @description The time at which the Build was scheduled to be built */
                scheduledAt?: number | null
                /** @description The time at which the Build was created */
                createdAt?: number
                /** @description The time at which the Build was deployed */
                deployedAt?: number
                /** @description The region where the Build was first created */
                createdIn?: string
                /** @description The Runtime the Build used to generate the output */
                use?: string
                /** @description An object that contains the Build's configuration */
                config?: {
                  distDir?: string
                  forceBuildIn?: string
                  reuseWorkPathFrom?: string
                  zeroConfig?: boolean
                }
                /** @description A list of outputs for the Build that can be either Serverless Functions or static files */
                output: {
                  /**
                   * @description The type of the output
                   * @enum {string}
                   */
                  type?: 'lambda' | 'file' | 'edge'
                  /** @description The absolute path of the file or Serverless Function */
                  path: string
                  /** @description The SHA1 of the file */
                  digest: string
                  /** @description The POSIX file permissions */
                  mode: number
                  /** @description The size of the file in bytes */
                  size?: number
                  /** @description If the output is a Serverless Function, an object containing the name, location and memory size of the function */
                  lambda?: {
                    functionName: string
                    deployedTo: string[]
                    memorySize?: number
                    timeout?: number
                    layers?: string[]
                  } | null
                  /** @description Exists if the output is an edge function. */
                  edge?: {
                    /** @description The regions where the edge function will be invoked. Only exists if the edge function as a regional edge function, see: https://vercel.com/docs/concepts/edge-network/regions#setting-edge-function-regions */
                    regions: string[] | null
                  } | null
                }[]
                /** @description If the Build uses the `@vercel/static` Runtime, it contains a hashed string of all outputs */
                fingerprint?: string | null
                copiedFrom?: string
              }[]
            }
          }
        }
        /** @description One of the provided values in the request query is invalid. */
        400: {
          content: never
        }
        401: {
          content: never
        }
        /** @description You do not have permission to access this resource. */
        403: {
          content: never
        }
        /** @description Deployment was not found */
        404: {
          content: never
        }
      }
    }
  }
  '/v1/deployments/{deploymentId}/checks': {
    /**
     * Retrieve a list of all checks
     * @description List all of the checks created for a deployment.
     */
    get: operations['getAllChecks']
    /**
     * Creates a new Check
     * @description Creates a new check. This endpoint must be called with an OAuth2 or it will produce a 400 error.
     */
    post: operations['createCheck']
  }
  '/v1/deployments/{deploymentId}/checks/{checkId}': {
    /**
     * Get a single check
     * @description Return a detailed response for a single check.
     */
    get: operations['getCheck']
    /**
     * Update a check
     * @description Update an existing check. This endpoint must be called with an OAuth2 or it will produce a 400 error.
     */
    patch: operations['updateCheck']
  }
  '/v1/deployments/{deploymentId}/checks/{checkId}/rerequest': {
    /**
     * Rerequest a check
     * @description Rerequest a selected check that has failed.
     */
    post: operations['rerequestCheck']
  }
  '/data-cache/purge-all': {
    delete: {
      parameters: {
        query: {
          projectIdOrName: string
        }
      }
      responses: {
        200: {
          content: never
        }
        /** @description One of the provided values in the request query is invalid. */
        400: {
          content: never
        }
        401: {
          content: never
        }
        /** @description You do not have permission to access this resource. */
        403: {
          content: never
        }
        404: {
          content: never
        }
      }
    }
  }
  '/data-cache/billing-settings': {
    patch: {
      requestBody?: {
        content: {
          'application/json': {
            excessBillingEnabled?: boolean
          }
        }
      }
      responses: {
        200: {
          content: {
            'application/json': {
              excessBillingEnabled?: boolean
            }
          }
        }
        /** @description One of the provided values in the request body is invalid. */
        400: {
          content: never
        }
        401: {
          content: never
        }
        /** @description You do not have permission to access this resource. */
        403: {
          content: never
        }
        404: {
          content: never
        }
      }
    }
  }
  '/v1/data-cache/projects/{projectId}': {
    /**
     * Update the data cache feature
     * @description Update the data cache feature on a project.
     */
    patch: operations['updateProjectDataCache']
  }
  '/v2/deployments/{idOrUrl}/events': {
    /**
     * Get deployment events
     * @description Get the build logs of a deployment by deployment ID and build ID. It can work as an infinite stream of logs or as a JSON endpoint depending on the input parameters.
     */
    get: operations['getDeploymentEvents']
  }
  '/v13/deployments/{idOrUrl}': {
    /**
     * Get a deployment by ID or URL
     * @description Retrieves information for a deployment either by supplying its ID (`id` property) or Hostname (`url` property). Additional details will be included when the authenticated user or team is an owner of the deployment.
     */
    get: operations['getDeployment']
  }
  '/v13/deployments': {
    /**
     * Create a new deployment
     * @description Create a new deployment with all the required and intended data. If the deployment is not a git deployment, all files must be provided with the request, either referenced or inlined. Additionally, a deployment id can be specified to redeploy a previous deployment.
     */
    post: operations['createDeployment']
  }
  '/v12/deployments/{id}/cancel': {
    /**
     * Cancel a deployment
     * @description This endpoint allows you to cancel a deployment which is currently building, by supplying its `id` in the URL.
     */
    patch: operations['cancelDeployment']
  }
  '/v4/domains/buy': {
    /**
     * Purchase a domain
     * @description Allows to purchase the specified domain.
     */
    post: operations['buyDomain']
  }
  '/v4/domains/price': {
    /**
     * Check the price for a domain
     * @description Check the price to purchase a domain and how long a single purchase period is.
     */
    get: operations['checkDomainPrice']
  }
  '/v4/domains/{domain}/records': {
    /**
     * List existing DNS records
     * @description Retrieves a list of DNS records created for a domain name. By default it returns 20 records if no limit is provided. The rest can be retrieved using the pagination options.
     */
    get: operations['getRecords']
  }
  '/v2/domains/{domain}/records': {
    /**
     * Create a DNS record
     * @description Creates a DNS record for a domain.
     */
    post: operations['createRecord']
  }
  '/v1/domains/records/{recordId}': {
    /**
     * Update an existing DNS record
     * @description Updates an existing DNS record for a domain name.
     */
    patch: operations['updateRecord']
  }
  '/v2/domains/{domain}/records/{recordId}': {
    /**
     * Delete a DNS record
     * @description Removes an existing DNS record from a domain name.
     */
    delete: operations['removeRecord']
  }
  '/v4/domains/status': {
    /**
     * Check a Domain Availability
     * @description Check if a domain name is available for purchase.
     */
    get: operations['checkDomainStatus']
  }
  '/v1/domains/{domain}/registry': {
    /**
     * Get domain transfer info.
     * @description Fetch domain transfer availability or transfer status if a transfer is in progress.
     */
    get: operations['getDomainTransfer']
  }
  '/v6/domains/{domain}/config': {
    /**
     * Get a Domain's configuration
     * @description Get a Domain's configuration.
     */
    get: operations['getDomainConfig']
  }
  '/v5/domains/{domain}': {
    /**
     * Get Information for a Single Domain
     * @description Get information for a single domain in an account or team.
     */
    get: operations['getDomain']
  }
  '/v5/domains': {
    /**
     * List all the domains
     * @description Retrieves a list of domains registered for the authenticated user or team. By default it returns the last 20 domains if no limit is provided.
     */
    get: operations['getDomains']
    /**
     * Register or transfer-in a new Domain
     * @description This endpoint is used for adding a new apex domain name with Vercel for the authenticating user. Can also be used for initiating a domain transfer request from an external Registrar to Vercel.
     */
    post: operations['createOrTransferDomain']
  }
  '/v3/domains/{domain}': {
    /**
     * Update or move apex domain
     * @description Update or move apex domain.
     */
    patch: operations['patchDomain']
  }
  '/v6/domains/{domain}': {
    /**
     * Remove a domain by name
     * @description Delete a previously registered domain name from Vercel. Deleting a domain will automatically remove any associated aliases.
     */
    delete: operations['deleteDomain']
  }
  '/v1/edge-config': {
    /**
     * Get Edge Configs
     * @description Returns all Edge Configs.
     */
    get: operations['getEdgeConfigs']
    /**
     * Create an Edge Config
     * @description Creates an Edge Config.
     */
    post: operations['createEdgeConfig']
  }
  '/v1/edge-config/{edgeConfigId}': {
    /**
     * Get an Edge Config
     * @description Returns an Edge Config.
     */
    get: operations['getEdgeConfig']
    /**
     * Update an Edge Config
     * @description Updates an Edge Config.
     */
    put: operations['updateEdgeConfig']
    /**
     * Delete an Edge Config
     * @description Delete an Edge Config by id.
     */
    delete: operations['deleteEdgeConfig']
  }
  '/v1/edge-config/{edgeConfigId}/items': {
    /**
     * Get Edge Config items
     * @description Returns all items of an Edge Config.
     */
    get: operations['getEdgeConfigItems']
    /**
     * Update Edge Config items in batch
     * @description Update multiple Edge Config Items in batch.
     */
    patch: operations['patchEdgeConfigItems']
  }
  '/v1/edge-config/{edgeConfigId}/schema': {
    /**
     * Get Edge Config schema
     * @description Returns the schema of an Edge Config.
     */
    get: operations['getEdgeConfigSchema']
    /**
     * Update Edge Config schema
     * @description Update an Edge Config's schema.
     */
    post: operations['patchEdgeConfigSchema']
    /**
     * Delete an Edge Config's schema
     * @description Deletes the schema of existing Edge Config.
     */
    delete: operations['deleteEdgeConfigSchema']
  }
  '/v1/edge-config/{edgeConfigId}/item/{edgeConfigItemKey}': {
    /**
     * Get an Edge Config item
     * @description Returns a specific Edge Config Item.
     */
    get: operations['getEdgeConfigItem']
  }
  '/v1/edge-config/{edgeConfigId}/tokens': {
    /**
     * Get all tokens of an Edge Config
     * @description Returns all tokens of an Edge Config.
     */
    get: operations['getEdgeConfigTokens']
    /**
     * Delete one or more Edge Config tokens
     * @description Deletes one or more tokens of an existing Edge Config.
     */
    delete: operations['deleteEdgeConfigTokens']
  }
  '/v1/edge-config/{edgeConfigId}/token/{token}': {
    /**
     * Get Edge Config token meta data
     * @description Return meta data about an Edge Config token.
     */
    get: operations['getEdgeConfigToken']
  }
  '/v1/edge-config/{edgeConfigId}/token': {
    /**
     * Create an Edge Config token
     * @description Adds a token to an existing Edge Config.
     */
    post: operations['createEdgeConfigToken']
  }
  '/v3/events': {
    /**
     * List User Events
     * @description Retrieves a list of "events" generated by the User on Vercel. Events are generated when the User performs a particular action, such as logging in, creating a deployment, and joining a Team (just to name a few). When the `teamId` parameter is supplied, then the events that are returned will be in relation to the Team that was specified.
     */
    get: operations['listUserEvents']
  }
  '/v1/integrations/configurations': {
    /**
     * Get configurations for the authenticated user or team
     * @description Allows to retrieve all configurations for an authenticated integration. When the `project` view is used, configurations generated for the authorization flow will be filtered out of the results.
     */
    get: operations['getConfigurations']
  }
  '/v1/integrations/configuration/{id}': {
    /**
     * Retrieve an integration configuration
     * @description Allows to retrieve a the configuration with the provided id in case it exists. The authenticated user or team must be the owner of the config in order to access it.
     */
    get: operations['getConfiguration']
    /**
     * Delete an integration configuration
     * @description Allows to remove the configuration with the `id` provided in the parameters. The configuration and all of its resources will be removed. This includes Webhooks, LogDrains and Project Env variables.
     */
    delete: operations['deleteConfiguration']
  }
  '/v2/integrations/log-drains': {
    /**
     * Retrieves a list of Integration log drains
     * @description Retrieves a list of all Integration log drains that are defined for the authenticated user or team. When using an OAuth2 token, the list is limited to log drains created by the authenticated integration.
     */
    get: operations['getIntegrationLogDrains']
    /**
     * Creates a new Integration Log Drain
     * @description Creates an Integration log drain. This endpoint must be called with an OAuth2 client (integration), since log drains are tied to integrations. If it is called with a different token type it will produce a 400 error.
     */
    post: operations['createLogDrain']
  }
  '/v1/integrations/log-drains/{id}': {
    /**
     * Deletes the Integration log drain with the provided `id`
     * @description Deletes the Integration log drain with the provided `id`. When using an OAuth2 Token, the log drain can be deleted only if the integration owns it.
     */
    delete: operations['deleteIntegrationLogDrain']
  }
  '/v1/integrations/git-namespaces': {
    /**
     * List git namespaces by provider
     * @description Lists git namespaces for a supported provider. Supported providers are `github`, `gitlab` and `bitbucket`. If the provider is not provided, it will try to obtain it from the user that authenticated the request.
     */
    get: operations['gitNamespaces']
  }
  '/v1/integrations/search-repo': {
    /**
     * List git repositories linked to namespace by provider
     * @description Lists git repositories linked to a namespace `id` for a supported provider. A specific namespace `id` can be obtained via the `git-namespaces`  endpoint. Supported providers are `github`, `gitlab` and `bitbucket`. If the provider or namespace is not provided, it will try to obtain it from the user that authenticated the request.
     */
    get: operations['gitNamespaces']
  }
  '/v1/log-drains/{id}': {
    /**
     * Retrieves a Configurable Log Drain
     * @description Retrieves a Configurable Log Drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated team can be accessed.
     */
    get: operations['getConfigurableLogDrain']
    /**
     * Deletes a Configurable Log Drain
     * @description Deletes a Configurable Log Drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated team can be deleted.
     */
    delete: operations['deleteConfigurableLogDrain']
  }
  '/v1/log-drains': {
    /**
     * Retrieves a list of all the Log Drains
     * @description Retrieves a list of all the Log Drains owned by the account. This endpoint must be called with an account AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated account can be accessed.
     */
    get: operations['getAllLogDrains']
    /**
     * Creates a Configurable Log Drain
     * @description Creates a configurable log drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed)
     */
    post: operations['createConfigurableLogDrain']
  }
  '/v1/projects/{idOrName}/members': {
    /**
     * List project members
     * @description Lists all members of a project.
     */
    get: operations['getProjectMembers']
    /**
     * Adds a new member to a project.
     * @description Adds a new member to the project.
     */
    post: operations['addProjectMember']
  }
  '/v1/projects/{idOrName}/members/{uid}': {
    /**
     * Remove a Project Member
     * @description Remove a member from a specific project
     */
    delete: operations['removeProjectMember']
  }
  '/v9/projects': {
    /**
     * Retrieve a list of projects
     * @description Allows to retrieve the list of projects of the authenticated user or team. The list will be paginated and the provided query parameters allow filtering the returned projects.
     */
    get: operations['getProjects']
  }
  '/v10/projects': {
    /**
     * Create a new project
     * @description Allows to create a new project with the provided configuration. It only requires the project `name` but more configuration can be provided to override the defaults.
     */
    post: operations['createProject']
  }
  '/v9/projects/{idOrName}': {
    /**
     * Find a project by id or name
     * @description Get the information for a specific project by passing either the project `id` or `name` in the URL.
     */
    get: operations['getProject']
    /**
     * Delete a Project
     * @description Delete a specific project by passing either the project `id` or `name` in the URL.
     */
    delete: operations['deleteProject']
    /**
     * Update an existing project
     * @description Update the fields of a project using either its `name` or `id`.
     */
    patch: operations['updateProject']
  }
  '/v9/projects/{idOrName}/domains': {
    /**
     * Retrieve project domains by project by id or name
     * @description Retrieve the domains associated with a given project by passing either the project `id` or `name` in the URL.
     */
    get: operations['getProjectDomains']
  }
  '/v9/projects/{idOrName}/domains/{domain}': {
    /**
     * Get a project domain
     * @description Get project domain by project id/name and domain name.
     */
    get: operations['getProjectDomain']
    /**
     * Remove a domain from a project
     * @description Remove a domain from a project by passing the domain name and by specifying the project by either passing the project `id` or `name` in the URL.
     */
    delete: operations['removeProjectDomain']
    /**
     * Update a project domain
     * @description Update a project domain's configuration, including the name, git branch and redirect of the domain.
     */
    patch: operations['updateProjectDomain']
  }
  '/v10/projects/{idOrName}/domains': {
    /**
     * Add a domain to a project
     * @description Add a domain to the project by passing its domain name and by specifying the project by either passing the project `id` or `name` in the URL. If the domain is not yet verified to be used on this project, the request will return `verified = false`, and the domain will need to be verified according to the `verification` challenge via `POST /projects/:idOrName/domains/:domain/verify`. If the domain already exists on the project, the request will fail with a `400` status code.
     */
    post: operations['addProjectDomain']
  }
  '/v9/projects/{idOrName}/domains/{domain}/verify': {
    /**
     * Verify project domain
     * @description Attempts to verify a project domain with `verified = false` by checking the correctness of the project domain's `verification` challenge.
     */
    post: operations['verifyProjectDomain']
  }
  '/v9/projects/{idOrName}/env': {
    /**
     * Retrieve the environment variables of a project by id or name
     * @description Retrieve the environment variables for a given project by passing either the project `id` or `name` in the URL.
     */
    get: operations['filterProjectEnvs']
  }
  '/v1/projects/{idOrName}/env/{id}': {
    /**
     * Retrieve the decrypted value of an environment variable of a project by id
     * @description Retrieve the environment variable for a given project.
     */
    get: operations['getProjectEnv']
  }
  '/v10/projects/{idOrName}/env': {
    /**
     * Create one or more environment variables
     * @description Create one ore more environment variables for a project by passing its `key`, `value`, `type` and `target` and by specifying the project by either passing the project `id` or `name` in the URL.
     */
    post: operations['createProjectEnv']
  }
  '/v9/projects/{idOrName}/env/{id}': {
    /**
     * Remove an environment variable
     * @description Delete a specific environment variable for a given project by passing the environment variable identifier and either passing the project `id` or `name` in the URL.
     */
    delete: operations['removeProjectEnv']
    /**
     * Edit an environment variable
     * @description Edit a specific environment variable for a given project by passing the environment variable identifier and either passing the project `id` or `name` in the URL.
     */
    patch: operations['editProjectEnv']
  }
  '/v10/projects/{projectId}/promote/{deploymentId}': {
    /**
     * Points all production domains for a project to the given deploy
     * @description Allows users to promote a deployment to production. Note: This does NOT rebuild the deployment. If you need that, then call create-deployments endpoint.
     */
    post: operations['requestPromote']
  }
  '/v1/projects/{projectId}/promote/aliases': {
    /**
     * Gets a list of aliases with status for the current promote
     * @description Get a list of aliases related to the last promote request with their mapping status
     */
    get: operations['requestPromote']
  }
  '/v1/projects/{projectId}/pause': {
    /**
     * Pause a project
     * @description Pause a project by passing its project `id` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project disables auto assigning custom production domains and blocks the active Production Deployment then the request will return with 200 status code.
     */
    post: operations['pauseProject']
  }
  '/v1/projects/{projectId}/unpause': {
    /**
     * Unpause a project
     * @description Unpause a project by passing its project `id` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project enables auto assigning custom production domains and unblocks the active Production Deployment then the request will return with 200 status code.
     */
    post: operations['unpauseProject']
  }
  '/v2/teams/{teamId}/members': {
    /**
     * List team members
     * @description Get a paginated list of team members for the provided team.
     */
    get: operations['getTeamMembers']
  }
  '/v1/teams/{teamId}/members': {
    /**
     * Invite a user
     * @description Invite a user to join the team specified in the URL. The authenticated user needs to be an `OWNER` in order to successfully invoke this endpoint. The user can be specified with an email or an ID. If both email and ID are provided, ID will take priority.
     */
    post: operations['inviteUserToTeam']
  }
  '/v1/teams/{teamId}/request': {
    /**
     * Request access to a team
     * @description Request access to a team as a member. An owner has to approve the request. Only 10 users can request access to a team at the same time.
     */
    post: operations['requestAccessToTeam']
  }
  '/v1/teams/{teamId}/request/{userId}': {
    /**
     * Get access request status
     * @description Check the status of a join request. It'll respond with a 404 if the request has been declined. If no `userId` path segment was provided, this endpoint will instead return the status of the authenticated user.
     */
    get: operations['getTeamAccessRequest']
  }
  '/v1/teams/{teamId}/members/teams/join': {
    /**
     * Join a team
     * @description Join a team with a provided invite code or team ID.
     */
    post: operations['joinTeam']
  }
  '/v1/teams/{teamId}/members/{uid}': {
    /**
     * Remove a Team Member
     * @description Remove a Team Member from the Team, or dismiss a user that requested access, or leave a team.
     */
    delete: operations['removeTeamMember']
    /**
     * Update a Team Member
     * @description Update the membership of a Team Member on the Team specified by `teamId`, such as changing the _role_ of the member, or confirming a request to join the Team for an unconfirmed member. The authenticated user must be an `OWNER` of the Team.
     */
    patch: operations['updateTeamMember']
  }
  '/v2/teams/{teamId}': {
    /**
     * Get a Team
     * @description Get information for the Team specified by the `teamId` parameter.
     */
    get: operations['getTeam']
    /**
     * Update a Team
     * @description Update the information of a Team specified by the `teamId` parameter. The request body should contain the information that will be updated on the Team.
     */
    patch: operations['patchTeam']
  }
  '/v2/teams': {
    /**
     * List all teams
     * @description Get a paginated list of all the Teams the authenticated User is a member of.
     */
    get: operations['getTeams']
  }
  '/v1/teams': {
    /**
     * Create a Team
     * @description Create a new Team under your account. You need to send a POST request with the desired Team slug, and optionally the Team name.
     */
    post: operations['createTeam']
  }
  '/v1/teams/{teamId}': {
    /**
     * Delete a Team
     * @description Delete a team under your account. You need to send a `DELETE` request with the desired team `id`. An optional array of reasons for deletion may also be sent.
     */
    delete: operations['deleteTeam']
  }
  '/v1/teams/{teamId}/invites/{inviteId}': {
    /**
     * Delete a Team invite code
     * @description Delete an active Team invite code.
     */
    delete: operations['deleteTeamInviteCode']
  }
  '/v2/files': {
    /**
     * Upload Deployment Files
     * @description Before you create a deployment you need to upload the required files for that deployment. To do it, you need to first upload each file to this endpoint. Once that's completed, you can create a new deployment with the uploaded files. The file content must be placed inside the body of the request. In the case of a successful response you'll receive a status code 200 with an empty body.
     */
    post: operations['uploadFile']
  }
  '/v2/user': {
    /**
     * Get the User
     * @description Retrieves information related to the currently authenticated User.
     */
    get: operations['getAuthUser']
  }
  '/v1/user': {
    /**
     * Delete User Account
     * @description Initiates the deletion process for the currently authenticated User, by sending a deletion confirmation email. The email contains a link that the user needs to visit in order to proceed with the deletion process.
     */
    delete: operations['requestDelete']
  }
  '/v5/user/tokens': {
    /**
     * List Auth Tokens
     * @description Retrieve a list of the current User's authentication tokens.
     */
    get: operations['listAuthTokens']
  }
  '/v3/user/tokens': {
    /**
     * Create an Auth Token
     * @description Creates and returns a new authentication token for the currently authenticated User. The `bearerToken` property is only provided once, in the response body, so be sure to save it on the client for use with API requests.
     */
    post: operations['createAuthToken']
  }
  '/v5/user/tokens/{tokenId}': {
    /**
     * Get Auth Token Metadata
     * @description Retrieve metadata about an authentication token belonging to the currently authenticated User.
     */
    get: operations['getAuthToken']
  }
  '/v3/user/tokens/{tokenId}': {
    /**
     * Delete an authentication token
     * @description Invalidate an authentication token, such that it will no longer be valid for future HTTP requests.
     */
    delete: operations['deleteAuthToken']
  }
  '/v1/webhooks': {
    /**
     * Get a list of webhooks
     * @description Get a list of webhooks
     */
    get: operations['getWebhooks']
    /**
     * Creates a webhook
     * @description Creates a webhook
     */
    post: operations['createWebhook']
  }
  '/v1/webhooks/{id}': {
    /**
     * Get a webhook
     * @description Get a webhook
     */
    get: operations['getWebhook']
    /**
     * Deletes a webhook
     * @description Deletes a webhook
     */
    delete: operations['deleteWebhook']
  }
  '/v4/aliases': {
    /**
     * List aliases
     * @description Retrieves a list of aliases for the authenticated User or Team. When `domain` is provided, only aliases for that domain will be returned. When `projectId` is provided, it will only return the given project aliases.
     */
    get: operations['listAliases']
  }
  '/v4/aliases/{idOrAlias}': {
    /**
     * Get an Alias
     * @description Retrieves an Alias for the given host name or alias ID.
     */
    get: operations['getAlias']
  }
  '/v2/aliases/{aliasId}': {
    /**
     * Delete an Alias
     * @description Delete an Alias with the specified ID.
     */
    delete: operations['deleteAlias']
  }
  '/v2/deployments/{id}/aliases': {
    /**
     * List Deployment Aliases
     * @description Retrieves all Aliases for the Deployment with the given ID. The authenticated user or team must own the deployment.
     */
    get: operations['listDeploymentAliases']
    /**
     * Assign an Alias
     * @description Creates a new alias for the deployment with the given deployment ID. The authenticated user or team must own this deployment. If the desired alias is already assigned to another deployment, then it will be removed from the old deployment and assigned to the new one.
     */
    post: operations['assignAlias']
  }
  '/v7/certs/{id}': {
    /**
     * Get cert by id
     * @description Get cert by id
     */
    get: operations['getCertById']
    /**
     * Remove cert
     * @description Remove cert
     */
    delete: operations['removeCert']
  }
  '/v7/certs': {
    /**
     * Upload a cert
     * @description Upload a cert
     */
    put: operations['uploadCert']
    /**
     * Issue a new cert
     * @description Issue a new cert
     */
    post: operations['issueCert']
  }
  '/v6/deployments/{id}/files': {
    /**
     * List Deployment Files
     * @description Allows to retrieve the file structure of a deployment by supplying the deployment unique identifier.
     */
    get: operations['listDeploymentFiles']
  }
  '/v7/deployments/{id}/files/{fileId}': {
    /**
     * Get Deployment File Contents
     * @description Allows to retrieve the content of a file by supplying the file identifier and the deployment unique identifier. The response body will contain a JSON response containing the contents of the file encoded as base64.
     */
    get: operations['getDeploymentFileContents']
  }
  '/v6/deployments': {
    /**
     * List deployments
     * @description List deployments under the authenticated user or team. If a deployment hasn't finished uploading (is incomplete), the `url` property will have a value of `null`.
     */
    get: operations['getDeployments']
  }
  '/registration/verify': {
    /**
     * Verify a login request to get an authentication token
     * @description Verify the user accepted the login request and get a authentication token. The user email address and the token received after requesting the login must be added to the URL as a query string with the names `email` and `token`.
     */
    get: operations['verifyToken']
  }
  '/registration': {
    /**
     * Login with email
     * @description Request a new login for a user to get a token. This will respond with a verification token and send an email to confirm the request. Once confirmed you can use the verification token to get an authentication token.
     */
    post: operations['emailLogin']
  }
  '/v13/deployments/{id}': {
    /**
     * Delete a Deployment
     * @description This API allows you to delete a deployment, either by supplying its `id` in the URL or the `url` of the deployment as a query parameter. You can obtain the ID, for example, by listing all deployments.
     */
    delete: operations['deleteDeployment']
  }
  '/v3/secrets': {
    /**
     * List secrets
     * @description Retrieves the active Vercel secrets for the authenticated user or team. By default it returns 20 secrets. The rest can be retrieved using the pagination options. The body will contain an entry for each secret.
     */
    get: operations['getSecrets']
  }
  '/v2/secrets/{name}': {
    /**
     * Create a new secret
     * @description Allows to create a new secret.
     */
    post: operations['createSecret']
    /**
     * Change secret name
     * @description Enables to edit the name of a secret. The name has to be unique to the user or team’s secrets.
     */
    patch: operations['renameSecret']
  }
  '/v3/secrets/{idOrName}': {
    /**
     * Get a single secret
     * @description Retrieves the information for a specific secret by passing either the secret id or name in the URL.
     */
    get: operations['getSecret']
  }
  '/v2/secrets/{idOrName}': {
    /**
     * Delete a secret
     * @description This deletes the user or team’s secret defined in the URL.
     */
    delete: operations['deleteSecret']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    /** @description Represents an Access Group. */
    AccessGroup: {
      /**
       * @description The name of this access group.
       * @example my-access-group
       */
      name: string
      /**
       * @description Timestamp in milliseconds when the access group was created.
       * @example 1588720733602
       */
      createdAt: string
      /**
       * @description ID of the team that this access group belongs to.
       * @example team_123a6c5209bc3778245d011443644c8d27dc2c50
       */
      teamId: string
      /**
       * @description Timestamp in milliseconds when the access group was last updated.
       * @example 1588720733602
       */
      updatedAt: string
      /**
       * @description ID of the access group.
       * @example ag_123a6c5209bc3778245d011443644c8d27dc2c50
       */
      accessGroupId: string
      /**
       * @description Number of members in the access group.
       * @example 5
       */
      membersCount: number
      /**
       * @description Number of projects in the access group.
       * @example 2
       */
      projectsCount: number
    }
    /**
     * @description Enum containing the actions that can be performed against a resource. Group operations are included.
     * @enum {string}
     */
    ACLAction: 'create' | 'delete' | 'read' | 'update' | 'list'
    /** @description This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data. */
    Pagination: {
      /**
       * @description Amount of items in the current page.
       * @example 20
       */
      count: number
      /**
       * @description Timestamp that must be used to request the next page.
       * @example 1540095775951
       */
      next: number | null
      /**
       * @description Timestamp that must be used to request the previous page.
       * @example 1540095775951
       */
      prev: number | null
    }
    EdgeConfigItemValue:
      | string
      | number
      | boolean
      | {
          [key: string]: components['schemas']['EdgeConfigItemValue']
        }
      | components['schemas']['EdgeConfigItemValue'][]
      | null
    /** @description The EdgeConfig. */
    EdgeConfigItem: {
      key: string
      value: components['schemas']['EdgeConfigItemValue']
      description?: string
      edgeConfigId: string
      createdAt: number
      updatedAt: number
    }
    /** @description The EdgeConfig. */
    EdgeConfigToken: {
      token: string
      label: string
      /** @description This is not the token itself, but rather an id to identify the token by */
      id: string
      edgeConfigId: string
      createdAt: number
    }
    /** @description Array of events generated by the User. */
    UserEvent: {
      /**
       * @description The unique identifier of the Event.
       * @example uev_bfmMjiMnXfnPbT97dGdpJbCN
       */
      id: string
      /**
       * @description The human-readable text of the Event.
       * @example You logged in via GitHub
       */
      text: string
      /** @description A list of "entities" within the event `text`. Useful for enhancing the displayed text with additional styling and links. */
      entities: {
        /**
         * @description The type of entity.
         * @example author
         * @enum {string}
         */
        type:
          | 'author'
          | 'bitbucket_login'
          | 'bold'
          | 'deployment_host'
          | 'dns_record'
          | 'git_link'
          | 'github_login'
          | 'gitlab_login'
          | 'hook_name'
          | 'integration'
          | 'edge-config'
          | 'link'
          | 'project_name'
          | 'scaling_rules'
          | 'env_var_name'
          | 'target'
          | 'store'
          | 'system'
        /**
         * @description The index of where the entity begins within the `text` (inclusive).
         * @example 0
         */
        start: number
        /**
         * @description The index of where the entity ends within the `text` (non-inclusive).
         * @example 3
         */
        end: number
      }[]
      /**
       * @description Timestamp (in milliseconds) of when the event was generated.
       * @example 1632859321020
       */
      createdAt: number
      /** @description Metadata for the User who generated the event. */
      user?: {
        avatar: string
        email: string
        slug?: string
        uid: string
        username: string
      }
      /**
       * @description The unique identifier of the User who generated the event.
       * @example zTuNVUXEAvvnNN3IaqinkyMw
       */
      userId: string
    }
    /** @description Data representing a Team. */
    Team: Record<string, never>
    /** @description A limited form of data representing a Team, due to the authentication token missing privileges to read the full Team data. */
    TeamLimited: {
      /** @description Property indicating that this Team data contains only limited information, due to the authentication token missing privileges to read the full Team data. Re-login with the Team's configured SAML Single Sign-On provider in order to upgrade the authentication token with the necessary privileges. */
      limited: boolean
      /** @description When "Single Sign-On (SAML)" is configured, this object contains information that allows the client-side to identify whether or not this Team has SAML enforced. */
      saml?: {
        /** @description Information for the SAML Single Sign-On configuration. */
        connection?: {
          /**
           * @description The Identity Provider "type", for example Okta.
           * @example OktaSAML
           */
          type: string
          /**
           * @description Current status of the connection.
           * @example linked
           */
          status: string
          /**
           * @description Current state of the connection.
           * @example active
           */
          state: string
          /**
           * @description Timestamp (in milliseconds) of when the configuration was connected.
           * @example 1611796915677
           */
          connectedAt: number
          /**
           * @description Timestamp (in milliseconds) of when the last webhook event was received from WorkOS.
           * @example 1611796915677
           */
          lastReceivedWebhookEvent?: number
        }
        /** @description Information for the SAML Single Sign-On configuration. */
        directory?: {
          /**
           * @description The Identity Provider "type", for example Okta.
           * @example OktaSAML
           */
          type: string
          /**
           * @description Current status of the connection.
           * @example linked
           */
          status: string
          /**
           * @description Current state of the connection.
           * @example active
           */
          state: string
          /**
           * @description Timestamp (in milliseconds) of when the configuration was connected.
           * @example 1611796915677
           */
          connectedAt: number
          /**
           * @description Timestamp (in milliseconds) of when the last webhook event was received from WorkOS.
           * @example 1611796915677
           */
          lastReceivedWebhookEvent?: number
        }
        /** @description When `true`, interactions with the Team **must** be done with an authentication token that has been authenticated with the Team's SAML Single Sign-On provider. */
        enforced: boolean
      }
      /**
       * @description The Team's unique identifier.
       * @example team_nllPyCtREAqxxdyFKbbMDlxd
       */
      id: string
      /**
       * @description The Team's slug, which is unique across the Vercel platform.
       * @example my-team
       */
      slug: string
      /**
       * @description Name associated with the Team account, or `null` if none has been provided.
       * @example My Team
       */
      name: string | null
      /**
       * @description The ID of the file used as avatar for this Team.
       * @example 6eb07268bcfadd309905ffb1579354084c24655c
       */
      avatar: string | null
      membership: OneOf<
        [
          {
            confirmed: boolean
            confirmedAt: number
            accessRequestedAt?: number
            /** @enum {string} */
            role:
              | 'OWNER'
              | 'MEMBER'
              | 'DEVELOPER'
              | 'BILLING'
              | 'VIEWER'
              | 'CONTRIBUTOR'
            teamId?: string
            uid: string
            createdAt: number
            created: number
            joinedFrom?: {
              /** @enum {string} */
              origin:
                | 'link'
                | 'saml'
                | 'mail'
                | 'import'
                | 'teams'
                | 'github'
                | 'gitlab'
                | 'bitbucket'
                | 'dsync'
                | 'feedback'
                | 'organization-teams'
              commitId?: string
              repoId?: string
              repoPath?: string
              gitUserId?: string | number
              gitUserLogin?: string
              ssoUserId?: string
              ssoConnectedAt?: number
              idpUserId?: string
              dsyncUserId?: string
              dsyncConnectedAt?: number
            }
          },
          {
            confirmed: boolean
            confirmedAt?: number
            accessRequestedAt: number
            /** @enum {string} */
            role:
              | 'OWNER'
              | 'MEMBER'
              | 'DEVELOPER'
              | 'BILLING'
              | 'VIEWER'
              | 'CONTRIBUTOR'
            teamId?: string
            uid: string
            createdAt: number
            created: number
            joinedFrom?: {
              /** @enum {string} */
              origin:
                | 'link'
                | 'saml'
                | 'mail'
                | 'import'
                | 'teams'
                | 'github'
                | 'gitlab'
                | 'bitbucket'
                | 'dsync'
                | 'feedback'
                | 'organization-teams'
              commitId?: string
              repoId?: string
              repoPath?: string
              gitUserId?: string | number
              gitUserLogin?: string
              ssoUserId?: string
              ssoConnectedAt?: number
              idpUserId?: string
              dsyncUserId?: string
              dsyncConnectedAt?: number
            }
          },
        ]
      >
      /** @description Will remain undocumented. Remove in v3 API. */
      created: string
      /**
       * @description UNIX timestamp (in milliseconds) when the Team was created.
       * @example 1630748523395
       */
      createdAt: number
    }
    /** @description Data for the currently authenticated User. */
    AuthUser: {
      /**
       * @description UNIX timestamp (in milliseconds) when the User account was created.
       * @example 1630748523395
       */
      createdAt: number
      /** @description When the User account has been "soft blocked", this property will contain the date when the restriction was enacted, and the identifier for why. */
      softBlock: {
        blockedAt: number
        /** @enum {string} */
        reason:
          | 'SUBSCRIPTION_CANCELED'
          | 'SUBSCRIPTION_EXPIRED'
          | 'UNPAID_INVOICE'
          | 'ENTERPRISE_TRIAL_ENDED'
          | 'FAIR_USE_LIMITS_EXCEEDED'
          | 'BLOCKED_FOR_PLATFORM_ABUSE'
        /** @enum {string} */
        blockedDueToOverageType?:
          | 'analyticsUsage'
          | 'artifacts'
          | 'bandwidth'
          | 'blobStores'
          | 'blobTotalAdvancedRequests'
          | 'blobTotalAvgSizeInBytes'
          | 'blobTotalGetResponseObjectSizeInBytes'
          | 'blobTotalSimpleRequests'
          | 'buildMinute'
          | 'dataCacheRead'
          | 'dataCacheRevalidation'
          | 'dataCacheWrite'
          | 'edgeConfigRead'
          | 'edgeConfigWrite'
          | 'edgeFunctionExecutionUnits'
          | 'edgeMiddlewareInvocations'
          | 'edgeRequest'
          | 'edgeRequestAdditionalCpuDuration'
          | 'fastDataTransfer'
          | 'fastOriginTransfer'
          | 'functionDuration'
          | 'functionInvocation'
          | 'logDrainsVolume'
          | 'monitoringMetric'
          | 'postgresComputeTime'
          | 'postgresDataStorage'
          | 'postgresDataTransfer'
          | 'postgresDatabase'
          | 'postgresWrittenData'
          | 'serverlessFunctionExecution'
          | 'sourceImages'
          | 'storageRedisTotalBandwidthInBytes'
          | 'storageRedisTotalCommands'
          | 'storageRedisTotalDailyAvgStorageInBytes'
          | 'storageRedisTotalDatabases'
          | 'wafOwaspExcessBytes'
          | 'wafOwaspRequests'
          | 'webAnalyticsEvent'
      } | null
      /** @description An object containing billing infomation associated with the User account. */
      billing: {
        /** @enum {string} */
        currency?: 'usd' | 'eur'
        cancelation?: number | null
        period: {
          start: number
          end: number
        } | null
        contract?: {
          start: number
          end: number
        } | null
        /** @enum {string} */
        plan: 'pro' | 'enterprise' | 'hobby'
        planIteration?: string
        /** @enum {string} */
        platform?: 'stripe' | 'stripeTestMode'
        orbCustomerId?: string
        syncedAt?: number
        /** @enum {string} */
        programType?: 'startup' | 'agency'
        trial?: {
          start: number
          end: number
        } | null
        email?: string | null
        tax?: {
          type: string
          id: string
        } | null
        language?: string | null
        address?: {
          line1?: string
          line2?: string
          postalCode?: string
          city?: string
          country?: string
          state?: string
        } | null
        name?: string | null
        invoiceItems?: {
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          concurrentBuilds?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          webAnalytics?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          pro?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          enterprise?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          analytics?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          monitoring?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          passwordProtection?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          previewDeploymentSuffix?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          saml?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
          teamSeats?: {
            tier?: number
            price: number
            quantity: number
            /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
            highestQuantity?: number
            name?: string
            hidden: boolean
            createdAt?: number
            disabledAt?: number | null
            frequency?: {
              /** @enum {string} */
              interval: 'month'
              /** @enum {number} */
              intervalCount: 1 | 2 | 3 | 6 | 12
            }
            maxQuantity?: number
          }
          analyticsUsage?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          artifacts?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          bandwidth?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          blobStores?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          blobTotalAdvancedRequests?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          blobTotalAvgSizeInBytes?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          blobTotalGetResponseObjectSizeInBytes?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          blobTotalSimpleRequests?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          buildMinute?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          dataCacheRead?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          dataCacheRevalidation?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          dataCacheWrite?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          edgeConfigRead?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          edgeConfigWrite?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          edgeFunctionExecutionUnits?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          edgeMiddlewareInvocations?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          edgeRequest?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          edgeRequestAdditionalCpuDuration?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          fastDataTransfer?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          fastOriginTransfer?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          functionDuration?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          functionInvocation?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          logDrainsVolume?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          monitoringMetric?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          postgresComputeTime?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          postgresDataStorage?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          postgresDataTransfer?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          postgresDatabase?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          postgresWrittenData?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          serverlessFunctionExecution?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          sourceImages?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          storageRedisTotalBandwidthInBytes?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          storageRedisTotalCommands?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          storageRedisTotalDailyAvgStorageInBytes?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          storageRedisTotalDatabases?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          wafOwaspExcessBytes?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          wafOwaspRequests?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
          webAnalyticsEvent?: {
            matrix?: {
              defaultUnitPrice: string
              dimensionPrices: {
                [key: string]: string
              }
            }
            tier?: number
            price: number
            batch: number
            threshold: number
            name?: string
            hidden: boolean
            disabledAt?: number | null
            enabledAt?: number | null
          }
        } | null
        invoiceSettings?: {
          footer?: string
        }
        subscriptions?:
          | {
              id: string
              trial: {
                start: number
                end: number
              } | null
              period: {
                start: number
                end: number
              }
              frequency: {
                /** @enum {string} */
                interval: 'month' | 'day' | 'week' | 'year'
                intervalCount: number
              }
              discount: {
                id: string
                coupon: {
                  id: string
                  name: string | null
                  amountOff: number | null
                  percentageOff: number | null
                  durationInMonths: number | null
                  /** @enum {string} */
                  duration: 'forever' | 'repeating' | 'once'
                }
              } | null
              items: {
                id: string
                priceId: string
                productId: string
                amount: number
                quantity: number
              }[]
            }[]
          | null
        controls?: {
          analyticsSampleRateInPercent?: number | null
          analyticsSpendLimitInDollars?: number | null
        } | null
        purchaseOrder?: string | null
        /** @enum {string} */
        status?: 'active' | 'trialing' | 'overdue' | 'expired' | 'canceled'
        /** @enum {string} */
        pricingExperiment?: 'august-2022'
        orbMigrationScheduledAt?: number | null
        forceOrbMigration?: boolean | null
      } | null
      /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
      resourceConfig: {
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        blobStores?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        nodeType?: string
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        concurrentBuilds?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        awsAccountType?: string
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        awsAccountIds?: string[]
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        cfZoneName?: string
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        edgeConfigs?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        edgeConfigSize?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        edgeFunctionMaxSizeBytes?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        edgeFunctionExecutionTimeoutMs?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        serverlessFunctionDefaultMaxExecutionTime?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        kvDatabases?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        postgresDatabases?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        integrationStores?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        cronJobs?: number
        /** @description An object containing infomation related to the amount of platform resources may be allocated to the User account. */
        cronJobsPerProject?: number
      }
      /** @description Prefix that will be used in the URL of "Preview" deployments created by the User account. */
      stagingPrefix: string
      /** @description set of dashboard view preferences (cards or list) per scopeId */
      activeDashboardViews?: {
        scopeId: string
        /** @enum {string} */
        viewPreference?: 'list' | 'cards'
        /** @enum {string} */
        favoritesViewPreference?: 'open' | 'closed'
        /** @enum {string} */
        recentsViewPreference?: 'open' | 'closed'
      }[]
      importFlowGitNamespace?: string | number | null
      importFlowGitNamespaceId?: string | number | null
      /** @enum {string} */
      importFlowGitProvider?: 'github' | 'gitlab' | 'bitbucket'
      preferredScopesAndGitNamespaces?: {
        scopeId: string
        gitNamespaceId: string | number | null
      }[]
      /** @description A record of when, under a certain scopeId, a toast was dismissed */
      dismissedToasts?: {
        name: string
        dismissals: {
          scopeId: string
          createdAt: number
        }[]
      }[]
      /** @description A list of projects and spaces across teams that a user has marked as a favorite. */
      favoriteProjectsAndSpaces?: OneOf<
        [
          {
            projectId: string
            scopeSlug: string
            scopeId: string
          },
          {
            spaceId: string
            scopeSlug: string
            scopeId: string
          },
        ]
      >[]
      /** @description Whether the user has a trial available for a paid plan subscription. */
      hasTrialAvailable: boolean
      /** @description remote caching settings */
      remoteCaching?: {
        enabled?: boolean
      }
      /** @description data cache settings */
      dataCache?: {
        excessBillingEnabled?: boolean
      }
      /** @description Feature blocks for the user */
      featureBlocks?: {
        webAnalytics?: {
          blockedFrom?: number
          blockedUntil?: number
          isCurrentlyBlocked: boolean
        }
      }
      northstarMigration?: {
        /** @description The ID of the team we created for this user. */
        teamId: string
        /** @description The number of projects migrated for this user. */
        projects: number
        /** @description The number of stores migrated for this user. */
        stores: number
        /** @description The number of integration configurations migrated for this user. */
        integrationConfigurations: number
        /** @description The number of integration clients migrated for this user. */
        integrationClients: number
        /** @description The migration start time timestamp for this user. */
        startTime: number
        /** @description The migration end time timestamp for this user. */
        endTime: number
      }
      /**
       * @description The User's unique identifier.
       * @example AEIIDYVk59zbFF2Sxfyxxmua
       */
      id: string
      /**
       * @description Email address associated with the User account.
       * @example me@example.com
       */
      email: string
      /**
       * @description Name associated with the User account, or `null` if none has been provided.
       * @example John Doe
       */
      name: string | null
      /**
       * @description Unique username associated with the User account.
       * @example jdoe
       */
      username: string
      /**
       * @description SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.
       * @example 22cb30c85ff45ac4c72de8981500006b28114aa1
       */
      avatar: string | null
      /** @description The user's default team. Only applies if the user's `version` is `'northstar'`. */
      defaultTeamId: string | null
      /**
       * @description The user's version. Will either be unset or `northstar`.
       * @enum {string|null}
       */
      version: 'northstar' | null
    }
    /** @description A limited form of data for the currently authenticated User, due to the authentication token missing privileges to read the full User data. */
    AuthUserLimited: {
      /** @description Property indicating that this User data contains only limited information, due to the authentication token missing privileges to read the full User data. Re-login with email, GitHub, GitLab or Bitbucket in order to upgrade the authentication token with the necessary privileges. */
      limited: boolean
      /**
       * @description The User's unique identifier.
       * @example AEIIDYVk59zbFF2Sxfyxxmua
       */
      id: string
      /**
       * @description Email address associated with the User account.
       * @example me@example.com
       */
      email: string
      /**
       * @description Name associated with the User account, or `null` if none has been provided.
       * @example John Doe
       */
      name: string | null
      /**
       * @description Unique username associated with the User account.
       * @example jdoe
       */
      username: string
      /**
       * @description SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.
       * @example 22cb30c85ff45ac4c72de8981500006b28114aa1
       */
      avatar: string | null
      /** @description The user's default team. Only applies if the user's `version` is `'northstar'`. */
      defaultTeamId: string | null
      /**
       * @description The user's version. Will either be unset or `northstar`.
       * @enum {string|null}
       */
      version: 'northstar' | null
    }
    /** @description Authentication token metadata. */
    AuthToken: {
      /**
       * @description The unique identifier of the token.
       * @example 5d9f2ebd38ddca62e5d51e9c1704c72530bdc8bfdd41e782a6687c48399e8391
       */
      id: string
      /** @description The human-readable name of the token. */
      name: string
      /**
       * @description The type of the token.
       * @example oauth2-token
       */
      type: string
      /**
       * @description The origin of how the token was created.
       * @example github
       */
      origin?: string
      /** @description The access scopes granted to the token. */
      scopes?: OneOf<
        [
          {
            /** @enum {string} */
            type: 'user'
            /** @enum {string} */
            origin:
              | 'saml'
              | 'github'
              | 'gitlab'
              | 'bitbucket'
              | 'email'
              | 'manual'
              | 'passkey'
            createdAt: number
            expiresAt?: number
          },
          {
            /** @enum {string} */
            type: 'team'
            teamId: string
            /** @enum {string} */
            origin:
              | 'saml'
              | 'github'
              | 'gitlab'
              | 'bitbucket'
              | 'email'
              | 'manual'
              | 'passkey'
            createdAt: number
            expiresAt?: number
          },
        ]
      >[]
      /**
       * @description Timestamp (in milliseconds) of when the token expires.
       * @example 1632816536002
       */
      expiresAt?: number
      /**
       * @description Timestamp (in milliseconds) of when the token was most recently used.
       * @example 1632816536002
       */
      activeAt: number
      /**
       * @description Timestamp (in milliseconds) of when the token was created.
       * @example 1632816536002
       */
      createdAt: number
    }
    /** @description A deployment file tree entry */
    FileTree: {
      /**
       * @description The name of the file tree entry
       * @example my-file.json
       */
      name: string
      /**
       * @description String indicating the type of file tree entry.
       * @example file
       * @enum {string}
       */
      type:
        | 'directory'
        | 'file'
        | 'symlink'
        | 'lambda'
        | 'middleware'
        | 'invalid'
      /**
       * @description The unique identifier of the file (only valid for the `file` type)
       * @example 2d4aad419917f15b1146e9e03ddc9bb31747e4d0
       */
      uid?: string
      /** @description The list of children files of the directory (only valid for the `directory` type) */
      children?: components['schemas']['FileTree'][]
      /**
       * @description The content-type of the file (only valid for the `file` type)
       * @example application/json
       */
      contentType?: string
      /** @description The file "mode" indicating file type and permissions. */
      mode: number
      /** @description Not currently used. See `file-list-to-tree.ts`. */
      symlink?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Reads an access group
   * @description Allows to read an access group
   */
  readAccessGroup: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        idOrName: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            isDsyncManaged: boolean
            /**
             * @description The name of this access group.
             * @example my-access-group
             */
            name: string
            /**
             * @description Timestamp in milliseconds when the access group was created.
             * @example 1588720733602
             */
            createdAt: string
            /**
             * @description ID of the team that this access group belongs to.
             * @example team_123a6c5209bc3778245d011443644c8d27dc2c50
             */
            teamId: string
            /**
             * @description Timestamp in milliseconds when the access group was last updated.
             * @example 1588720733602
             */
            updatedAt: string
            /**
             * @description ID of the access group.
             * @example ag_123a6c5209bc3778245d011443644c8d27dc2c50
             */
            accessGroupId: string
            /**
             * @description Number of members in the access group.
             * @example 5
             */
            membersCount: number
            /**
             * @description Number of projects in the access group.
             * @example 2
             */
            projectsCount: number
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Update an access group
   * @description Allows to update an access group metadata
   */
  updateAccessGroup: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        idOrName: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the access group
           * @example My access group
           */
          name?: string
          projects?: {
            /**
             * @description The ID of the project.
             * @example prj_ndlgr43fadlPyCtREAqxxdyFK
             */
            projectId: string
            /**
             * @description The project role that will be added to this Access Group. \"null\" will remove this project level role.
             * @example ADMIN
             * @enum {string|null}
             */
            role: 'ADMIN' | 'PROJECT_VIEWER' | 'PROJECT_DEVELOPER' | null
          }[]
          /** @description List of members to add to the access group. */
          membersToAdd?: string[]
          /** @description List of members to remove from the access group. */
          membersToRemove?: string[]
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['AccessGroup']
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Deletes an access group
   * @description Allows to delete an access group
   */
  deleteAccessGroup: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        idOrName: string
      }
    }
    responses: {
      200: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * List members of an access group
   * @description List members of an access group
   */
  listAccessGroupMembers: {
    parameters: {
      query?: {
        /** @description Limit how many access group members should be returned. */
        limit?: number
        /** @description Continuation cursor to retrieve the next page of results. */
        next?: string
        /** @description Search project members by their name, username, and email. */
        search?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID or name of the Access Group. */
        idOrName: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            members: {
              avatar?: string
              email: string
              uid: string
              username: string
              name?: string
              createdAt?: string
              /** @enum {string} */
              teamRole:
                | 'OWNER'
                | 'MEMBER'
                | 'DEVELOPER'
                | 'BILLING'
                | 'VIEWER'
                | 'CONTRIBUTOR'
            }[]
            pagination: {
              count: number
              next: string | null
            }
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * List access groups for a team, project or member
   * @description List access groups
   */
  listAccessGroups: {
    parameters: {
      query?: {
        /** @description Filter access groups by project. */
        projectId?: string
        /** @description Search for access groups by name. */
        search?: string
        /** @description Number of members to include in the response. */
        membersLimit?: number
        /** @description Number of projects to include in the response. */
        projectsLimit?: number
        /** @description Limit how many access group should be returned. */
        limit?: number
        /** @description Continuation cursor to retrieve the next page of results. */
        next?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': OneOf<
            [
              Record<string, never>,
              {
                accessGroups: {
                  members?: string[]
                  projects?: string[]
                  isDsyncManaged: boolean
                  /**
                   * @description The name of this access group.
                   * @example my-access-group
                   */
                  name: string
                  /**
                   * @description Timestamp in milliseconds when the access group was created.
                   * @example 1588720733602
                   */
                  createdAt: string
                  /**
                   * @description ID of the team that this access group belongs to.
                   * @example team_123a6c5209bc3778245d011443644c8d27dc2c50
                   */
                  teamId: string
                  /**
                   * @description Timestamp in milliseconds when the access group was last updated.
                   * @example 1588720733602
                   */
                  updatedAt: string
                  /**
                   * @description ID of the access group.
                   * @example ag_123a6c5209bc3778245d011443644c8d27dc2c50
                   */
                  accessGroupId: string
                  /**
                   * @description Number of members in the access group.
                   * @example 5
                   */
                  membersCount: number
                  /**
                   * @description Number of projects in the access group.
                   * @example 2
                   */
                  projectsCount: number
                }[]
                pagination: {
                  count: number
                  next: string | null
                }
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Creates an access group
   * @description Allows to create an access group
   */
  createAccessGroup: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the access group
           * @example My access group
           */
          name: string
          projects?: {
            /**
             * @description The ID of the project.
             * @example prj_ndlgr43fadlPyCtREAqxxdyFK
             */
            projectId: string
            /**
             * @description The project role that will be added to this Access Group. \"null\" will remove this project level role.
             * @example ADMIN
             * @enum {string|null}
             */
            role: 'ADMIN' | 'PROJECT_VIEWER' | 'PROJECT_DEVELOPER' | null
          }[]
          /** @description List of members to add to the access group. */
          membersToAdd?: string[]
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            membersCount: number
            projectsCount: number
            /**
             * @description The name of this access group.
             * @example my-access-group
             */
            name: string
            /**
             * @description Timestamp in milliseconds when the access group was created.
             * @example 1588720733602
             */
            createdAt: string
            /**
             * @description ID of the team that this access group belongs to.
             * @example team_123a6c5209bc3778245d011443644c8d27dc2c50
             */
            teamId: string
            /**
             * @description Timestamp in milliseconds when the access group was last updated.
             * @example 1588720733602
             */
            updatedAt: string
            /**
             * @description ID of the access group.
             * @example ag_123a6c5209bc3778245d011443644c8d27dc2c50
             */
            accessGroupId: string
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * List projects of an access group
   * @description List projects of an access group
   */
  listAccessGroupProjects: {
    parameters: {
      query?: {
        /** @description Limit how many access group projects should be returned. */
        limit?: number
        /** @description Continuation cursor to retrieve the next page of results. */
        next?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID or name of the Access Group. */
        idOrName: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            projects: {
              projectId: string
              /** @enum {string} */
              role: 'ADMIN' | 'PROJECT_DEVELOPER' | 'PROJECT_VIEWER'
              createdAt: string
              updatedAt: string
              project: {
                name?: string
                framework?: string | null
                latestDeploymentId?: string
              }
            }[]
            pagination: {
              count: number
              next: string | null
            }
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Record an artifacts cache usage event
   * @description Records an artifacts cache usage event. The body of this request is an array of cache usage events. The supported event types are `HIT` and `MISS`. The source is either `LOCAL` the cache event was on the users filesystem cache or `REMOTE` if the cache event is for a remote cache. When the event is a `HIT` the request also accepts a number `duration` which is the time taken to generate the artifact in the cache.
   */
  recordEvents: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      header?: {
        /** @description The continuous integration or delivery environment where this artifact is downloaded. */
        'x-artifact-client-ci'?: string
        /** @description 1 if the client is an interactive shell. Otherwise 0 */
        'x-artifact-client-interactive'?: number
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description A UUID (universally unique identifer) for the session that generated this event. */
          sessionId: string
          /**
           * @description One of `LOCAL` or `REMOTE`. `LOCAL` specifies that the cache event was from the user's filesystem cache. `REMOTE` specifies that the cache event is from a remote cache.
           * @enum {string}
           */
          source: 'LOCAL' | 'REMOTE'
          /**
           * @description One of `HIT` or `MISS`. `HIT` specifies that a cached artifact for `hash` was found in the cache. `MISS` specifies that a cached artifact with `hash` was not found.
           * @enum {string}
           */
          event: 'HIT' | 'MISS'
          /**
           * @description The artifact hash
           * @example 12HKQaOmR5t5Uy6vdcQsNIiZgHGB
           */
          hash: string
          /**
           * @description The time taken to generate the artifact. This should be sent as a body parameter on `HIT` events.
           * @example 400
           */
          duration?: number
        }[]
      }
    }
    responses: {
      /** @description Success. Event recorded. */
      200: {
        content: never
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the headers is invalid
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The customer has reached their spend cap limit and has been paused. An owner can disable the cap or raise the limit in settings.
       * The Remote Caching usage limit has been reached for this account for this billing cycle.
       * Remote Caching has been disabled for this team or user. An owner can enable it in the billing settings.
       */
      403: {
        content: never
      }
    }
  }
  /**
   * Get status of Remote Caching for this principal
   * @description Check the status of Remote Caching for this principal. Returns a JSON-encoded status indicating if Remote Caching is enabled, disabled, or disabled due to usage limits.
   */
  status: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            /** @enum {string} */
            status: 'disabled' | 'enabled' | 'over_limit' | 'paused'
          }
        }
      }
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Download a cache artifact
   * @description Downloads a cache artifact indentified by its `hash` specified on the request path. The artifact is downloaded as an octet-stream. The client should verify the content-length header and response body.
   */
  downloadArtifact: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      header?: {
        /** @description The continuous integration or delivery environment where this artifact is downloaded. */
        'x-artifact-client-ci'?: string
        /** @description 1 if the client is an interactive shell. Otherwise 0 */
        'x-artifact-client-interactive'?: number
      }
      path: {
        /** @description The artifact hash */
        hash: string
      }
    }
    responses: {
      /** @description The artifact was found and is downloaded as a stream. Content-Length should be verified. */
      200: {
        content: {
          'application/json': string
        }
      }
      /**
       * @description One of the provided values in the request query is invalid.
       * One of the provided values in the headers is invalid
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The customer has reached their spend cap limit and has been paused. An owner can disable the cap or raise the limit in settings.
       * The Remote Caching usage limit has been reached for this account for this billing cycle.
       * Remote Caching has been disabled for this team or user. An owner can enable it in the billing settings.
       */
      403: {
        content: never
      }
      /** @description The artifact was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Upload a cache artifact
   * @description Uploads a cache artifact identified by the `hash` specified on the path. The cache artifact can then be downloaded with the provided `hash`.
   */
  uploadArtifact: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      header: {
        /** @description The artifact size in bytes */
        'Content-Length': number
        /** @description The time taken to generate the uploaded artifact in milliseconds. */
        'x-artifact-duration'?: number
        /** @description The continuous integration or delivery environment where this artifact was generated. */
        'x-artifact-client-ci'?: string
        /** @description 1 if the client is an interactive shell. Otherwise 0 */
        'x-artifact-client-interactive'?: number
        /** @description The base64 encoded tag for this artifact. The value is sent back to clients when the artifact is downloaded as the header `x-artifact-tag` */
        'x-artifact-tag'?: string
      }
      path: {
        /** @description The artifact hash */
        hash: string
      }
    }
    requestBody?: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description File successfully uploaded */
      202: {
        content: {
          'application/json': {
            /**
             * @description Array of URLs where the artifact was updated
             * @example [
             *   "https://api.vercel.com/v2/now/artifact/12HKQaOmR5t5Uy6vdcQsNIiZgHGB"
             * ]
             */
            urls: string[]
          }
        }
      }
      /**
       * @description One of the provided values in the request query is invalid.
       * One of the provided values in the headers is invalid
       * File size is not valid
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The customer has reached their spend cap limit and has been paused. An owner can disable the cap or raise the limit in settings.
       * The Remote Caching usage limit has been reached for this account for this billing cycle.
       * Remote Caching has been disabled for this team or user. An owner can enable it in the billing settings.
       */
      403: {
        content: never
      }
    }
  }
  /**
   * Check if a cache artifact exists
   * @description Check that a cache artifact with the given `hash` exists. This request returns response headers only and is equivalent to a `GET` request to this endpoint where the response contains no body.
   */
  artifactExists: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The artifact hash */
        hash: string
      }
    }
    responses: {
      /** @description The artifact was found and headers are returned */
      200: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The customer has reached their spend cap limit and has been paused. An owner can disable the cap or raise the limit in settings.
       * The Remote Caching usage limit has been reached for this account for this billing cycle.
       * Remote Caching has been disabled for this team or user. An owner can enable it in the billing settings.
       */
      403: {
        content: never
      }
      /** @description The artifact was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Query information about an artifact
   * @description Query information about an array of artifacts.
   */
  artifactQuery: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description artifact hashes */
          hashes: string[]
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            [key: string]: OneOf<
              [
                {
                  size: number
                  taskDurationMs: number
                  tag?: string
                },
                {
                  error: {
                    message: string
                  }
                },
                null,
              ]
            >
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The customer has reached their spend cap limit and has been paused. An owner can disable the cap or raise the limit in settings.
       * The Remote Caching usage limit has been reached for this account for this billing cycle.
       * Remote Caching has been disabled for this team or user. An owner can enable it in the billing settings.
       */
      403: {
        content: never
      }
    }
  }
  /**
   * Retrieve a list of all checks
   * @description List all of the checks created for a deployment.
   */
  getAllChecks: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The deployment to get all checks for */
        deploymentId: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            checks: {
              completedAt?: number
              /** @enum {string} */
              conclusion?:
                | 'canceled'
                | 'failed'
                | 'neutral'
                | 'succeeded'
                | 'skipped'
                | 'stale'
              createdAt: number
              detailsUrl?: string
              id: string
              integrationId: string
              name: string
              output?: {
                metrics?: {
                  FCP: {
                    value: number | null
                    previousValue?: number
                    /** @enum {string} */
                    source: 'web-vitals'
                  }
                  LCP: {
                    value: number | null
                    previousValue?: number
                    /** @enum {string} */
                    source: 'web-vitals'
                  }
                  CLS: {
                    value: number | null
                    previousValue?: number
                    /** @enum {string} */
                    source: 'web-vitals'
                  }
                  TBT: {
                    value: number | null
                    previousValue?: number
                    /** @enum {string} */
                    source: 'web-vitals'
                  }
                  virtualExperienceScore?: {
                    value: number | null
                    previousValue?: number
                    /** @enum {string} */
                    source: 'web-vitals'
                  }
                }
              }
              path?: string
              rerequestable: boolean
              startedAt?: number
              /** @enum {string} */
              status: 'registered' | 'running' | 'completed'
              updatedAt: number
            }[]
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The deployment was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Creates a new Check
   * @description Creates a new check. This endpoint must be called with an OAuth2 or it will produce a 400 error.
   */
  createCheck: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The deployment to create the check for. */
        deploymentId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the check being created
           * @example Performance Check
           */
          name: string
          /**
           * @description Path of the page that is being checked
           * @example /
           */
          path?: string
          /**
           * @description Whether the check should block a deployment from succeeding
           * @example true
           */
          blocking: boolean
          /**
           * @description URL to display for further details
           * @example http://example.com
           */
          detailsUrl?: string
          /**
           * @description An identifier that can be used as an external reference
           * @example 1234abc
           */
          externalId?: string
          /**
           * @description Whether a user should be able to request for the check to be rerun if it fails
           * @example true
           */
          rerequestable?: boolean
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
            name: string
            path?: string
            /** @enum {string} */
            status: 'registered' | 'running' | 'completed'
            /** @enum {string} */
            conclusion?:
              | 'canceled'
              | 'failed'
              | 'neutral'
              | 'succeeded'
              | 'skipped'
              | 'stale'
            blocking: boolean
            output?: {
              metrics?: {
                FCP: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                LCP: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                CLS: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                TBT: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                virtualExperienceScore?: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
              }
            }
            detailsUrl?: string
            integrationId: string
            deploymentId: string
            externalId?: string
            createdAt: number
            updatedAt: number
            startedAt?: number
            completedAt?: number
            rerequestable?: boolean
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * Cannot create check for finished deployment
       * The provided token is not from an OAuth2 Client
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The deployment was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Get a single check
   * @description Return a detailed response for a single check.
   */
  getCheck: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The deployment to get the check for. */
        deploymentId: string
        /** @description The check to fetch */
        checkId: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
            name: string
            path?: string
            /** @enum {string} */
            status: 'registered' | 'running' | 'completed'
            /** @enum {string} */
            conclusion?:
              | 'canceled'
              | 'failed'
              | 'neutral'
              | 'succeeded'
              | 'skipped'
              | 'stale'
            blocking: boolean
            output?: {
              metrics?: {
                FCP: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                LCP: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                CLS: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                TBT: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                virtualExperienceScore?: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
              }
            }
            detailsUrl?: string
            integrationId: string
            deploymentId: string
            externalId?: string
            createdAt: number
            updatedAt: number
            startedAt?: number
            completedAt?: number
            rerequestable?: boolean
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The provided token is not from an OAuth2 Client that created the Check
       */
      403: {
        content: never
      }
      /**
       * @description Check was not found
       * The deployment was not found
       */
      404: {
        content: never
      }
    }
  }
  /**
   * Update a check
   * @description Update an existing check. This endpoint must be called with an OAuth2 or it will produce a 400 error.
   */
  updateCheck: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The deployment to update the check for. */
        deploymentId: string
        /** @description The check being updated */
        checkId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the check being created
           * @example Performance Check
           */
          name?: string
          /**
           * @description Path of the page that is being checked
           * @example /
           */
          path?: string
          /**
           * @description The current status of the check
           * @enum {unknown}
           */
          status?: 'running' | 'completed'
          /**
           * @description The result of the check being run
           * @enum {unknown}
           */
          conclusion?:
            | 'canceled'
            | 'failed'
            | 'neutral'
            | 'succeeded'
            | 'skipped'
          /**
           * @description A URL a user may visit to see more information about the check
           * @example https://example.com/check/run/1234abc
           */
          detailsUrl?: string
          /** @description The results of the check Run */
          output?: {
            /** @description Metrics about the page */
            metrics?: {
              FCP: {
                /**
                 * @description First Contentful Paint value
                 * @example 1200
                 */
                value: number | null
                /**
                 * @description Previous First Contentful Paint value to display a delta
                 * @example 900
                 */
                previousValue?: number
                /** @enum {string} */
                source: 'web-vitals'
              }
              LCP: {
                /**
                 * @description Largest Contentful Paint value
                 * @example 1200
                 */
                value: number | null
                /**
                 * @description Previous Largest Contentful Paint value to display a delta
                 * @example 1000
                 */
                previousValue?: number
                /** @enum {string} */
                source: 'web-vitals'
              }
              CLS: {
                /**
                 * @description Cumulative Layout Shift value
                 * @example 4
                 */
                value: number | null
                /**
                 * @description Previous Cumulative Layout Shift value to display a delta
                 * @example 2
                 */
                previousValue?: number
                /** @enum {string} */
                source: 'web-vitals'
              }
              TBT: {
                /**
                 * @description Total Blocking Time value
                 * @example 3000
                 */
                value: number | null
                /**
                 * @description Previous Total Blocking Time value to display a delta
                 * @example 3500
                 */
                previousValue?: number
                /** @enum {unknown} */
                source: 'web-vitals'
              }
              virtualExperienceScore?: {
                /**
                 * @description The calculated Virtual Experience Score value, between 0 and 100
                 * @example 30
                 */
                value: number | null
                /**
                 * @description A previous Virtual Experience Score value to display a delta, between 0 and 100
                 * @example 35
                 */
                previousValue?: number
                /** @enum {unknown} */
                source: 'web-vitals'
              }
            }
          }
          /**
           * @description An identifier that can be used as an external reference
           * @example 1234abc
           */
          externalId?: string
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
            name: string
            path?: string
            /** @enum {string} */
            status: 'registered' | 'running' | 'completed'
            /** @enum {string} */
            conclusion?:
              | 'canceled'
              | 'failed'
              | 'neutral'
              | 'succeeded'
              | 'skipped'
              | 'stale'
            blocking: boolean
            output?: {
              metrics?: {
                FCP: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                LCP: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                CLS: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                TBT: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
                virtualExperienceScore?: {
                  value: number | null
                  previousValue?: number
                  /** @enum {string} */
                  source: 'web-vitals'
                }
              }
            }
            detailsUrl?: string
            integrationId: string
            deploymentId: string
            externalId?: string
            createdAt: number
            updatedAt: number
            startedAt?: number
            completedAt?: number
            rerequestable?: boolean
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * The provided token is not from an OAuth2 Client
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /**
       * @description Check was not found
       * The deployment was not found
       */
      404: {
        content: never
      }
      /** @description The output provided is too large */
      413: {
        content: never
      }
    }
  }
  /**
   * Rerequest a check
   * @description Rerequest a selected check that has failed.
   */
  rerequestCheck: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The deployment to rerun the check for. */
        deploymentId: string
        /** @description The check to rerun */
        checkId: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /**
       * @description The deployment was not found
       * Check was not found
       */
      404: {
        content: never
      }
    }
  }
  /**
   * Update the data cache feature
   * @description Update the data cache feature on a project.
   */
  updateProjectDataCache: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier */
        projectId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description Enable or disable data cache for the project - default: false
           * @example true
           */
          disabled?: boolean
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            accountId: string
            analytics?: {
              id: string
              canceledAt?: number | null
              disabledAt: number
              enabledAt: number
              paidAt?: number
              sampleRatePercent?: number | null
              spendLimitInDollars?: number | null
            }
            speedInsights?: {
              id: string
              enabledAt?: number
              disabledAt?: number
              canceledAt?: number
              hasData?: boolean
              paidAt?: number
            }
            autoExposeSystemEnvs?: boolean
            autoAssignCustomDomains?: boolean
            autoAssignCustomDomainsUpdatedBy?: string
            buildCommand?: string | null
            commandForIgnoringBuildStep?: string | null
            connectConfigurationId?: string | null
            connectBuildsEnabled?: boolean
            createdAt?: number
            customerSupportCodeVisibility?: boolean
            crons?: {
              /** @description The time the feature was enabled for this project. Note: It enables automatically with the first Deployment that outputs cronjobs. */
              enabledAt: number
              /** @description The time the feature was disabled for this project. */
              disabledAt: number | null
              updatedAt: number
              /** @description The ID of the Deployment from which the definitions originated. */
              deploymentId: string | null
              definitions: {
                /**
                 * @description The hostname that should be used.
                 * @example vercel.com
                 */
                host: string
                /**
                 * @description The path that should be called for the cronjob.
                 * @example /api/crons/sync-something?hello=world
                 */
                path: string
                /**
                 * @description The cron expression.
                 * @example 0 0 * * *
                 */
                schedule: string
              }[]
            }
            dataCache?: {
              userDisabled: boolean
              storageSizeBytes?: number | null
              unlimited?: boolean
            }
            deploymentExpiration?: {
              expirationDays?: number
              expirationDaysProduction?: number
              expirationDaysCanceled?: number
              expirationDaysErrored?: number
              deploymentsToKeep?: number
            } | null
            devCommand?: string | null
            directoryListing: boolean
            installCommand?: string | null
            env?: {
              target?:
                | ('production' | 'preview' | 'development')[]
                | ('production' | 'preview' | 'development')
              /** @enum {string} */
              type: 'secret' | 'system' | 'encrypted' | 'plain' | 'sensitive'
              /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
              sunsetSecretId?: string
              id?: string
              key: string
              value: string
              configurationId?: string | null
              createdAt?: number
              updatedAt?: number
              createdBy?: string | null
              updatedBy?: string | null
              gitBranch?: string
              edgeConfigId?: string | null
              edgeConfigTokenId?: string | null
              contentHint?:
                | {
                    /** @enum {string} */
                    type: 'redis-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-read-only-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'blob-read-write-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url-non-pooling'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-prisma-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-user'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-host'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-password'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-database'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url-no-ssl'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'integration-store-secret'
                    storeId: string
                  }
                | null
              /** @description Similar to `contentHints`, but should not be exposed to the user. */
              internalContentHint?: {
                /** @enum {string} */
                type: 'flags-secret'
                /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                encryptedValue: string
              } | null
              /** @description Whether `value` is decrypted. */
              decrypted?: boolean
              comment?: string
              customEnvironmentIds?: string[]
            }[]
            /** @enum {string|null} */
            framework?:
              | 'blitzjs'
              | 'nextjs'
              | 'gatsby'
              | 'remix'
              | 'astro'
              | 'hexo'
              | 'eleventy'
              | 'docusaurus-2'
              | 'docusaurus'
              | 'preact'
              | 'solidstart-1'
              | 'solidstart'
              | 'dojo'
              | 'ember'
              | 'vue'
              | 'scully'
              | 'ionic-angular'
              | 'angular'
              | 'polymer'
              | 'svelte'
              | 'sveltekit'
              | 'sveltekit-1'
              | 'ionic-react'
              | 'create-react-app'
              | 'gridsome'
              | 'umijs'
              | 'sapper'
              | 'saber'
              | 'stencil'
              | 'nuxtjs'
              | 'redwoodjs'
              | 'hugo'
              | 'jekyll'
              | 'brunch'
              | 'middleman'
              | 'zola'
              | 'hydrogen'
              | 'vite'
              | 'vitepress'
              | 'vuepress'
              | 'parcel'
              | 'sanity'
              | 'storybook'
              | null
            gitForkProtection?: boolean
            gitLFS?: boolean
            id: string
            latestDeployments?: {
              alias?: string[]
              aliasAssigned?: number | boolean | null
              aliasError?: {
                code: string
                message: string
              } | null
              aliasFinal?: string | null
              automaticAliases?: string[]
              builds?: {
                use: string
                src?: string
                dest?: string
              }[]
              connectBuildsEnabled?: boolean
              connectConfigurationId?: string
              createdAt: number
              createdIn: string
              creator: {
                email: string
                githubLogin?: string
                gitlabLogin?: string
                uid: string
                username: string
              } | null
              deletedAt?: number
              deploymentHostname: string
              name: string
              forced?: boolean
              id: string
              meta?: {
                [key: string]: string
              }
              monorepoManager?: string | null
              /** @enum {string} */
              plan: 'pro' | 'enterprise' | 'hobby'
              private: boolean
              /** @enum {string} */
              readyState:
                | 'BUILDING'
                | 'ERROR'
                | 'INITIALIZING'
                | 'QUEUED'
                | 'READY'
                | 'CANCELED'
              /** @enum {string} */
              readySubstate?: 'STAGED' | 'PROMOTED'
              requestedAt?: number
              target?: string | null
              teamId?: string | null
              /** @enum {string} */
              type: 'LAMBDAS'
              url: string
              userId: string
              withCache?: boolean
              /** @enum {string} */
              checksConclusion?: 'succeeded' | 'failed' | 'skipped' | 'canceled'
              /** @enum {string} */
              checksState?: 'registered' | 'running' | 'completed'
              readyAt?: number
              buildingAt?: number
              /**
               * @description Whether or not preview comments are enabled for the deployment
               * @example false
               */
              previewCommentsEnabled?: boolean
              oidcTokenClaims?: {
                [key: string]: string | string[]
              }
            }[]
            link?: OneOf<
              [
                {
                  org?: string
                  repo?: string
                  repoId?: number
                  /** @enum {string} */
                  type?: 'github'
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
                {
                  projectId?: string
                  projectName?: string
                  projectNameWithNamespace?: string
                  projectNamespace?: string
                  projectUrl?: string
                  /** @enum {string} */
                  type?: 'gitlab'
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
                {
                  name?: string
                  slug?: string
                  owner?: string
                  /** @enum {string} */
                  type?: 'bitbucket'
                  uuid?: string
                  workspaceUuid?: string
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
              ]
            >
            name: string
            /** @enum {string} */
            nodeVersion:
              | '20.x'
              | '18.x'
              | '16.x'
              | '14.x'
              | '12.x'
              | '10.x'
              | '8.10.x'
            optionsAllowlist?: {
              paths: {
                value: string
              }[]
            } | null
            outputDirectory?: string | null
            passiveConnectConfigurationId?: string | null
            passwordProtection?: unknown
            productionDeploymentsFastLane?: boolean
            publicSource?: boolean | null
            rootDirectory?: string | null
            serverlessFunctionRegion?: string | null
            serverlessFunctionZeroConfigFailover?: boolean
            skewProtectionBoundaryAt?: number
            skewProtectionMaxAge?: number
            skipGitConnectDuringLink?: boolean
            sourceFilesOutsideRootDirectory?: boolean
            ssoProtection?: {
              /** @enum {string} */
              deploymentType:
                | 'all'
                | 'preview'
                | 'prod_deployment_urls_and_all_previews'
            } | null
            targets?: {
              [key: string]: string | string[]
            }
            transferCompletedAt?: number
            transferStartedAt?: number
            transferToAccountId?: string
            transferredFromAccountId?: string
            updatedAt?: number
            live?: boolean
            enablePreviewFeedback?: boolean | null
            permissions?: {
              accessGroup?: components['schemas']['ACLAction'][]
              aliasGlobal?: components['schemas']['ACLAction'][]
              analyticsSampling?: components['schemas']['ACLAction'][]
              analyticsUsage?: components['schemas']['ACLAction'][]
              auditLog?: components['schemas']['ACLAction'][]
              billingAddress?: components['schemas']['ACLAction'][]
              billingInformation?: components['schemas']['ACLAction'][]
              billingInvoice?: components['schemas']['ACLAction'][]
              billingInvoiceEmailRecipient?: components['schemas']['ACLAction'][]
              billingInvoiceLanguage?: components['schemas']['ACLAction'][]
              billingPlan?: components['schemas']['ACLAction'][]
              billingPurchaseOrder?: components['schemas']['ACLAction'][]
              billingTaxId?: components['schemas']['ACLAction'][]
              blob?: components['schemas']['ACLAction'][]
              budget?: components['schemas']['ACLAction'][]
              cacheArtifact?: components['schemas']['ACLAction'][]
              cacheArtifactUsageEvent?: components['schemas']['ACLAction'][]
              codeChecks?: components['schemas']['ACLAction'][]
              concurrentBuilds?: components['schemas']['ACLAction'][]
              connect?: components['schemas']['ACLAction'][]
              connectConfiguration?: components['schemas']['ACLAction'][]
              domain?: components['schemas']['ACLAction'][]
              domainAcceptDelegation?: components['schemas']['ACLAction'][]
              domainAuthCodes?: components['schemas']['ACLAction'][]
              domainCertificate?: components['schemas']['ACLAction'][]
              domainCheckConfig?: components['schemas']['ACLAction'][]
              domainMove?: components['schemas']['ACLAction'][]
              domainPurchase?: components['schemas']['ACLAction'][]
              domainRecord?: components['schemas']['ACLAction'][]
              domainTransferIn?: components['schemas']['ACLAction'][]
              event?: components['schemas']['ACLAction'][]
              ownEvent?: components['schemas']['ACLAction'][]
              sensitiveEnvironmentVariablePolicy?: components['schemas']['ACLAction'][]
              fileUpload?: components['schemas']['ACLAction'][]
              gitRepository?: components['schemas']['ACLAction'][]
              ipBlocking?: components['schemas']['ACLAction'][]
              integration?: components['schemas']['ACLAction'][]
              integrationAccount?: components['schemas']['ACLAction'][]
              integrationConfiguration?: components['schemas']['ACLAction'][]
              integrationConfigurationTransfer?: components['schemas']['ACLAction'][]
              integrationConfigurationProjects?: components['schemas']['ACLAction'][]
              integrationVercelConfigurationOverride?: components['schemas']['ACLAction'][]
              integrationResource?: components['schemas']['ACLAction'][]
              integrationStore?: components['schemas']['ACLAction'][]
              integrationEvent?: components['schemas']['ACLAction'][]
              integrationResourceSecrets?: components['schemas']['ACLAction'][]
              marketplaceBillingData?: components['schemas']['ACLAction'][]
              jobGlobal?: components['schemas']['ACLAction'][]
              logDrain?: components['schemas']['ACLAction'][]
              Monitoring?: components['schemas']['ACLAction'][]
              monitoringSettings?: components['schemas']['ACLAction'][]
              monitoringQuery?: components['schemas']['ACLAction'][]
              monitoringChart?: components['schemas']['ACLAction'][]
              monitoringAlert?: components['schemas']['ACLAction'][]
              notificationDeploymentFailed?: components['schemas']['ACLAction'][]
              notificationDomainConfiguration?: components['schemas']['ACLAction'][]
              notificationDomainExpire?: components['schemas']['ACLAction'][]
              notificationDomainMoved?: components['schemas']['ACLAction'][]
              notificationDomainPurchase?: components['schemas']['ACLAction'][]
              notificationDomainRenewal?: components['schemas']['ACLAction'][]
              notificationDomainTransfer?: components['schemas']['ACLAction'][]
              notificationDomainUnverified?: components['schemas']['ACLAction'][]
              NotificationMonitoringAlert?: components['schemas']['ACLAction'][]
              notificationPaymentFailed?: components['schemas']['ACLAction'][]
              notificationUsageAlert?: components['schemas']['ACLAction'][]
              notificationCustomerBudget?: components['schemas']['ACLAction'][]
              notificationStatementOfReasons?: components['schemas']['ACLAction'][]
              oauth2Connection?: components['schemas']['ACLAction'][]
              openTelemetryEndpoint?: components['schemas']['ACLAction'][]
              paymentMethod?: components['schemas']['ACLAction'][]
              permissions?: components['schemas']['ACLAction'][]
              postgres?: components['schemas']['ACLAction'][]
              previewDeploymentSuffix?: components['schemas']['ACLAction'][]
              proTrialOnboarding?: components['schemas']['ACLAction'][]
              sharedEnvVars?: components['schemas']['ACLAction'][]
              sharedEnvVarsProduction?: components['schemas']['ACLAction'][]
              space?: components['schemas']['ACLAction'][]
              spaceRun?: components['schemas']['ACLAction'][]
              passwordProtectionInvoiceItem?: components['schemas']['ACLAction'][]
              rateLimit?: components['schemas']['ACLAction'][]
              redis?: components['schemas']['ACLAction'][]
              repository?: components['schemas']['ACLAction'][]
              remoteCaching?: components['schemas']['ACLAction'][]
              samlConfig?: components['schemas']['ACLAction'][]
              secret?: components['schemas']['ACLAction'][]
              redisStoreTokenSet?: components['schemas']['ACLAction'][]
              blobStoreTokenSet?: components['schemas']['ACLAction'][]
              postgresStoreTokenSet?: components['schemas']['ACLAction'][]
              integrationStoreTokenSet?: components['schemas']['ACLAction'][]
              supportCase?: components['schemas']['ACLAction'][]
              supportCaseComment?: components['schemas']['ACLAction'][]
              dataCacheBillingSettings?: components['schemas']['ACLAction'][]
              team?: components['schemas']['ACLAction'][]
              teamAccessRequest?: components['schemas']['ACLAction'][]
              teamFellowMembership?: components['schemas']['ACLAction'][]
              teamGitExclusivity?: components['schemas']['ACLAction'][]
              teamInvite?: components['schemas']['ACLAction'][]
              teamInviteCode?: components['schemas']['ACLAction'][]
              teamJoin?: components['schemas']['ACLAction'][]
              teamOwnMembership?: components['schemas']['ACLAction'][]
              teamOwnMembershipDisconnectSAML?: components['schemas']['ACLAction'][]
              token?: components['schemas']['ACLAction'][]
              usage?: components['schemas']['ACLAction'][]
              usageCycle?: components['schemas']['ACLAction'][]
              user?: components['schemas']['ACLAction'][]
              userConnection?: components['schemas']['ACLAction'][]
              webAnalyticsPlan?: components['schemas']['ACLAction'][]
              webAuthn?: components['schemas']['ACLAction'][]
              edgeConfig?: components['schemas']['ACLAction'][]
              edgeConfigItem?: components['schemas']['ACLAction'][]
              edgeConfigSchema?: components['schemas']['ACLAction'][]
              edgeConfigToken?: components['schemas']['ACLAction'][]
              webhook?: components['schemas']['ACLAction'][]
              'webhook-event'?: components['schemas']['ACLAction'][]
              endpointVerification?: components['schemas']['ACLAction'][]
              projectTransferIn?: components['schemas']['ACLAction'][]
              oauth2Application?: components['schemas']['ACLAction'][]
              aliasProject?: components['schemas']['ACLAction'][]
              aliasProtectionBypass?: components['schemas']['ACLAction'][]
              productionAliasProtectionBypass?: components['schemas']['ACLAction'][]
              connectConfigurationLink?: components['schemas']['ACLAction'][]
              dataCacheNamespace?: components['schemas']['ACLAction'][]
              deployment?: components['schemas']['ACLAction'][]
              deploymentCheck?: components['schemas']['ACLAction'][]
              deploymentCheckPreview?: components['schemas']['ACLAction'][]
              deploymentCheckReRunFromProductionBranch?: components['schemas']['ACLAction'][]
              deploymentProductionGit?: components['schemas']['ACLAction'][]
              deploymentPreview?: components['schemas']['ACLAction'][]
              deploymentPrivate?: components['schemas']['ACLAction'][]
              deploymentPromote?: components['schemas']['ACLAction'][]
              deploymentRollback?: components['schemas']['ACLAction'][]
              environments?: components['schemas']['ACLAction'][]
              logs?: components['schemas']['ACLAction'][]
              logsPreset?: components['schemas']['ACLAction'][]
              passwordProtection?: components['schemas']['ACLAction'][]
              optionsAllowlist?: components['schemas']['ACLAction'][]
              job?: components['schemas']['ACLAction'][]
              project?: components['schemas']['ACLAction'][]
              projectAccessGroup?: components['schemas']['ACLAction'][]
              projectAnalyticsSampling?: components['schemas']['ACLAction'][]
              projectDeploymentHook?: components['schemas']['ACLAction'][]
              projectDomain?: components['schemas']['ACLAction'][]
              projectDomainMove?: components['schemas']['ACLAction'][]
              projectDomainCheckConfig?: components['schemas']['ACLAction'][]
              projectEnvVars?: components['schemas']['ACLAction'][]
              projectEnvVarsProduction?: components['schemas']['ACLAction'][]
              projectEnvVarsUnownedByIntegration?: components['schemas']['ACLAction'][]
              projectId?: components['schemas']['ACLAction'][]
              projectIntegrationConfiguration?: components['schemas']['ACLAction'][]
              projectLink?: components['schemas']['ACLAction'][]
              projectMember?: components['schemas']['ACLAction'][]
              projectMonitoring?: components['schemas']['ACLAction'][]
              projectPermissions?: components['schemas']['ACLAction'][]
              projectProductionBranch?: components['schemas']['ACLAction'][]
              projectTransfer?: components['schemas']['ACLAction'][]
              projectTransferOut?: components['schemas']['ACLAction'][]
              projectProtectionBypass?: components['schemas']['ACLAction'][]
              projectUsage?: components['schemas']['ACLAction'][]
              projectAnalyticsUsage?: components['schemas']['ACLAction'][]
              projectSupportCase?: components['schemas']['ACLAction'][]
              projectSupportCaseComment?: components['schemas']['ACLAction'][]
              projectDeploymentExpiration?: components['schemas']['ACLAction'][]
              seawallConfig?: components['schemas']['ACLAction'][]
              skewProtection?: components['schemas']['ACLAction'][]
              analytics?: components['schemas']['ACLAction'][]
              trustedIps?: components['schemas']['ACLAction'][]
              webAnalytics?: components['schemas']['ACLAction'][]
              sharedEnvVarConnection?: components['schemas']['ACLAction'][]
            }
            lastRollbackTarget?: unknown
            lastAliasRequest?: {
              fromDeploymentId: string
              toDeploymentId: string
              /** @enum {string} */
              jobStatus:
                | 'succeeded'
                | 'failed'
                | 'skipped'
                | 'pending'
                | 'in-progress'
              requestedAt: number
              /** @enum {string} */
              type: 'promote' | 'rollback'
            } | null
            hasFloatingAliases?: boolean
            protectionBypass?: {
              [key: string]: {
                createdAt: number
                createdBy: string
                /** @enum {string} */
                scope: 'automation-bypass'
              }
            }
            hasActiveBranches?: boolean
            trustedIps?: OneOf<
              [
                {
                  /** @enum {string} */
                  deploymentType:
                    | 'all'
                    | 'preview'
                    | 'prod_deployment_urls_and_all_previews'
                    | 'production'
                  addresses: {
                    value: string
                    note?: string
                  }[]
                  /** @enum {string} */
                  protectionMode: 'additional' | 'exclusive'
                },
                {
                  /** @enum {string} */
                  deploymentType:
                    | 'all'
                    | 'preview'
                    | 'prod_deployment_urls_and_all_previews'
                    | 'production'
                },
                null,
              ]
            >
            gitComments?: {
              /** @description Whether the Vercel bot should comment on PRs */
              onPullRequest: boolean
              /** @description Whether the Vercel bot should comment on commits */
              onCommit: boolean
            }
            paused?: boolean
            concurrencyBucketName?: string
            webAnalytics?: {
              id: string
              disabledAt?: number
              canceledAt?: number
              enabledAt?: number
              hasData?: boolean
            }
            security?: {
              attackModeEnabled?: boolean
              attackModeUpdatedAt?: number
              firewallEnabled?: boolean
              firewallUpdatedAt?: number
              attackModeActiveUntil?: number | null
              firewallConfigVersion?: number
              firewallRoutes?: {
                src?: OneOf<
                  [
                    string,
                    {
                      re?: string
                      eq?: string
                      neq?: string
                      inc?: string[]
                      ninc?: string[]
                      pre?: string
                      suf?: string
                      gt?: number
                      gte?: number
                      lt?: number
                      lte?: number
                    },
                  ]
                >
                has?: {
                  /** @enum {string} */
                  type:
                    | 'host'
                    | 'method'
                    | 'path'
                    | 'header'
                    | 'cookie'
                    | 'query'
                    | 'ip_address'
                    | 'protocol'
                    | 'scheme'
                    | 'region'
                  key?: string
                  value?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                }[]
                missing?: {
                  /** @enum {string} */
                  type:
                    | 'host'
                    | 'method'
                    | 'path'
                    | 'header'
                    | 'cookie'
                    | 'query'
                    | 'ip_address'
                    | 'protocol'
                    | 'scheme'
                    | 'region'
                  key?: string
                  value?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                }[]
                dest?: string
                status?: number
                /** @enum {string} */
                handle?: 'init' | 'finalize'
                mitigate?: {
                  /** @enum {string} */
                  action: 'deny' | 'challenge' | 'log' | 'bypass' | 'rate_limit'
                  rule_id: string
                  erl?: {
                    /** @enum {string} */
                    algo: 'fixed_window' | 'token_bucket'
                    window: number
                    limit: number
                    keys: string[]
                  }
                }
              }[]
              firewallSeawallEnabled?: boolean
              ja3Enabled?: boolean
              ja4Enabled?: boolean
            }
            oidcTokenConfig?: {
              enabled: boolean
            }
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Get deployment events
   * @description Get the build logs of a deployment by deployment ID and build ID. It can work as an infinite stream of logs or as a JSON endpoint depending on the input parameters.
   */
  getDeploymentEvents: {
    parameters: {
      query?: {
        /** @description Order of the returned events based on the timestamp. */
        direction?: 'backward' | 'forward'
        /** @description When enabled, this endpoint will return live events as they happen. */
        follow?: 0 | 1
        /** @description Maximum number of events to return. Provide `-1` to return all available logs. */
        limit?: number
        /** @description Deployment build ID. */
        name?: string
        /** @description Timestamp for when build logs should be pulled from. */
        since?: number
        /** @description Timestamp for when the build logs should be pulled up until. */
        until?: number
        /** @description HTTP status code range to filter events by. */
        statusCode?: number | string
        delimiter?: 0 | 1
        builds?: 0 | 1
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique identifier or hostname of the deployment. */
        idOrUrl: string
      }
    }
    responses: {
      /**
       * @description A stream of jsonlines where each line is a deployment log item.
       * Array of deployment logs for the provided query.
       */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                created: number
                date: number
                deploymentId: string
                id: string
                info: {
                  type: string
                  name: string
                  entrypoint?: string
                  path?: string
                  step?: string
                  readyState?: string
                }
                proxy?: {
                  timestamp: number
                  method: string
                  host: string
                  path: string
                  statusCode?: number
                  userAgent: string[]
                  referer: string
                  clientIp: string
                  region: string
                  scheme?: string
                  responseByteSize?: number
                  cacheId?: string
                  pathType?: string
                  vercelId?: string
                  /** @enum {string} */
                  vercelCache?:
                    | 'MISS'
                    | 'HIT'
                    | 'STALE'
                    | 'BYPASS'
                    | 'PRERENDER'
                    | 'REVALIDATED'
                  lambdaRegion?: string
                }
                requestId?: string
                serial: string
                statusCode?: number
                text?: string
                /** @enum {string} */
                type:
                  | 'command'
                  | 'stdout'
                  | 'stderr'
                  | 'exit'
                  | 'deployment-state'
                  | 'delimiter'
                  | 'middleware'
                  | 'middleware-invocation'
                  | 'edge-function-invocation'
                  | 'fatal'
              },
              {
                /** @enum {string} */
                type:
                  | 'command'
                  | 'stdout'
                  | 'stderr'
                  | 'exit'
                  | 'deployment-state'
                  | 'delimiter'
                  | 'middleware'
                  | 'middleware-invocation'
                  | 'edge-function-invocation'
                  | 'fatal'
                created: number
                payload: {
                  deploymentId: string
                  info?: {
                    type: string
                    name: string
                    entrypoint?: string
                    path?: string
                    step?: string
                    readyState?: string
                  }
                  text?: string
                  id: string
                  date: number
                  serial: string
                  created?: number
                  statusCode?: number
                  requestId?: string
                  proxy?: {
                    timestamp: number
                    method: string
                    host: string
                    path: string
                    statusCode?: number
                    userAgent: string[]
                    referer: string
                    clientIp: string
                    region: string
                    scheme?: string
                    responseByteSize?: number
                    cacheId?: string
                    pathType?: string
                    vercelId?: string
                    /** @enum {string} */
                    vercelCache?:
                      | 'MISS'
                      | 'HIT'
                      | 'STALE'
                      | 'BYPASS'
                      | 'PRERENDER'
                      | 'REVALIDATED'
                    lambdaRegion?: string
                  }
                }
              },
            ]
          >[]
          'application/stream+json': OneOf<
            [
              {
                created: number
                date: number
                deploymentId: string
                id: string
                info: {
                  type: string
                  name: string
                  entrypoint?: string
                  path?: string
                  step?: string
                  readyState?: string
                }
                proxy?: {
                  timestamp: number
                  method: string
                  host: string
                  path: string
                  statusCode?: number
                  userAgent: string[]
                  referer: string
                  clientIp: string
                  region: string
                  scheme?: string
                  responseByteSize?: number
                  cacheId?: string
                  pathType?: string
                  vercelId?: string
                  /** @enum {string} */
                  vercelCache?:
                    | 'MISS'
                    | 'HIT'
                    | 'STALE'
                    | 'BYPASS'
                    | 'PRERENDER'
                    | 'REVALIDATED'
                  lambdaRegion?: string
                }
                requestId?: string
                serial: string
                statusCode?: number
                text?: string
                /** @enum {string} */
                type:
                  | 'command'
                  | 'stdout'
                  | 'stderr'
                  | 'exit'
                  | 'deployment-state'
                  | 'delimiter'
                  | 'middleware'
                  | 'middleware-invocation'
                  | 'edge-function-invocation'
                  | 'fatal'
              },
              {
                /** @enum {string} */
                type:
                  | 'command'
                  | 'stdout'
                  | 'stderr'
                  | 'exit'
                  | 'deployment-state'
                  | 'delimiter'
                  | 'middleware'
                  | 'middleware-invocation'
                  | 'edge-function-invocation'
                  | 'fatal'
                created: number
                payload: {
                  deploymentId: string
                  info?: {
                    type: string
                    name: string
                    entrypoint?: string
                    path?: string
                    step?: string
                    readyState?: string
                  }
                  text?: string
                  id: string
                  date: number
                  serial: string
                  created?: number
                  statusCode?: number
                  requestId?: string
                  proxy?: {
                    timestamp: number
                    method: string
                    host: string
                    path: string
                    statusCode?: number
                    userAgent: string[]
                    referer: string
                    clientIp: string
                    region: string
                    scheme?: string
                    responseByteSize?: number
                    cacheId?: string
                    pathType?: string
                    vercelId?: string
                    /** @enum {string} */
                    vercelCache?:
                      | 'MISS'
                      | 'HIT'
                      | 'STALE'
                      | 'BYPASS'
                      | 'PRERENDER'
                      | 'REVALIDATED'
                    lambdaRegion?: string
                  }
                }
              },
              OneOf<
                [
                  {
                    created: number
                    date: number
                    deploymentId: string
                    id: string
                    info: {
                      type: string
                      name: string
                      entrypoint?: string
                      path?: string
                      step?: string
                      readyState?: string
                    }
                    proxy?: {
                      timestamp: number
                      method: string
                      host: string
                      path: string
                      statusCode?: number
                      userAgent: string[]
                      referer: string
                      clientIp: string
                      region: string
                      scheme?: string
                      responseByteSize?: number
                      cacheId?: string
                      pathType?: string
                      vercelId?: string
                      /** @enum {string} */
                      vercelCache?:
                        | 'MISS'
                        | 'HIT'
                        | 'STALE'
                        | 'BYPASS'
                        | 'PRERENDER'
                        | 'REVALIDATED'
                      lambdaRegion?: string
                    }
                    requestId?: string
                    serial: string
                    statusCode?: number
                    text?: string
                    /** @enum {string} */
                    type:
                      | 'command'
                      | 'stdout'
                      | 'stderr'
                      | 'exit'
                      | 'deployment-state'
                      | 'delimiter'
                      | 'middleware'
                      | 'middleware-invocation'
                      | 'edge-function-invocation'
                      | 'fatal'
                  },
                  {
                    /** @enum {string} */
                    type:
                      | 'command'
                      | 'stdout'
                      | 'stderr'
                      | 'exit'
                      | 'deployment-state'
                      | 'delimiter'
                      | 'middleware'
                      | 'middleware-invocation'
                      | 'edge-function-invocation'
                      | 'fatal'
                    created: number
                    payload: {
                      deploymentId: string
                      info?: {
                        type: string
                        name: string
                        entrypoint?: string
                        path?: string
                        step?: string
                        readyState?: string
                      }
                      text?: string
                      id: string
                      date: number
                      serial: string
                      created?: number
                      statusCode?: number
                      requestId?: string
                      proxy?: {
                        timestamp: number
                        method: string
                        host: string
                        path: string
                        statusCode?: number
                        userAgent: string[]
                        referer: string
                        clientIp: string
                        region: string
                        scheme?: string
                        responseByteSize?: number
                        cacheId?: string
                        pathType?: string
                        vercelId?: string
                        /** @enum {string} */
                        vercelCache?:
                          | 'MISS'
                          | 'HIT'
                          | 'STALE'
                          | 'BYPASS'
                          | 'PRERENDER'
                          | 'REVALIDATED'
                        lambdaRegion?: string
                      }
                    }
                  },
                ]
              >,
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The deployment was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Get a deployment by ID or URL
   * @description Retrieves information for a deployment either by supplying its ID (`id` property) or Hostname (`url` property). Additional details will be included when the authenticated user or team is an owner of the deployment.
   */
  getDeployment: {
    parameters: {
      query?: {
        /** @description Whether to add in gitRepo information. */
        withGitRepoInfo?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique identifier or hostname of the deployment. */
        idOrUrl: string
      }
    }
    responses: {
      /**
       * @description The deployment including only public information
       * The deployment including both public and private information
       */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                aliasAssignedAt?: number | boolean | null
                alwaysRefuseToBuild?: boolean
                build: {
                  env: string[]
                }
                builds?: Record<string, never>[]
                env: string[]
                inspectorUrl: string | null
                isInConcurrentBuildsQueue: boolean
                projectSettings: {
                  buildCommand?: string | null
                  devCommand?: string | null
                  /** @enum {string|null} */
                  framework?:
                    | 'blitzjs'
                    | 'nextjs'
                    | 'gatsby'
                    | 'remix'
                    | 'astro'
                    | 'hexo'
                    | 'eleventy'
                    | 'docusaurus-2'
                    | 'docusaurus'
                    | 'preact'
                    | 'solidstart-1'
                    | 'solidstart'
                    | 'dojo'
                    | 'ember'
                    | 'vue'
                    | 'scully'
                    | 'ionic-angular'
                    | 'angular'
                    | 'polymer'
                    | 'svelte'
                    | 'sveltekit'
                    | 'sveltekit-1'
                    | 'ionic-react'
                    | 'create-react-app'
                    | 'gridsome'
                    | 'umijs'
                    | 'sapper'
                    | 'saber'
                    | 'stencil'
                    | 'nuxtjs'
                    | 'redwoodjs'
                    | 'hugo'
                    | 'jekyll'
                    | 'brunch'
                    | 'middleman'
                    | 'zola'
                    | 'hydrogen'
                    | 'vite'
                    | 'vitepress'
                    | 'vuepress'
                    | 'parcel'
                    | 'sanity'
                    | 'storybook'
                    | null
                  commandForIgnoringBuildStep?: string | null
                  installCommand?: string | null
                  outputDirectory?: string | null
                  speedInsights?: {
                    id: string
                    enabledAt?: number
                    disabledAt?: number
                    canceledAt?: number
                    hasData?: boolean
                    paidAt?: number
                  }
                  webAnalytics?: {
                    id: string
                    disabledAt?: number
                    canceledAt?: number
                    enabledAt?: number
                    hasData?: boolean
                  }
                }
                readyStateReason?: string
                alias?: string[]
                aliasAssigned: boolean
                bootedAt: number
                buildingAt: number
                buildSkipped: boolean
                creator: {
                  uid: string
                  username?: string
                  avatar?: string
                }
                initReadyAt?: number
                isFirstBranchDeployment?: boolean
                lambdas?: {
                  buildCommand?: string | null
                  devCommand?: string | null
                  /** @enum {string|null} */
                  framework?:
                    | 'blitzjs'
                    | 'nextjs'
                    | 'gatsby'
                    | 'remix'
                    | 'astro'
                    | 'hexo'
                    | 'eleventy'
                    | 'docusaurus-2'
                    | 'docusaurus'
                    | 'preact'
                    | 'solidstart-1'
                    | 'solidstart'
                    | 'dojo'
                    | 'ember'
                    | 'vue'
                    | 'scully'
                    | 'ionic-angular'
                    | 'angular'
                    | 'polymer'
                    | 'svelte'
                    | 'sveltekit'
                    | 'sveltekit-1'
                    | 'ionic-react'
                    | 'create-react-app'
                    | 'gridsome'
                    | 'umijs'
                    | 'sapper'
                    | 'saber'
                    | 'stencil'
                    | 'nuxtjs'
                    | 'redwoodjs'
                    | 'hugo'
                    | 'jekyll'
                    | 'brunch'
                    | 'middleman'
                    | 'zola'
                    | 'hydrogen'
                    | 'vite'
                    | 'vitepress'
                    | 'vuepress'
                    | 'parcel'
                    | 'sanity'
                    | 'storybook'
                    | null
                  commandForIgnoringBuildStep?: string | null
                  installCommand?: string | null
                  outputDirectory?: string | null
                  speedInsights?: {
                    id: string
                    enabledAt?: number
                    disabledAt?: number
                    canceledAt?: number
                    hasData?: boolean
                    paidAt?: number
                  }
                  webAnalytics?: {
                    id: string
                    disabledAt?: number
                    canceledAt?: number
                    enabledAt?: number
                    hasData?: boolean
                  }
                  output: {
                    path: string
                    functionName: string
                  }[]
                }[]
                public: boolean
                ready?: number
                /** @enum {string} */
                status:
                  | 'QUEUED'
                  | 'BUILDING'
                  | 'ERROR'
                  | 'INITIALIZING'
                  | 'READY'
                  | 'CANCELED'
                team?: {
                  buildCommand?: string | null
                  devCommand?: string | null
                  /** @enum {string|null} */
                  framework?:
                    | 'blitzjs'
                    | 'nextjs'
                    | 'gatsby'
                    | 'remix'
                    | 'astro'
                    | 'hexo'
                    | 'eleventy'
                    | 'docusaurus-2'
                    | 'docusaurus'
                    | 'preact'
                    | 'solidstart-1'
                    | 'solidstart'
                    | 'dojo'
                    | 'ember'
                    | 'vue'
                    | 'scully'
                    | 'ionic-angular'
                    | 'angular'
                    | 'polymer'
                    | 'svelte'
                    | 'sveltekit'
                    | 'sveltekit-1'
                    | 'ionic-react'
                    | 'create-react-app'
                    | 'gridsome'
                    | 'umijs'
                    | 'sapper'
                    | 'saber'
                    | 'stencil'
                    | 'nuxtjs'
                    | 'redwoodjs'
                    | 'hugo'
                    | 'jekyll'
                    | 'brunch'
                    | 'middleman'
                    | 'zola'
                    | 'hydrogen'
                    | 'vite'
                    | 'vitepress'
                    | 'vuepress'
                    | 'parcel'
                    | 'sanity'
                    | 'storybook'
                    | null
                  commandForIgnoringBuildStep?: string | null
                  installCommand?: string | null
                  outputDirectory?: string | null
                  speedInsights?: {
                    id: string
                    enabledAt?: number
                    disabledAt?: number
                    canceledAt?: number
                    hasData?: boolean
                    paidAt?: number
                  }
                  webAnalytics?: {
                    id: string
                    disabledAt?: number
                    canceledAt?: number
                    enabledAt?: number
                    hasData?: boolean
                  }
                }
                userAliases?: string[]
                previewCommentsEnabled?: boolean
                ttyBuildLogs?: boolean
                customEnvironment?: OneOf<
                  [
                    {
                      id: string
                      name: string
                      slug: string
                      /** @enum {string} */
                      type: 'production' | 'preview' | 'development'
                      description?: string
                      branchMatcher?: {
                        /** @enum {string} */
                        type: 'startsWith' | 'equals' | 'endsWith'
                        pattern: string
                      }
                      createdAt: number
                      updatedAt: number
                    },
                    {
                      id: string
                    },
                  ]
                >
                aliasWarning?: {
                  code: string
                  message: string
                  link?: string
                  action?: string
                } | null
                aliasError?: {
                  code: string
                  message: string
                } | null
                aliasFinal?: string | null
                automaticAliases?: string[]
                /** @description applies to custom domains only, defaults to `true` */
                autoAssignCustomDomains?: boolean
                /** @enum {string} */
                type: 'LAMBDAS'
                id: string
                createdAt: number
                deletedAt?: number | null
                name: string
                /** @enum {number} */
                version: 2
                /** @enum {string} */
                readyState:
                  | 'QUEUED'
                  | 'BUILDING'
                  | 'ERROR'
                  | 'INITIALIZING'
                  | 'READY'
                  | 'CANCELED'
                buildErrorAt?: number
                /** @enum {string} */
                checksState?: 'registered' | 'running' | 'completed'
                /** @enum {string} */
                checksConclusion?:
                  | 'succeeded'
                  | 'failed'
                  | 'skipped'
                  | 'canceled'
                canceledAt?: number
                errorCode?: string
                errorLink?: string
                errorMessage?: string | null
                errorStep?: string
                /** @description Since November 2023 this field defines a set of regions that we will deploy the lambda to passively Lambdas will be deployed to these regions but only invoked if all of the primary `regions` are marked as out of service */
                passiveRegions?: string[]
                gitSource?:
                  | {
                      /** @enum {string} */
                      type: 'github'
                      repoId: string | number
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'github'
                      org: string
                      repo: string
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'gitlab'
                      projectId: string | number
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'bitbucket'
                      workspaceUuid?: string
                      repoUuid: string
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'bitbucket'
                      owner: string
                      slug: string
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'custom'
                      ref: string
                      sha: string
                      gitUrl: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'github'
                      ref: string
                      sha: string
                      repoId: number
                      org?: string
                      repo?: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'gitlab'
                      ref: string
                      sha: string
                      projectId: number
                    }
                  | {
                      /** @enum {string} */
                      type: 'bitbucket'
                      ref: string
                      sha: string
                      owner?: string
                      slug?: string
                      workspaceUuid: string
                      repoUuid: string
                    }
                meta: {
                  [key: string]: string
                }
                project?: {
                  id: string
                  name: string
                  framework?: string | null
                }
                /**
                 * @description Since June 2023 Substate of deployment when readyState is 'READY' Tracks whether or not deployment has seen production traffic: - STAGED: never seen production traffic - PROMOTED: has seen production traffic
                 * @enum {string}
                 */
                readySubstate?: 'STAGED' | 'PROMOTED'
                regions: string[]
                /** @enum {string} */
                source?:
                  | 'api-trigger-git-deploy'
                  | 'cli'
                  | 'clone/repo'
                  | 'git'
                  | 'import'
                  | 'import/repo'
                /** @enum {string|null} */
                target?: 'staging' | 'production' | null
                undeletedAt?: number
                url: string
                oidcTokenClaims?: {
                  [key: string]: string
                }
                /** @enum {string} */
                plan: 'pro' | 'enterprise' | 'hobby'
                connectBuildsEnabled?: boolean
                connectConfigurationId?: string
                createdIn: string
                crons?: {
                  schedule: string
                  path: string
                }[]
                functions?: {
                  [key: string]: {
                    memory?: number
                    maxDuration?: number
                    runtime?: string
                    includeFiles?: string
                    excludeFiles?: string
                  }
                } | null
                monorepoManager?: string | null
                ownerId: string
                /** @description Since November 2023 this field defines a connect configuration that will only be used to deploy passive lambdas to (as in passiveRegions) */
                passiveConnectConfigurationId?: string
                projectId: string
                routes:
                  | OneOf<
                      [
                        {
                          src: string
                          dest?: string
                          headers?: {
                            [key: string]: string
                          }
                          methods?: string[]
                          continue?: boolean
                          override?: boolean
                          caseSensitive?: boolean
                          check?: boolean
                          important?: boolean
                          status?: number
                          has?: OneOf<
                            [
                              {
                                /** @enum {string} */
                                type: 'host'
                                value: string
                              },
                              {
                                /** @enum {string} */
                                type: 'header' | 'cookie' | 'query'
                                key: string
                                value?: string
                              },
                            ]
                          >[]
                          missing?: OneOf<
                            [
                              {
                                /** @enum {string} */
                                type: 'host'
                                value: string
                              },
                              {
                                /** @enum {string} */
                                type: 'header' | 'cookie' | 'query'
                                key: string
                                value?: string
                              },
                            ]
                          >[]
                          locale?: {
                            redirect?: {
                              [key: string]: string
                            }
                            cookie?: string
                          }
                          /** @description A middleware key within the `output` key under the build result. Overrides a `middleware` definition. */
                          middlewarePath?: string
                          /** @description The original middleware matchers. */
                          middlewareRawSrc?: string[]
                          /** @description A middleware index in the `middleware` key under the build result */
                          middleware?: number
                        },
                        {
                          /** @enum {string} */
                          handle:
                            | 'error'
                            | 'filesystem'
                            | 'hit'
                            | 'miss'
                            | 'rewrite'
                            | 'resource'
                          src?: string
                          dest?: string
                          status?: number
                        },
                        {
                          src: string
                          continue: boolean
                          /** @enum {number} */
                          middleware: 0
                        },
                      ]
                    >[]
                  | null
                gitRepo?: OneOf<
                  [
                    {
                      namespace: string
                      projectId: number
                      /** @enum {string} */
                      type: 'gitlab'
                      url: string
                      path: string
                      defaultBranch: string
                      name: string
                      private: boolean
                      /** @enum {string} */
                      ownerType: 'team' | 'user'
                    },
                    {
                      org: string
                      repo: string
                      repoId: number
                      /** @enum {string} */
                      type: 'github'
                      repoOwnerId: string
                      path: string
                      defaultBranch: string
                      name: string
                      private: boolean
                      /** @enum {string} */
                      ownerType: 'team' | 'user'
                    },
                    {
                      owner: string
                      repoUuid: string
                      slug: string
                      /** @enum {string} */
                      type: 'bitbucket'
                      workspaceUuid: string
                      path: string
                      defaultBranch: string
                      name: string
                      private: boolean
                      /** @enum {string} */
                      ownerType: 'team' | 'user'
                    },
                    null,
                  ]
                >
                flags?: OneOf<
                  [
                    {
                      definitions: {
                        [key: string]: string
                      }
                    },
                    Record<string, never>[],
                  ]
                >
              },
              {
                alias?: string[]
                aliasAssigned: boolean
                bootedAt: number
                buildingAt: number
                buildSkipped: boolean
                creator: {
                  uid: string
                  username?: string
                  avatar?: string
                }
                initReadyAt?: number
                isFirstBranchDeployment?: boolean
                lambdas?: {
                  buildCommand?: string | null
                  devCommand?: string | null
                  /** @enum {string|null} */
                  framework?:
                    | 'blitzjs'
                    | 'nextjs'
                    | 'gatsby'
                    | 'remix'
                    | 'astro'
                    | 'hexo'
                    | 'eleventy'
                    | 'docusaurus-2'
                    | 'docusaurus'
                    | 'preact'
                    | 'solidstart-1'
                    | 'solidstart'
                    | 'dojo'
                    | 'ember'
                    | 'vue'
                    | 'scully'
                    | 'ionic-angular'
                    | 'angular'
                    | 'polymer'
                    | 'svelte'
                    | 'sveltekit'
                    | 'sveltekit-1'
                    | 'ionic-react'
                    | 'create-react-app'
                    | 'gridsome'
                    | 'umijs'
                    | 'sapper'
                    | 'saber'
                    | 'stencil'
                    | 'nuxtjs'
                    | 'redwoodjs'
                    | 'hugo'
                    | 'jekyll'
                    | 'brunch'
                    | 'middleman'
                    | 'zola'
                    | 'hydrogen'
                    | 'vite'
                    | 'vitepress'
                    | 'vuepress'
                    | 'parcel'
                    | 'sanity'
                    | 'storybook'
                    | null
                  commandForIgnoringBuildStep?: string | null
                  installCommand?: string | null
                  outputDirectory?: string | null
                  speedInsights?: {
                    id: string
                    enabledAt?: number
                    disabledAt?: number
                    canceledAt?: number
                    hasData?: boolean
                    paidAt?: number
                  }
                  webAnalytics?: {
                    id: string
                    disabledAt?: number
                    canceledAt?: number
                    enabledAt?: number
                    hasData?: boolean
                  }
                  output: {
                    path: string
                    functionName: string
                  }[]
                }[]
                public: boolean
                ready?: number
                /** @enum {string} */
                status:
                  | 'QUEUED'
                  | 'BUILDING'
                  | 'ERROR'
                  | 'INITIALIZING'
                  | 'READY'
                  | 'CANCELED'
                team?: {
                  buildCommand?: string | null
                  devCommand?: string | null
                  /** @enum {string|null} */
                  framework?:
                    | 'blitzjs'
                    | 'nextjs'
                    | 'gatsby'
                    | 'remix'
                    | 'astro'
                    | 'hexo'
                    | 'eleventy'
                    | 'docusaurus-2'
                    | 'docusaurus'
                    | 'preact'
                    | 'solidstart-1'
                    | 'solidstart'
                    | 'dojo'
                    | 'ember'
                    | 'vue'
                    | 'scully'
                    | 'ionic-angular'
                    | 'angular'
                    | 'polymer'
                    | 'svelte'
                    | 'sveltekit'
                    | 'sveltekit-1'
                    | 'ionic-react'
                    | 'create-react-app'
                    | 'gridsome'
                    | 'umijs'
                    | 'sapper'
                    | 'saber'
                    | 'stencil'
                    | 'nuxtjs'
                    | 'redwoodjs'
                    | 'hugo'
                    | 'jekyll'
                    | 'brunch'
                    | 'middleman'
                    | 'zola'
                    | 'hydrogen'
                    | 'vite'
                    | 'vitepress'
                    | 'vuepress'
                    | 'parcel'
                    | 'sanity'
                    | 'storybook'
                    | null
                  commandForIgnoringBuildStep?: string | null
                  installCommand?: string | null
                  outputDirectory?: string | null
                  speedInsights?: {
                    id: string
                    enabledAt?: number
                    disabledAt?: number
                    canceledAt?: number
                    hasData?: boolean
                    paidAt?: number
                  }
                  webAnalytics?: {
                    id: string
                    disabledAt?: number
                    canceledAt?: number
                    enabledAt?: number
                    hasData?: boolean
                  }
                }
                userAliases?: string[]
                previewCommentsEnabled?: boolean
                ttyBuildLogs?: boolean
                customEnvironment?: OneOf<
                  [
                    {
                      id: string
                      name: string
                      slug: string
                      /** @enum {string} */
                      type: 'production' | 'preview' | 'development'
                      description?: string
                      branchMatcher?: {
                        /** @enum {string} */
                        type: 'startsWith' | 'equals' | 'endsWith'
                        pattern: string
                      }
                      createdAt: number
                      updatedAt: number
                    },
                    {
                      id: string
                    },
                  ]
                >
                aliasWarning?: {
                  code: string
                  message: string
                  link?: string
                  action?: string
                } | null
                aliasError?: {
                  code: string
                  message: string
                } | null
                aliasFinal?: string | null
                automaticAliases?: string[]
                /** @description applies to custom domains only, defaults to `true` */
                autoAssignCustomDomains?: boolean
                /** @enum {string} */
                type: 'LAMBDAS'
                id: string
                createdAt: number
                deletedAt?: number | null
                name: string
                /** @enum {number} */
                version: 2
                /** @enum {string} */
                readyState:
                  | 'QUEUED'
                  | 'BUILDING'
                  | 'ERROR'
                  | 'INITIALIZING'
                  | 'READY'
                  | 'CANCELED'
                buildErrorAt?: number
                /** @enum {string} */
                checksState?: 'registered' | 'running' | 'completed'
                /** @enum {string} */
                checksConclusion?:
                  | 'succeeded'
                  | 'failed'
                  | 'skipped'
                  | 'canceled'
                canceledAt?: number
                errorCode?: string
                errorLink?: string
                errorMessage?: string | null
                errorStep?: string
                /** @description Since November 2023 this field defines a set of regions that we will deploy the lambda to passively Lambdas will be deployed to these regions but only invoked if all of the primary `regions` are marked as out of service */
                passiveRegions?: string[]
                gitSource?:
                  | {
                      /** @enum {string} */
                      type: 'github'
                      repoId: string | number
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'github'
                      org: string
                      repo: string
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'gitlab'
                      projectId: string | number
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'bitbucket'
                      workspaceUuid?: string
                      repoUuid: string
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'bitbucket'
                      owner: string
                      slug: string
                      ref?: string | null
                      sha?: string
                      prId?: number | null
                    }
                  | {
                      /** @enum {string} */
                      type: 'custom'
                      ref: string
                      sha: string
                      gitUrl: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'github'
                      ref: string
                      sha: string
                      repoId: number
                      org?: string
                      repo?: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'gitlab'
                      ref: string
                      sha: string
                      projectId: number
                    }
                  | {
                      /** @enum {string} */
                      type: 'bitbucket'
                      ref: string
                      sha: string
                      owner?: string
                      slug?: string
                      workspaceUuid: string
                      repoUuid: string
                    }
                meta: {
                  [key: string]: string
                }
                project?: {
                  id: string
                  name: string
                  framework?: string | null
                }
                /**
                 * @description Since June 2023 Substate of deployment when readyState is 'READY' Tracks whether or not deployment has seen production traffic: - STAGED: never seen production traffic - PROMOTED: has seen production traffic
                 * @enum {string}
                 */
                readySubstate?: 'STAGED' | 'PROMOTED'
                regions: string[]
                /** @enum {string} */
                source?:
                  | 'api-trigger-git-deploy'
                  | 'cli'
                  | 'clone/repo'
                  | 'git'
                  | 'import'
                  | 'import/repo'
                /** @enum {string|null} */
                target?: 'staging' | 'production' | null
                undeletedAt?: number
                url: string
                oidcTokenClaims?: {
                  [key: string]: string
                }
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The deployment was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Create a new deployment
   * @description Create a new deployment with all the required and intended data. If the deployment is not a git deployment, all files must be provided with the request, either referenced or inlined. Additionally, a deployment id can be specified to redeploy a previous deployment.
   */
  createDeployment: {
    parameters: {
      query?: {
        /** @description Forces a new deployment even if there is a previous similar deployment */
        forceNew?: '0' | '1'
        /** @description Allows to skip framework detection so the API would not fail to ask for confirmation */
        skipAutoDetectionConfirmation?: '0' | '1'
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description Deploy to a custom environment, which will override the default environment */
          customEnvironmentSlugOrId?: string
          /** @description An deployment id for an existing deployment to redeploy */
          deploymentId?: string
          /** @description A list of objects with the files to be deployed */
          files?: OneOf<
            [
              {
                /** @description The file content, it could be either a `base64` (useful for images, etc.) of the files or the plain content for source code */
                data: string
                /**
                 * @description The file content encoding, it could be either a base64 (useful for images, etc.) of the files or the plain text for source code.
                 * @enum {unknown}
                 */
                encoding?: 'base64' | 'utf-8'
                /**
                 * @description The file name including the whole path
                 * @example folder/file.js
                 */
                file: string
              },
              {
                /**
                 * @description The file path relative to the project root
                 * @example folder/file.js
                 */
                file: string
                /** @description The file contents hashed with SHA1, used to check the integrity */
                sha?: string
                /** @description The file size in bytes */
                size?: number
              },
            ]
          >[]
          /** @description Populates initial git metadata for different git providers. */
          gitMetadata?: {
            /**
             * @description The git repository's remote origin url
             * @example https://github.com/vercel/next.js
             */
            remoteUrl?: string
            /**
             * @description The name of the author of the commit
             * @example kyliau
             */
            commitAuthorName?: string
            /**
             * @description The commit message
             * @example add method to measure Interaction to Next Paint (INP) (#36490)
             */
            commitMessage?: string
            /**
             * @description The branch on which the commit was made
             * @example main
             */
            commitRef?: string
            /**
             * @description The hash of the commit
             * @example dc36199b2234c6586ebe05ec94078a895c707e29
             */
            commitSha?: string
            /**
             * @description Whether or not there have been modifications to the working tree since the latest commit
             * @example true
             */
            dirty?: boolean
          }
          /** @description Defines the Git Repository source to be deployed. This property can not be used in combination with `files`. */
          gitSource?:
            | {
                ref: string
                repoId: number | string
                sha?: string
                /** @enum {string} */
                type: 'github'
              }
            | {
                org: string
                ref: string
                repo: string
                sha?: string
                /** @enum {string} */
                type: 'github'
              }
            | {
                projectId: number | string
                ref: string
                sha?: string
                /** @enum {string} */
                type: 'gitlab'
              }
            | {
                ref: string
                repoUuid: string
                sha?: string
                /** @enum {string} */
                type: 'bitbucket'
                workspaceUuid?: string
              }
            | {
                owner: string
                ref: string
                sha?: string
                slug: string
                /** @enum {string} */
                type: 'bitbucket'
              }
          /**
           * @description An object containing the deployment's metadata. Multiple key-value pairs can be attached to a deployment
           * @example {
           *   "foo": "bar"
           * }
           */
          meta?: {
            [key: string]: string
          }
          /** @description The monorepo manager that is being used for this deployment. When `null` is used no monorepo manager is selected */
          monorepoManager?: string | null
          /**
           * @description A string with the project name used in the deployment URL
           * @example my-instant-deployment
           */
          name: string
          /**
           * @description The target project identifier in which the deployment will be created. When defined, this parameter overrides name
           * @example my-deployment-project
           */
          project?: string
          /** @description Project settings that will be applied to the deployment. It is required for the first deployment of a project and will be saved for any following deployments */
          projectSettings?: {
            /** @description The build command for this project. When `null` is used this value will be automatically detected */
            buildCommand?: string | null
            commandForIgnoringBuildStep?: string | null
            /** @description The dev command for this project. When `null` is used this value will be automatically detected */
            devCommand?: string | null
            /**
             * @description The framework that is being used for this project. When `null` is used no framework is selected
             * @enum {string|null}
             */
            framework?:
              | null
              | 'blitzjs'
              | 'nextjs'
              | 'gatsby'
              | 'remix'
              | 'astro'
              | 'hexo'
              | 'eleventy'
              | 'docusaurus-2'
              | 'docusaurus'
              | 'preact'
              | 'solidstart-1'
              | 'solidstart'
              | 'dojo'
              | 'ember'
              | 'vue'
              | 'scully'
              | 'ionic-angular'
              | 'angular'
              | 'polymer'
              | 'svelte'
              | 'sveltekit'
              | 'sveltekit-1'
              | 'ionic-react'
              | 'create-react-app'
              | 'gridsome'
              | 'umijs'
              | 'sapper'
              | 'saber'
              | 'stencil'
              | 'nuxtjs'
              | 'redwoodjs'
              | 'hugo'
              | 'jekyll'
              | 'brunch'
              | 'middleman'
              | 'zola'
              | 'hydrogen'
              | 'vite'
              | 'vitepress'
              | 'vuepress'
              | 'parcel'
              | 'sanity'
              | 'storybook'
            /** @description The install command for this project. When `null` is used this value will be automatically detected */
            installCommand?: string | null
            /**
             * @description Override the Node.js version that should be used for this deployment
             * @enum {string}
             */
            nodeVersion?: '20.x' | '18.x' | '16.x'
            /** @description The output directory of the project. When `null` is used this value will be automatically detected */
            outputDirectory?: string | null
            /** @description The name of a directory or relative path to the source code of your project. When `null` is used it will default to the project root */
            rootDirectory?: string | null
            /** @description The region to deploy Serverless Functions in this project */
            serverlessFunctionRegion?: string | null
            /**
             * @deprecated
             * @description Opts-out of the message prompting a CLI user to connect a Git repository in `vercel link`.
             */
            skipGitConnectDuringLink?: boolean
            /** @description Indicates if there are source files outside of the root directory, typically used for monorepos */
            sourceFilesOutsideRootDirectory?: boolean
          }
          /**
           * @description Either not defined, `staging`, or `production`. If `staging`, a staging alias in the format `<project>-<team>.vercel.app` will be assigned. If `production`, any aliases defined in `alias` will be assigned. If omitted, the target will be `preview`
           * @enum {string}
           */
          target?: 'staging' | 'production'
          /** @description When `true` and `deploymentId` is passed in, the sha from the previous deployment's `gitSource` is removed forcing the latest commit to be used. */
          withLatestCommit?: boolean
        }
      }
    }
    responses: {
      /** @description The successfully created deployment */
      200: {
        content: {
          'application/json': {
            aliasAssignedAt?: number | boolean | null
            alwaysRefuseToBuild?: boolean
            build: {
              env: string[]
            }
            builds?: Record<string, never>[]
            env: string[]
            inspectorUrl: string | null
            isInConcurrentBuildsQueue: boolean
            projectSettings: {
              buildCommand?: string | null
              commandForIgnoringBuildStep?: string | null
              devCommand?: string | null
              /** @enum {string|null} */
              framework?:
                | 'blitzjs'
                | 'nextjs'
                | 'gatsby'
                | 'remix'
                | 'astro'
                | 'hexo'
                | 'eleventy'
                | 'docusaurus-2'
                | 'docusaurus'
                | 'preact'
                | 'solidstart-1'
                | 'solidstart'
                | 'dojo'
                | 'ember'
                | 'vue'
                | 'scully'
                | 'ionic-angular'
                | 'angular'
                | 'polymer'
                | 'svelte'
                | 'sveltekit'
                | 'sveltekit-1'
                | 'ionic-react'
                | 'create-react-app'
                | 'gridsome'
                | 'umijs'
                | 'sapper'
                | 'saber'
                | 'stencil'
                | 'nuxtjs'
                | 'redwoodjs'
                | 'hugo'
                | 'jekyll'
                | 'brunch'
                | 'middleman'
                | 'zola'
                | 'hydrogen'
                | 'vite'
                | 'vitepress'
                | 'vuepress'
                | 'parcel'
                | 'sanity'
                | 'storybook'
                | null
              installCommand?: string | null
              outputDirectory?: string | null
              speedInsights?: {
                id: string
                enabledAt?: number
                disabledAt?: number
                canceledAt?: number
                hasData?: boolean
                paidAt?: number
              }
              webAnalytics?: {
                id: string
                disabledAt?: number
                canceledAt?: number
                enabledAt?: number
                hasData?: boolean
              }
            }
            readyStateReason?: string
            alias?: string[]
            aliasAssigned: boolean
            bootedAt: number
            buildingAt: number
            buildSkipped: boolean
            creator: {
              uid: string
              username?: string
              avatar?: string
            }
            initReadyAt?: number
            isFirstBranchDeployment?: boolean
            lambdas?: {
              buildCommand?: string | null
              commandForIgnoringBuildStep?: string | null
              devCommand?: string | null
              /** @enum {string|null} */
              framework?:
                | 'blitzjs'
                | 'nextjs'
                | 'gatsby'
                | 'remix'
                | 'astro'
                | 'hexo'
                | 'eleventy'
                | 'docusaurus-2'
                | 'docusaurus'
                | 'preact'
                | 'solidstart-1'
                | 'solidstart'
                | 'dojo'
                | 'ember'
                | 'vue'
                | 'scully'
                | 'ionic-angular'
                | 'angular'
                | 'polymer'
                | 'svelte'
                | 'sveltekit'
                | 'sveltekit-1'
                | 'ionic-react'
                | 'create-react-app'
                | 'gridsome'
                | 'umijs'
                | 'sapper'
                | 'saber'
                | 'stencil'
                | 'nuxtjs'
                | 'redwoodjs'
                | 'hugo'
                | 'jekyll'
                | 'brunch'
                | 'middleman'
                | 'zola'
                | 'hydrogen'
                | 'vite'
                | 'vitepress'
                | 'vuepress'
                | 'parcel'
                | 'sanity'
                | 'storybook'
                | null
              installCommand?: string | null
              outputDirectory?: string | null
              speedInsights?: {
                id: string
                enabledAt?: number
                disabledAt?: number
                canceledAt?: number
                hasData?: boolean
                paidAt?: number
              }
              webAnalytics?: {
                id: string
                disabledAt?: number
                canceledAt?: number
                enabledAt?: number
                hasData?: boolean
              }
              output: {
                path: string
                functionName: string
              }[]
            }[]
            public: boolean
            ready?: number
            /** @enum {string} */
            status:
              | 'CANCELED'
              | 'ERROR'
              | 'QUEUED'
              | 'BUILDING'
              | 'INITIALIZING'
              | 'READY'
            team?: {
              buildCommand?: string | null
              commandForIgnoringBuildStep?: string | null
              devCommand?: string | null
              /** @enum {string|null} */
              framework?:
                | 'blitzjs'
                | 'nextjs'
                | 'gatsby'
                | 'remix'
                | 'astro'
                | 'hexo'
                | 'eleventy'
                | 'docusaurus-2'
                | 'docusaurus'
                | 'preact'
                | 'solidstart-1'
                | 'solidstart'
                | 'dojo'
                | 'ember'
                | 'vue'
                | 'scully'
                | 'ionic-angular'
                | 'angular'
                | 'polymer'
                | 'svelte'
                | 'sveltekit'
                | 'sveltekit-1'
                | 'ionic-react'
                | 'create-react-app'
                | 'gridsome'
                | 'umijs'
                | 'sapper'
                | 'saber'
                | 'stencil'
                | 'nuxtjs'
                | 'redwoodjs'
                | 'hugo'
                | 'jekyll'
                | 'brunch'
                | 'middleman'
                | 'zola'
                | 'hydrogen'
                | 'vite'
                | 'vitepress'
                | 'vuepress'
                | 'parcel'
                | 'sanity'
                | 'storybook'
                | null
              installCommand?: string | null
              outputDirectory?: string | null
              speedInsights?: {
                id: string
                enabledAt?: number
                disabledAt?: number
                canceledAt?: number
                hasData?: boolean
                paidAt?: number
              }
              webAnalytics?: {
                id: string
                disabledAt?: number
                canceledAt?: number
                enabledAt?: number
                hasData?: boolean
              }
            }
            userAliases?: string[]
            previewCommentsEnabled?: boolean
            ttyBuildLogs?: boolean
            customEnvironment?: OneOf<
              [
                {
                  id: string
                  name: string
                  slug: string
                  /** @enum {string} */
                  type: 'production' | 'preview' | 'development'
                  description?: string
                  branchMatcher?: {
                    /** @enum {string} */
                    type: 'endsWith' | 'startsWith' | 'equals'
                    pattern: string
                  }
                  createdAt: number
                  updatedAt: number
                },
                {
                  id: string
                },
              ]
            >
            /** @enum {string} */
            type: 'LAMBDAS'
            name: string
            createdAt: number
            deletedAt?: number | null
            id: string
            /** @enum {number} */
            version: 2
            /** @description applies to custom domains only, defaults to `true` */
            autoAssignCustomDomains?: boolean
            gitSource?:
              | {
                  /** @enum {string} */
                  type: 'github'
                  repoId: string | number
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'github'
                  org: string
                  repo: string
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'gitlab'
                  projectId: string | number
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'bitbucket'
                  workspaceUuid?: string
                  repoUuid: string
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'bitbucket'
                  owner: string
                  slug: string
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'custom'
                  ref: string
                  sha: string
                  gitUrl: string
                }
              | {
                  /** @enum {string} */
                  type: 'github'
                  ref: string
                  sha: string
                  repoId: number
                  org?: string
                  repo?: string
                }
              | {
                  /** @enum {string} */
                  type: 'gitlab'
                  ref: string
                  sha: string
                  projectId: number
                }
              | {
                  /** @enum {string} */
                  type: 'bitbucket'
                  ref: string
                  sha: string
                  owner?: string
                  slug?: string
                  workspaceUuid: string
                  repoUuid: string
                }
            meta: {
              [key: string]: string
            }
            project?: {
              id: string
              name: string
              framework?: string | null
            }
            /** @enum {string} */
            readyState:
              | 'CANCELED'
              | 'ERROR'
              | 'QUEUED'
              | 'BUILDING'
              | 'INITIALIZING'
              | 'READY'
            /** @enum {string} */
            source?:
              | 'cli'
              | 'git'
              | 'import'
              | 'import/repo'
              | 'clone/repo'
              | 'api-trigger-git-deploy'
            /** @enum {string|null} */
            target?: 'staging' | 'production' | null
            /** @description Since November 2023 this field defines a set of regions that we will deploy the lambda to passively Lambdas will be deployed to these regions but only invoked if all of the primary `regions` are marked as out of service */
            passiveRegions?: string[]
            regions: string[]
            errorMessage?: string | null
            aliasWarning?: {
              code: string
              message: string
              link?: string
              action?: string
            } | null
            aliasError?: {
              code: string
              message: string
            } | null
            aliasFinal?: string | null
            automaticAliases?: string[]
            buildErrorAt?: number
            /** @enum {string} */
            checksState?: 'registered' | 'running' | 'completed'
            /** @enum {string} */
            checksConclusion?: 'succeeded' | 'failed' | 'skipped' | 'canceled'
            canceledAt?: number
            errorCode?: string
            errorLink?: string
            errorStep?: string
            /**
             * @description Since June 2023 Substate of deployment when readyState is 'READY' Tracks whether or not deployment has seen production traffic: - STAGED: never seen production traffic - PROMOTED: has seen production traffic
             * @enum {string}
             */
            readySubstate?: 'STAGED' | 'PROMOTED'
            undeletedAt?: number
            url: string
            oidcTokenClaims?: {
              [key: string]: string
            }
            projectId: string
            ownerId: string
            monorepoManager?: string | null
            functions?: {
              [key: string]: {
                memory?: number
                maxDuration?: number
                runtime?: string
                includeFiles?: string
                excludeFiles?: string
              }
            } | null
            routes:
              | OneOf<
                  [
                    {
                      src: string
                      dest?: string
                      headers?: {
                        [key: string]: string
                      }
                      methods?: string[]
                      continue?: boolean
                      override?: boolean
                      caseSensitive?: boolean
                      check?: boolean
                      important?: boolean
                      status?: number
                      has?: OneOf<
                        [
                          {
                            /** @enum {string} */
                            type: 'host'
                            value: string
                          },
                          {
                            /** @enum {string} */
                            type: 'header' | 'cookie' | 'query'
                            key: string
                            value?: string
                          },
                        ]
                      >[]
                      missing?: OneOf<
                        [
                          {
                            /** @enum {string} */
                            type: 'host'
                            value: string
                          },
                          {
                            /** @enum {string} */
                            type: 'header' | 'cookie' | 'query'
                            key: string
                            value?: string
                          },
                        ]
                      >[]
                      locale?: {
                        redirect?: {
                          [key: string]: string
                        }
                        cookie?: string
                      }
                      /** @description A middleware key within the `output` key under the build result. Overrides a `middleware` definition. */
                      middlewarePath?: string
                      /** @description The original middleware matchers. */
                      middlewareRawSrc?: string[]
                      /** @description A middleware index in the `middleware` key under the build result */
                      middleware?: number
                    },
                    {
                      /** @enum {string} */
                      handle:
                        | 'error'
                        | 'filesystem'
                        | 'hit'
                        | 'miss'
                        | 'resource'
                        | 'rewrite'
                      src?: string
                      dest?: string
                      status?: number
                    },
                    {
                      src: string
                      continue: boolean
                      /** @enum {number} */
                      middleware: 0
                    },
                  ]
                >[]
              | null
            crons?: {
              schedule: string
              path: string
            }[]
            /** @enum {string} */
            plan: 'pro' | 'enterprise' | 'hobby'
            connectBuildsEnabled?: boolean
            connectConfigurationId?: string
            createdIn: string
            /** @description Since November 2023 this field defines a connect configuration that will only be used to deploy passive lambdas to (as in passiveRegions) */
            passiveConnectConfigurationId?: string
            gitRepo?: OneOf<
              [
                {
                  namespace: string
                  projectId: number
                  /** @enum {string} */
                  type: 'gitlab'
                  url: string
                  path: string
                  defaultBranch: string
                  name: string
                  private: boolean
                  /** @enum {string} */
                  ownerType: 'user' | 'team'
                },
                {
                  org: string
                  repo: string
                  repoId: number
                  /** @enum {string} */
                  type: 'github'
                  repoOwnerId: string
                  path: string
                  defaultBranch: string
                  name: string
                  private: boolean
                  /** @enum {string} */
                  ownerType: 'user' | 'team'
                },
                {
                  owner: string
                  repoUuid: string
                  slug: string
                  /** @enum {string} */
                  type: 'bitbucket'
                  workspaceUuid: string
                  path: string
                  defaultBranch: string
                  name: string
                  private: boolean
                  /** @enum {string} */
                  ownerType: 'user' | 'team'
                },
                null,
              ]
            >
            flags?: OneOf<
              [
                {
                  definitions: {
                    [key: string]: string
                  }
                },
                Record<string, never>[],
              ]
            >
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       * Deploying to Serverless Functions to multiple regions requires a plan update
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      /** @description The deployment project is being transferred */
      409: {
        content: never
      }
    }
  }
  /**
   * Cancel a deployment
   * @description This endpoint allows you to cancel a deployment which is currently building, by supplying its `id` in the URL.
   */
  cancelDeployment: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique identifier of the deployment. */
        id: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            aliasAssignedAt?: number | boolean | null
            alwaysRefuseToBuild?: boolean
            build: {
              env: string[]
            }
            builds?: Record<string, never>[]
            env: string[]
            inspectorUrl: string | null
            isInConcurrentBuildsQueue: boolean
            projectSettings: {
              buildCommand?: string | null
              devCommand?: string | null
              /** @enum {string|null} */
              framework?:
                | 'blitzjs'
                | 'nextjs'
                | 'gatsby'
                | 'remix'
                | 'astro'
                | 'hexo'
                | 'eleventy'
                | 'docusaurus-2'
                | 'docusaurus'
                | 'preact'
                | 'solidstart-1'
                | 'solidstart'
                | 'dojo'
                | 'ember'
                | 'vue'
                | 'scully'
                | 'ionic-angular'
                | 'angular'
                | 'polymer'
                | 'svelte'
                | 'sveltekit'
                | 'sveltekit-1'
                | 'ionic-react'
                | 'create-react-app'
                | 'gridsome'
                | 'umijs'
                | 'sapper'
                | 'saber'
                | 'stencil'
                | 'nuxtjs'
                | 'redwoodjs'
                | 'hugo'
                | 'jekyll'
                | 'brunch'
                | 'middleman'
                | 'zola'
                | 'hydrogen'
                | 'vite'
                | 'vitepress'
                | 'vuepress'
                | 'parcel'
                | 'sanity'
                | 'storybook'
                | null
              commandForIgnoringBuildStep?: string | null
              installCommand?: string | null
              outputDirectory?: string | null
              speedInsights?: {
                id: string
                enabledAt?: number
                disabledAt?: number
                canceledAt?: number
                hasData?: boolean
                paidAt?: number
              }
              webAnalytics?: {
                id: string
                disabledAt?: number
                canceledAt?: number
                enabledAt?: number
                hasData?: boolean
              }
            }
            readyStateReason?: string
            alias?: string[]
            aliasAssigned: boolean
            bootedAt: number
            buildingAt: number
            buildSkipped: boolean
            creator: {
              uid: string
              username?: string
              avatar?: string
            }
            initReadyAt?: number
            isFirstBranchDeployment?: boolean
            lambdas?: {
              buildCommand?: string | null
              devCommand?: string | null
              /** @enum {string|null} */
              framework?:
                | 'blitzjs'
                | 'nextjs'
                | 'gatsby'
                | 'remix'
                | 'astro'
                | 'hexo'
                | 'eleventy'
                | 'docusaurus-2'
                | 'docusaurus'
                | 'preact'
                | 'solidstart-1'
                | 'solidstart'
                | 'dojo'
                | 'ember'
                | 'vue'
                | 'scully'
                | 'ionic-angular'
                | 'angular'
                | 'polymer'
                | 'svelte'
                | 'sveltekit'
                | 'sveltekit-1'
                | 'ionic-react'
                | 'create-react-app'
                | 'gridsome'
                | 'umijs'
                | 'sapper'
                | 'saber'
                | 'stencil'
                | 'nuxtjs'
                | 'redwoodjs'
                | 'hugo'
                | 'jekyll'
                | 'brunch'
                | 'middleman'
                | 'zola'
                | 'hydrogen'
                | 'vite'
                | 'vitepress'
                | 'vuepress'
                | 'parcel'
                | 'sanity'
                | 'storybook'
                | null
              commandForIgnoringBuildStep?: string | null
              installCommand?: string | null
              outputDirectory?: string | null
              speedInsights?: {
                id: string
                enabledAt?: number
                disabledAt?: number
                canceledAt?: number
                hasData?: boolean
                paidAt?: number
              }
              webAnalytics?: {
                id: string
                disabledAt?: number
                canceledAt?: number
                enabledAt?: number
                hasData?: boolean
              }
              output: {
                path: string
                functionName: string
              }[]
            }[]
            public: boolean
            ready?: number
            /** @enum {string} */
            status:
              | 'BUILDING'
              | 'ERROR'
              | 'INITIALIZING'
              | 'QUEUED'
              | 'READY'
              | 'CANCELED'
            team?: {
              buildCommand?: string | null
              devCommand?: string | null
              /** @enum {string|null} */
              framework?:
                | 'blitzjs'
                | 'nextjs'
                | 'gatsby'
                | 'remix'
                | 'astro'
                | 'hexo'
                | 'eleventy'
                | 'docusaurus-2'
                | 'docusaurus'
                | 'preact'
                | 'solidstart-1'
                | 'solidstart'
                | 'dojo'
                | 'ember'
                | 'vue'
                | 'scully'
                | 'ionic-angular'
                | 'angular'
                | 'polymer'
                | 'svelte'
                | 'sveltekit'
                | 'sveltekit-1'
                | 'ionic-react'
                | 'create-react-app'
                | 'gridsome'
                | 'umijs'
                | 'sapper'
                | 'saber'
                | 'stencil'
                | 'nuxtjs'
                | 'redwoodjs'
                | 'hugo'
                | 'jekyll'
                | 'brunch'
                | 'middleman'
                | 'zola'
                | 'hydrogen'
                | 'vite'
                | 'vitepress'
                | 'vuepress'
                | 'parcel'
                | 'sanity'
                | 'storybook'
                | null
              commandForIgnoringBuildStep?: string | null
              installCommand?: string | null
              outputDirectory?: string | null
              speedInsights?: {
                id: string
                enabledAt?: number
                disabledAt?: number
                canceledAt?: number
                hasData?: boolean
                paidAt?: number
              }
              webAnalytics?: {
                id: string
                disabledAt?: number
                canceledAt?: number
                enabledAt?: number
                hasData?: boolean
              }
            }
            userAliases?: string[]
            previewCommentsEnabled?: boolean
            ttyBuildLogs?: boolean
            customEnvironment?: OneOf<
              [
                {
                  id: string
                  name: string
                  slug: string
                  /** @enum {string} */
                  type: 'production' | 'preview' | 'development'
                  description?: string
                  branchMatcher?: {
                    /** @enum {string} */
                    type: 'startsWith' | 'equals' | 'endsWith'
                    pattern: string
                  }
                  createdAt: number
                  updatedAt: number
                },
                {
                  id: string
                },
              ]
            >
            id: string
            aliasError?: {
              code: string
              message: string
            } | null
            aliasFinal?: string | null
            aliasWarning?: {
              code: string
              message: string
              link?: string
              action?: string
            } | null
            /** @description applies to custom domains only, defaults to `true` */
            autoAssignCustomDomains?: boolean
            automaticAliases?: string[]
            buildErrorAt?: number
            /** @enum {string} */
            checksState?: 'registered' | 'running' | 'completed'
            /** @enum {string} */
            checksConclusion?: 'succeeded' | 'failed' | 'skipped' | 'canceled'
            createdAt: number
            deletedAt?: number | null
            canceledAt?: number
            errorCode?: string
            errorLink?: string
            errorMessage?: string | null
            errorStep?: string
            /** @description Since November 2023 this field defines a set of regions that we will deploy the lambda to passively Lambdas will be deployed to these regions but only invoked if all of the primary `regions` are marked as out of service */
            passiveRegions?: string[]
            gitSource?:
              | {
                  /** @enum {string} */
                  type: 'github'
                  repoId: string | number
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'github'
                  org: string
                  repo: string
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'gitlab'
                  projectId: string | number
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'bitbucket'
                  workspaceUuid?: string
                  repoUuid: string
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'bitbucket'
                  owner: string
                  slug: string
                  ref?: string | null
                  sha?: string
                  prId?: number | null
                }
              | {
                  /** @enum {string} */
                  type: 'custom'
                  ref: string
                  sha: string
                  gitUrl: string
                }
              | {
                  /** @enum {string} */
                  type: 'github'
                  ref: string
                  sha: string
                  repoId: number
                  org?: string
                  repo?: string
                }
              | {
                  /** @enum {string} */
                  type: 'gitlab'
                  ref: string
                  sha: string
                  projectId: number
                }
              | {
                  /** @enum {string} */
                  type: 'bitbucket'
                  ref: string
                  sha: string
                  owner?: string
                  slug?: string
                  workspaceUuid: string
                  repoUuid: string
                }
            name: string
            meta: {
              [key: string]: string
            }
            project?: {
              id: string
              name: string
              framework?: string | null
            }
            /** @enum {string} */
            readyState:
              | 'BUILDING'
              | 'ERROR'
              | 'INITIALIZING'
              | 'QUEUED'
              | 'READY'
              | 'CANCELED'
            /**
             * @description Since June 2023 Substate of deployment when readyState is 'READY' Tracks whether or not deployment has seen production traffic: - STAGED: never seen production traffic - PROMOTED: has seen production traffic
             * @enum {string}
             */
            readySubstate?: 'STAGED' | 'PROMOTED'
            regions: string[]
            /** @enum {string} */
            source?:
              | 'api-trigger-git-deploy'
              | 'cli'
              | 'clone/repo'
              | 'git'
              | 'import'
              | 'import/repo'
            /** @enum {string|null} */
            target?: 'production' | 'staging' | null
            /** @enum {string} */
            type: 'LAMBDAS'
            undeletedAt?: number
            url: string
            /** @enum {number} */
            version: 2
            oidcTokenClaims?: {
              [key: string]: string
            }
            connectBuildsEnabled?: boolean
            connectConfigurationId?: string
            createdIn: string
            crons?: {
              schedule: string
              path: string
            }[]
            functions?: {
              [key: string]: {
                memory?: number
                maxDuration?: number
                runtime?: string
                includeFiles?: string
                excludeFiles?: string
              }
            } | null
            monorepoManager?: string | null
            ownerId: string
            /** @description Since November 2023 this field defines a connect configuration that will only be used to deploy passive lambdas to (as in passiveRegions) */
            passiveConnectConfigurationId?: string
            /** @enum {string} */
            plan: 'pro' | 'enterprise' | 'hobby'
            projectId: string
            routes:
              | OneOf<
                  [
                    {
                      src: string
                      dest?: string
                      headers?: {
                        [key: string]: string
                      }
                      methods?: string[]
                      continue?: boolean
                      override?: boolean
                      caseSensitive?: boolean
                      check?: boolean
                      important?: boolean
                      status?: number
                      has?: OneOf<
                        [
                          {
                            /** @enum {string} */
                            type: 'host'
                            value: string
                          },
                          {
                            /** @enum {string} */
                            type: 'header' | 'cookie' | 'query'
                            key: string
                            value?: string
                          },
                        ]
                      >[]
                      missing?: OneOf<
                        [
                          {
                            /** @enum {string} */
                            type: 'host'
                            value: string
                          },
                          {
                            /** @enum {string} */
                            type: 'header' | 'cookie' | 'query'
                            key: string
                            value?: string
                          },
                        ]
                      >[]
                      locale?: {
                        redirect?: {
                          [key: string]: string
                        }
                        cookie?: string
                      }
                      /** @description A middleware key within the `output` key under the build result. Overrides a `middleware` definition. */
                      middlewarePath?: string
                      /** @description The original middleware matchers. */
                      middlewareRawSrc?: string[]
                      /** @description A middleware index in the `middleware` key under the build result */
                      middleware?: number
                    },
                    {
                      /** @enum {string} */
                      handle:
                        | 'filesystem'
                        | 'hit'
                        | 'miss'
                        | 'rewrite'
                        | 'error'
                        | 'resource'
                      src?: string
                      dest?: string
                      status?: number
                    },
                    {
                      src: string
                      continue: boolean
                      /** @enum {number} */
                      middleware: 0
                    },
                  ]
                >[]
              | null
            gitRepo?: OneOf<
              [
                {
                  namespace: string
                  projectId: number
                  /** @enum {string} */
                  type: 'gitlab'
                  url: string
                  path: string
                  defaultBranch: string
                  name: string
                  private: boolean
                  /** @enum {string} */
                  ownerType: 'team' | 'user'
                },
                {
                  org: string
                  repo: string
                  repoId: number
                  /** @enum {string} */
                  type: 'github'
                  repoOwnerId: string
                  path: string
                  defaultBranch: string
                  name: string
                  private: boolean
                  /** @enum {string} */
                  ownerType: 'team' | 'user'
                },
                {
                  owner: string
                  repoUuid: string
                  slug: string
                  /** @enum {string} */
                  type: 'bitbucket'
                  workspaceUuid: string
                  path: string
                  defaultBranch: string
                  name: string
                  private: boolean
                  /** @enum {string} */
                  ownerType: 'team' | 'user'
                },
                null,
              ]
            >
            flags?: OneOf<
              [
                {
                  definitions: {
                    [key: string]: string
                  }
                },
                Record<string, never>[],
              ]
            >
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Purchase a domain
   * @description Allows to purchase the specified domain.
   */
  buyDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The domain name to purchase.
           * @example example.com
           */
          name: string
          /**
           * @description The price you expect to be charged for the purchase.
           * @example 10
           */
          expectedPrice?: number
          /**
           * @description Indicates whether the domain should be automatically renewed.
           * @example true
           */
          renew?: boolean
        }
      }
    }
    responses: {
      /** @description Successful response for purchasing a Domain. */
      201: {
        content: {
          'application/json': {
            domain: {
              uid: string
              ns: string[]
              verified: boolean
              created: number
              pending: boolean
            }
          }
        }
      }
      /** @description Domain purchase is being processed asynchronously. */
      202: {
        content: {
          'application/json': {
            domain: {
              uid: string
              ns: string[]
              verified: boolean
              created: number
              pending: boolean
            }
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      409: {
        content: never
      }
      429: {
        content: never
      }
    }
  }
  /**
   * Check the price for a domain
   * @description Check the price to purchase a domain and how long a single purchase period is.
   */
  checkDomainPrice: {
    parameters: {
      query: {
        /** @description The name of the domain for which the price needs to be checked. */
        name: string
        /** @description In which status of the domain the price needs to be checked. */
        type?: 'new' | 'renewal'
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description Successful response which returns the price of the domain and the period. */
      200: {
        content: {
          'application/json': {
            /**
             * @description The domain price in USD.
             * @example 20
             */
            price: number
            /**
             * @description The number of years the domain could be held before paying again.
             * @example 1
             */
            period: number
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * List existing DNS records
   * @description Retrieves a list of DNS records created for a domain name. By default it returns 20 records if no limit is provided. The rest can be retrieved using the pagination options.
   */
  getRecords: {
    parameters: {
      query?: {
        /** @description Maximum number of records to list from a request. */
        limit?: string
        /** @description Get records created after this JavaScript timestamp. */
        since?: string
        /** @description Get records created before this JavaScript timestamp. */
        until?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        domain: string
      }
    }
    responses: {
      /** @description Successful response retrieving a list of paginated DNS records. */
      200: {
        content: {
          'application/json': OneOf<
            [
              string,
              {
                records: {
                  id: string
                  slug: string
                  name: string
                  /** @enum {string} */
                  type:
                    | 'A'
                    | 'AAAA'
                    | 'ALIAS'
                    | 'CAA'
                    | 'CNAME'
                    | 'HTTPS'
                    | 'MX'
                    | 'SRV'
                    | 'TXT'
                    | 'NS'
                  value: string
                  mxPriority?: number
                  priority?: number
                  creator: string
                  created: number | null
                  updated: number | null
                  createdAt: number | null
                  updatedAt: number | null
                }[]
              },
              {
                records: {
                  id: string
                  slug: string
                  name: string
                  /** @enum {string} */
                  type:
                    | 'A'
                    | 'AAAA'
                    | 'ALIAS'
                    | 'CAA'
                    | 'CNAME'
                    | 'HTTPS'
                    | 'MX'
                    | 'SRV'
                    | 'TXT'
                    | 'NS'
                  value: string
                  mxPriority?: number
                  priority?: number
                  creator: string
                  created: number | null
                  updated: number | null
                  createdAt: number | null
                  updatedAt: number | null
                }[]
                pagination: components['schemas']['Pagination']
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Create a DNS record
   * @description Creates a DNS record for a domain.
   */
  createRecord: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The domain used to create the DNS record. */
        domain: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The type of record, it could be one of the valid DNS records.
           * @enum {string}
           */
          type:
            | 'A'
            | 'AAAA'
            | 'ALIAS'
            | 'CAA'
            | 'CNAME'
            | 'HTTPS'
            | 'MX'
            | 'SRV'
            | 'TXT'
            | 'NS'
        } & (
          | {
              /**
               * @description A subdomain name or an empty string for the root domain.
               * @example subdomain
               */
              name: string
              /**
               * @description Must be of type `A`.
               * @enum {string}
               */
              type: 'A'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              /**
               * Format: ipv4
               * @description The record value must be a valid IPv4 address.
               * @example 192.0.2.42
               */
              value: string
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /**
               * @description A subdomain name or an empty string for the root domain.
               * @example subdomain
               */
              name: string
              /**
               * @description Must be of type `AAAA`.
               * @enum {string}
               */
              type: 'AAAA'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              /**
               * Format: ipv6
               * @description An AAAA record pointing to an IPv6 address.
               * @example 2001:DB8::42
               */
              value: string
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /**
               * @description A subdomain name or an empty string for the root domain.
               * @example subdomain
               */
              name: string
              /**
               * @description Must be of type `ALIAS`.
               * @enum {string}
               */
              type: 'ALIAS'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              /**
               * @description An ALIAS virtual record pointing to a hostname resolved to an A record on server side.
               * @example cname.vercel-dns.com
               */
              value: string
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /**
               * @description A subdomain name or an empty string for the root domain.
               * @example subdomain
               */
              name: string
              /**
               * @description Must be of type `CAA`.
               * @enum {string}
               */
              type: 'CAA'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              /**
               * @description A CAA record to specify which Certificate Authorities (CAs) are allowed to issue certificates for the domain.
               * @example 0 issue \"letsencrypt.org\"
               */
              value: string
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /**
               * @description A subdomain name or an empty string for the root domain.
               * @example subdomain
               */
              name: string
              /**
               * @description Must be of type `CNAME`.
               * @enum {string}
               */
              type: 'CNAME'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              /**
               * @description A CNAME record mapping to another domain name.
               * @example cname.vercel-dns.com
               */
              value?: string
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /**
               * @description A subdomain name or an empty string for the root domain.
               * @example subdomain
               */
              name: string
              /**
               * @description Must be of type `MX`.
               * @enum {string}
               */
              type: 'MX'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              /**
               * @description An MX record specifying the mail server responsible for accepting messages on behalf of the domain name.
               * @example 10 mail.example.com.
               */
              value: string
              /** @example 10 */
              mxPriority: number
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /** @description A subdomain name or an empty string for the root domain. */
              name: string
              /**
               * @description Must be of type `SRV`.
               * @enum {string}
               */
              type: 'SRV'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              srv: {
                priority: number | null
                weight: number | null
                port: number | null
                /** @example host.example.com */
                target: string
              }
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /** @description A subdomain name or an empty string for the root domain. */
              name: string
              /**
               * @description Must be of type `TXT`.
               * @enum {string}
               */
              type: 'TXT'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              /**
               * @description A TXT record containing arbitrary text.
               * @example hello
               */
              value: string
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /**
               * @description A subdomain name.
               * @example subdomain
               */
              name: string
              /**
               * @description Must be of type `NS`.
               * @enum {string}
               */
              type: 'NS'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              /**
               * @description An NS domain value.
               * @example ns1.example.com
               */
              value?: string
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
          | {
              /** @description A subdomain name or an empty string for the root domain. */
              name: string
              /**
               * @description Must be of type `HTTPS`.
               * @enum {string}
               */
              type: 'HTTPS'
              /**
               * @description The TTL value. Must be a number between 60 and 2147483647. Default value is 60.
               * @example 60
               */
              ttl?: number
              https: {
                priority: number | null
                /** @example host.example.com */
                target: string
                /** @example alpn=h2,h3 */
                params?: string
              }
              /**
               * @description A comment to add context on what this DNS record is for
               * @example used to verify ownership of domain
               */
              comment?: string
            }
        )
      }
    }
    responses: {
      /** @description Successful response showing the uid of the newly created DNS record. */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                uid: string
                updated: number
              },
              {
                /**
                 * @description The id of the newly created DNS record
                 * @example rec_V0fra8eEgQwEpFhYG2vTzC3K
                 */
                uid: string
              },
            ]
          >
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Update an existing DNS record
   * @description Updates an existing DNS record for a domain name.
   */
  updateRecord: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The id of the DNS record */
        recordId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          additionalProperties?: never
          /**
           * @description The name of the DNS record
           * @example example-1
           */
          name?: string | null
          /**
           * @description The value of the DNS record
           * @example google.com
           */
          value?: string | null
          /**
           * @description The type of the DNS record
           * @example A
           * @enum {string|null}
           */
          type?:
            | 'A'
            | 'AAAA'
            | 'ALIAS'
            | 'CAA'
            | 'CNAME'
            | 'HTTPS'
            | 'MX'
            | 'SRV'
            | 'TXT'
            | 'NS'
            | null
          /**
           * @description The Time to live (TTL) value of the DNS record
           * @example 60
           */
          ttl?: number | null
          /** @description The MX priority value of the DNS record */
          mxPriority?: number | null
          srv?: {
            /** @example example2.com. */
            target: string | null
            weight: number | null
            port: number | null
            priority: number | null
          } | null
          https?: {
            priority: number | null
            /** @example example2.com. */
            target: string | null
            params?: string | null
          } | null
          /**
           * @description A comment to add context on what this DNS record is for
           * @example used to verify ownership of domain
           */
          comment?: string
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            createdAt?: number | null
            creator: string
            domain: string
            id: string
            name: string
            /** @enum {string} */
            recordType:
              | 'A'
              | 'AAAA'
              | 'ALIAS'
              | 'CAA'
              | 'CNAME'
              | 'HTTPS'
              | 'MX'
              | 'SRV'
              | 'TXT'
              | 'NS'
            ttl?: number
            /** @enum {string} */
            type: 'record' | 'record-sys'
            value: string
            comment?: string
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Delete a DNS record
   * @description Removes an existing DNS record from a domain name.
   */
  removeRecord: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        domain: string
        recordId: string
      }
    }
    responses: {
      /** @description Successful response by removing the specified DNS record. */
      200: {
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Check a Domain Availability
   * @description Check if a domain name is available for purchase.
   */
  checkDomainStatus: {
    parameters: {
      query: {
        /** @description The name of the domain for which we would like to check the status. */
        name: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description Successful response checking if a Domain's name is available. */
      200: {
        content: {
          'application/json': {
            available: boolean
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Get domain transfer info.
   * @description Fetch domain transfer availability or transfer status if a transfer is in progress.
   */
  getDomainTransfer: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            /** @description Whether or not the domain is transferable */
            transferable: boolean
            /**
             * @description The domain's transfer policy (depends on TLD requirements). `charge-and-renew`: transfer will charge for renewal and will renew the existing domain's registration. `no-charge-no-change`: transfer will have no change to registration period and does not require charge. `no-change`: transfer charge is required, but no change in registration period. `new-term`: transfer charge is required and a new registry term is set based on the transfer date. `not-supported`: transfers are not supported for this domain or TLD. `null`: This TLD is not supported by Vercel's Registrar.
             * @enum {string|null}
             */
            transferPolicy:
              | 'charge-and-renew'
              | 'no-charge-no-change'
              | 'no-change'
              | 'new-term'
              | 'not-supported'
              | null
            /** @description Description associated with transferable state. */
            reason: string
            /**
             * @description The current state of an ongoing transfer. `pending_owner`: Awaiting approval by domain's admin contact (every transfer begins with this status). If approval is not given within five days, the transfer is cancelled. `pending_admin`: Waiting for approval by Vercel Registrar admin. `pending_registry`: Awaiting registry approval (the transfer completes after 7 days unless it is declined by the current registrar). `completed`: The transfer completed successfully. `cancelled`: The transfer was cancelled. `undef`: No transfer exists for this domain. `unknown`: This TLD is not supported by Vercel's Registrar.
             * @enum {string}
             */
            status:
              | 'pending_owner'
              | 'pending_admin'
              | 'pending_registry'
              | 'completed'
              | 'cancelled'
              | 'undef'
              | 'unknown'
          }
        }
      }
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Get a Domain's configuration
   * @description Get a Domain's configuration.
   */
  getDomainConfig: {
    parameters: {
      query?: {
        /** @description When true, the response will only include the nameservers assigned directly to the specified domain. When false and there are no nameservers assigned directly to the specified domain, the response will include the nameservers of the domain's parent zone. */
        strict?: 'true' | 'false'
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The name of the domain. */
        domain: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            /**
             * @description How we see the domain's configuration. - `CNAME`: Domain has a CNAME pointing to Vercel. - `A`: Domain's A record is resolving to Vercel. - `http`: Domain is resolving to Vercel but may be behind a Proxy. - `dns-01`: Domain is not resolving to Vercel but dns-01 challenge is enabled. - `null`: Domain is not resolving to Vercel.
             * @enum {string|null}
             */
            configuredBy?: 'CNAME' | 'A' | 'http' | 'dns-01' | null
            /** @description Which challenge types the domain can use for issuing certs. */
            acceptedChallenges?: ('dns-01' | 'http-01')[]
            /** @description Whether or not the domain is configured AND we can automatically generate a TLS certificate. */
            misconfigured: boolean
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Get Information for a Single Domain
   * @description Get information for a single domain in an account or team.
   */
  getDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The name of the domain. */
        domain: string
      }
    }
    responses: {
      /** @description Successful response retrieving an information for a specific domains. */
      200: {
        content: {
          'application/json': {
            domain: {
              suffix: boolean
              /**
               * @description If the domain has the ownership verified.
               * @example true
               */
              verified: boolean
              /**
               * @description A list of the current nameservers of the domain.
               * @example [
               *   "ns1.nameserver.net",
               *   "ns2.nameserver.net"
               * ]
               */
              nameservers: string[]
              /**
               * @description A list of the intended nameservers for the domain to point to Vercel DNS.
               * @example [
               *   "ns1.vercel-dns.com",
               *   "ns2.vercel-dns.com"
               * ]
               */
              intendedNameservers: string[]
              /**
               * @description A list of custom nameservers for the domain to point to. Only applies to domains purchased with Vercel.
               * @example [
               *   "ns1.nameserver.net",
               *   "ns2.nameserver.net"
               * ]
               */
              customNameservers?: string[]
              /**
               * @description An object containing information of the domain creator, including the user's id, username, and email.
               * @example {
               *   "id": "ZspSRT4ljIEEmMHgoDwKWDei",
               *   "username": "vercel_user",
               *   "email": "demo@example.com"
               * }
               */
              creator: {
                username: string
                email: string
                customerId?: string | null
                isDomainReseller?: boolean
                id: string
              }
              /**
               * @description If it was purchased through Vercel, the timestamp in milliseconds when it was purchased.
               * @example 1613602938882
               */
              boughtAt: number | null
              /**
               * @description Timestamp in milliseconds when the domain was created in the registry.
               * @example 1613602938882
               */
              createdAt: number
              /**
               * @description Timestamp in milliseconds at which the domain is set to expire. `null` if not bought with Vercel.
               * @example 1613602938882
               */
              expiresAt: number | null
              /**
               * @description The unique identifier of the domain.
               * @example EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1
               */
              id: string
              /**
               * @description The domain name.
               * @example example.com
               */
              name: string
              /**
               * @description Timestamp in milliseconds at which the domain was ordered.
               * @example 1613602938882
               */
              orderedAt?: number
              /**
               * @description Indicates whether the domain is set to automatically renew.
               * @example true
               */
              renew?: boolean
              /**
               * @description The type of service the domain is handled by. `external` if the DNS is externally handled, `zeit.world` if handled with Vercel, or `na` if the service is not available.
               * @example zeit.world
               * @enum {string}
               */
              serviceType: 'zeit.world' | 'external' | 'na'
              /**
               * @description Timestamp in milliseconds at which the domain was successfully transferred into Vercel. `null` if the transfer is still processing or was never transferred in.
               * @example 1613602938882
               */
              transferredAt?: number | null
              /**
               * @description If transferred into Vercel, timestamp in milliseconds when the domain transfer was initiated.
               * @example 1613602938882
               */
              transferStartedAt?: number
            }
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * List all the domains
   * @description Retrieves a list of domains registered for the authenticated user or team. By default it returns the last 20 domains if no limit is provided.
   */
  getDomains: {
    parameters: {
      query?: {
        /** @description Maximum number of domains to list from a request. */
        limit?: number
        /** @description Get domains created after this JavaScript timestamp. */
        since?: number
        /** @description Get domains created before this JavaScript timestamp. */
        until?: number
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description Successful response retrieving a list of domains. */
      200: {
        content: {
          'application/json': {
            domains: {
              /**
               * @description If the domain has the ownership verified.
               * @example true
               */
              verified: boolean
              /**
               * @description A list of the current nameservers of the domain.
               * @example [
               *   "ns1.nameserver.net",
               *   "ns2.nameserver.net"
               * ]
               */
              nameservers: string[]
              /**
               * @description A list of the intended nameservers for the domain to point to Vercel DNS.
               * @example [
               *   "ns1.vercel-dns.com",
               *   "ns2.vercel-dns.com"
               * ]
               */
              intendedNameservers: string[]
              /**
               * @description A list of custom nameservers for the domain to point to. Only applies to domains purchased with Vercel.
               * @example [
               *   "ns1.nameserver.net",
               *   "ns2.nameserver.net"
               * ]
               */
              customNameservers?: string[]
              /**
               * @description An object containing information of the domain creator, including the user's id, username, and email.
               * @example {
               *   "id": "ZspSRT4ljIEEmMHgoDwKWDei",
               *   "username": "vercel_user",
               *   "email": "demo@example.com"
               * }
               */
              creator: {
                username: string
                email: string
                customerId?: string | null
                isDomainReseller?: boolean
                id: string
              }
              /**
               * @description If it was purchased through Vercel, the timestamp in milliseconds when it was purchased.
               * @example 1613602938882
               */
              boughtAt: number | null
              /**
               * @description Timestamp in milliseconds when the domain was created in the registry.
               * @example 1613602938882
               */
              createdAt: number
              /**
               * @description Timestamp in milliseconds at which the domain is set to expire. `null` if not bought with Vercel.
               * @example 1613602938882
               */
              expiresAt: number | null
              /**
               * @description The unique identifier of the domain.
               * @example EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1
               */
              id: string
              /**
               * @description The domain name.
               * @example example.com
               */
              name: string
              /**
               * @description Timestamp in milliseconds at which the domain was ordered.
               * @example 1613602938882
               */
              orderedAt?: number
              /**
               * @description Indicates whether the domain is set to automatically renew.
               * @example true
               */
              renew?: boolean
              /**
               * @description The type of service the domain is handled by. `external` if the DNS is externally handled, `zeit.world` if handled with Vercel, or `na` if the service is not available.
               * @example zeit.world
               * @enum {string}
               */
              serviceType: 'zeit.world' | 'external' | 'na'
              /**
               * @description Timestamp in milliseconds at which the domain was successfully transferred into Vercel. `null` if the transfer is still processing or was never transferred in.
               * @example 1613602938882
               */
              transferredAt?: number | null
              /**
               * @description If transferred into Vercel, timestamp in milliseconds when the domain transfer was initiated.
               * @example 1613602938882
               */
              transferStartedAt?: number
            }[]
            pagination: components['schemas']['Pagination']
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Register or transfer-in a new Domain
   * @description This endpoint is used for adding a new apex domain name with Vercel for the authenticating user. Can also be used for initiating a domain transfer request from an external Registrar to Vercel.
   */
  createOrTransferDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': OneOf<
          [
            {
              /**
               * @description The domain name you want to add.
               * @example example.com
               */
              name: string
              /**
               * @description Whether the domain has the Vercel Edge Network enabled or not.
               * @example true
               */
              cdnEnabled?: boolean
              zone?: boolean
              /**
               * @description The domain operation to perform.
               * @example add
               */
              method?: string
            },
            {
              /**
               * @description The domain name you want to add.
               * @example example.com
               */
              name: string
              /**
               * @description The domain operation to perform.
               * @example move-in
               */
              method: string
              /**
               * @description The move-in token from Move Requested email.
               * @example fdhfr820ad#@FAdlj$$
               */
              token?: string
            },
            {
              /**
               * @description The domain name you want to add.
               * @example example.com
               */
              name: string
              /**
               * @description The domain operation to perform.
               * @example transfer-in
               */
              method: string
              /**
               * @description The authorization code assigned to the domain.
               * @example fdhfr820ad#@FAdlj$$
               */
              authCode?: string
              /**
               * @description The price you expect to be charged for the required 1 year renewal.
               * @example 8
               */
              expectedPrice?: number
            },
          ]
        >
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            domain: {
              /**
               * @description If the domain has the ownership verified.
               * @example true
               */
              verified: boolean
              /**
               * @description A list of the current nameservers of the domain.
               * @example [
               *   "ns1.nameserver.net",
               *   "ns2.nameserver.net"
               * ]
               */
              nameservers: string[]
              /**
               * @description A list of the intended nameservers for the domain to point to Vercel DNS.
               * @example [
               *   "ns1.vercel-dns.com",
               *   "ns2.vercel-dns.com"
               * ]
               */
              intendedNameservers: string[]
              /**
               * @description A list of custom nameservers for the domain to point to. Only applies to domains purchased with Vercel.
               * @example [
               *   "ns1.nameserver.net",
               *   "ns2.nameserver.net"
               * ]
               */
              customNameservers?: string[]
              /**
               * @description An object containing information of the domain creator, including the user's id, username, and email.
               * @example {
               *   "id": "ZspSRT4ljIEEmMHgoDwKWDei",
               *   "username": "vercel_user",
               *   "email": "demo@example.com"
               * }
               */
              creator: {
                username: string
                email: string
                customerId?: string | null
                isDomainReseller?: boolean
                id: string
              }
              /**
               * @description If it was purchased through Vercel, the timestamp in milliseconds when it was purchased.
               * @example 1613602938882
               */
              boughtAt: number | null
              /**
               * @description Timestamp in milliseconds when the domain was created in the registry.
               * @example 1613602938882
               */
              createdAt: number
              /**
               * @description Timestamp in milliseconds at which the domain is set to expire. `null` if not bought with Vercel.
               * @example 1613602938882
               */
              expiresAt: number | null
              /**
               * @description The unique identifier of the domain.
               * @example EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1
               */
              id: string
              /**
               * @description The domain name.
               * @example example.com
               */
              name: string
              /**
               * @description Timestamp in milliseconds at which the domain was ordered.
               * @example 1613602938882
               */
              orderedAt?: number
              /**
               * @description Indicates whether the domain is set to automatically renew.
               * @example true
               */
              renew?: boolean
              /**
               * @description The type of service the domain is handled by. `external` if the DNS is externally handled, `zeit.world` if handled with Vercel, or `na` if the service is not available.
               * @example zeit.world
               * @enum {string}
               */
              serviceType: 'zeit.world' | 'external' | 'na'
              /**
               * @description Timestamp in milliseconds at which the domain was successfully transferred into Vercel. `null` if the transfer is still processing or was never transferred in.
               * @example 1613602938882
               */
              transferredAt?: number | null
              /**
               * @description If transferred into Vercel, timestamp in milliseconds when the domain transfer was initiated.
               * @example 1613602938882
               */
              transferStartedAt?: number
            }
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Update or move apex domain
   * @description Update or move apex domain.
   */
  patchDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        domain: string
      }
    }
    requestBody?: {
      content: {
        'application/json': OneOf<
          [
            {
              /** @example update */
              op?: string
              /** @description Specifies whether domain should be renewed. */
              renew?: boolean
              /** @description The custom nameservers for this project. */
              customNameservers?: string[]
              /** @description Specifies whether this is a DNS zone that intends to use Vercel's nameservers. */
              zone?: boolean
            },
            {
              /** @example move-out */
              op?: string
              /** @description User or team to move domain to */
              destination?: string
            },
          ]
        >
      }
    }
    responses: {
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                moved: boolean
              },
              {
                moved: boolean
                token: string
              },
              {
                renew?: boolean
                customNameservers?: string[]
                zone?: boolean
              },
            ]
          >
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Remove a domain by name
   * @description Delete a previously registered domain name from Vercel. Deleting a domain will automatically remove any associated aliases.
   */
  deleteDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The name of the domain. */
        domain: string
      }
    }
    responses: {
      /** @description Successful response removing a domain. */
      200: {
        content: {
          'application/json': {
            uid: string
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Get Edge Configs
   * @description Returns all Edge Configs.
   */
  getEdgeConfigs: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description List of all edge configs. */
      200: {
        content: {
          'application/json': {
            id?: string
            createdAt?: number
            ownerId?: string
            /** @description Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores). */
            slug?: string
            updatedAt?: number
            digest?: string
            /** @description Keeps track of the current state of the Edge Config while it gets transferred. */
            transfer?: {
              fromAccountId: string
              startedAt: number
              doneAt: number | null
            }
            schema?: Record<string, never>
            sizeInBytes: number
            itemCount: number
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Create an Edge Config
   * @description Creates an Edge Config.
   */
  createEdgeConfig: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          slug: string
          items?: {
            [key: string]:
              | (string | number | boolean | null | Record<string, never>)
              | (string | number | boolean | null | Record<string, never>)[]
          }
        }
      }
    }
    responses: {
      201: {
        content: {
          'application/json': {
            createdAt?: number
            updatedAt?: number
            id?: string
            /** @description Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores). */
            slug?: string
            ownerId?: string
            digest?: string
            /** @description Keeps track of the current state of the Edge Config while it gets transferred. */
            transfer?: {
              fromAccountId: string
              startedAt: number
              doneAt: number | null
            }
            schema?: Record<string, never>
            sizeInBytes: number
            itemCount: number
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Get an Edge Config
   * @description Returns an Edge Config.
   */
  getEdgeConfig: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    responses: {
      /** @description The EdgeConfig. */
      200: {
        content: {
          'application/json': {
            createdAt?: number
            updatedAt?: number
            id?: string
            /** @description Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores). */
            slug?: string
            ownerId?: string
            digest?: string
            /** @description Keeps track of the current state of the Edge Config while it gets transferred. */
            transfer?: {
              fromAccountId: string
              startedAt: number
              doneAt: number | null
            }
            schema?: Record<string, never>
            sizeInBytes: number
            itemCount: number
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Update an Edge Config
   * @description Updates an Edge Config.
   */
  updateEdgeConfig: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          slug: string
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            createdAt?: number
            updatedAt?: number
            id?: string
            /** @description Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores). */
            slug?: string
            ownerId?: string
            digest?: string
            /** @description Keeps track of the current state of the Edge Config while it gets transferred. */
            transfer?: {
              fromAccountId: string
              startedAt: number
              doneAt: number | null
            }
            schema?: Record<string, never>
            sizeInBytes: number
            itemCount: number
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Delete an Edge Config
   * @description Delete an Edge Config by id.
   */
  deleteEdgeConfig: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    responses: {
      204: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Get Edge Config items
   * @description Returns all items of an Edge Config.
   */
  getEdgeConfigItems: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    responses: {
      /** @description The EdgeConfig. */
      200: {
        content: {
          'application/json': components['schemas']['EdgeConfigItem']
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Update Edge Config items in batch
   * @description Update multiple Edge Config Items in batch.
   */
  patchEdgeConfigItems: {
    parameters: {
      query: {
        edgeConfigId: string
        dryRun?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          items: ({
            /** @enum {unknown} */
            operation?: 'create' | 'update' | 'upsert' | 'delete'
            key?: string
            value?:
              | (string | number | boolean | null | Record<string, never>)
              | (string | number | boolean | null | Record<string, never>)[]
            description?: string | null
          } & (
            | {
                /** @constant */
                operation: 'create'
              }
            | {
                /** @enum {unknown} */
                operation: 'update' | 'upsert'
              }
            | {
                /** @constant */
                operation: 'delete'
              }
          ))[]
          definition: unknown
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            status: string
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Get Edge Config schema
   * @description Returns the schema of an Edge Config.
   */
  getEdgeConfigSchema: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    responses: {
      /** @description The EdgeConfig. */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Update Edge Config schema
   * @description Update an Edge Config's schema.
   */
  patchEdgeConfigSchema: {
    parameters: {
      query?: {
        dryRun?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          definition: unknown
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': unknown
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Delete an Edge Config's schema
   * @description Deletes the schema of existing Edge Config.
   */
  deleteEdgeConfigSchema: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    responses: {
      204: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Get an Edge Config item
   * @description Returns a specific Edge Config Item.
   */
  getEdgeConfigItem: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
        edgeConfigItemKey: string
      }
    }
    responses: {
      /** @description The EdgeConfig. */
      200: {
        content: {
          'application/json': components['schemas']['EdgeConfigItem']
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Get all tokens of an Edge Config
   * @description Returns all tokens of an Edge Config.
   */
  getEdgeConfigTokens: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    responses: {
      /** @description The EdgeConfig. */
      200: {
        content: {
          'application/json': components['schemas']['EdgeConfigToken']
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Delete one or more Edge Config tokens
   * @description Deletes one or more tokens of an existing Edge Config.
   */
  deleteEdgeConfigTokens: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          tokens: string[]
        }
      }
    }
    responses: {
      204: {
        content: never
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Get Edge Config token meta data
   * @description Return meta data about an Edge Config token.
   */
  getEdgeConfigToken: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
        token: string
      }
    }
    responses: {
      /** @description The EdgeConfig. */
      200: {
        content: {
          'application/json': components['schemas']['EdgeConfigToken']
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Create an Edge Config token
   * @description Adds a token to an existing Edge Config.
   */
  createEdgeConfigToken: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        edgeConfigId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          label: string
        }
      }
    }
    responses: {
      201: {
        content: {
          'application/json': {
            token: string
            id: string
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * List User Events
   * @description Retrieves a list of "events" generated by the User on Vercel. Events are generated when the User performs a particular action, such as logging in, creating a deployment, and joining a Team (just to name a few). When the `teamId` parameter is supplied, then the events that are returned will be in relation to the Team that was specified.
   */
  listUserEvents: {
    parameters: {
      query?: {
        /** @description Maximum number of items which may be returned. */
        limit?: number
        /** @description Timestamp to only include items created since then. */
        since?: string
        /** @description Timestamp to only include items created until then. */
        until?: string
        /** @description Comma-delimited list of event \"types\" to filter the results by. */
        types?: string
        /** @description When retrieving events for a Team, the `userId` parameter may be specified to filter events generated by a specific member of the Team. */
        userId?: string
        /** @description When set to `true`, the response will include the `payload` field for each event. */
        withPayload?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          'application/json': {
            /** @description Array of events generated by the User. */
            events: components['schemas']['UserEvent'][]
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Get configurations for the authenticated user or team
   * @description Allows to retrieve all configurations for an authenticated integration. When the `project` view is used, configurations generated for the authorization flow will be filtered out of the results.
   */
  getConfigurations: {
    parameters: {
      query: {
        view: 'account' | 'project'
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description The list of configurations for the authenticated user */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @description A timestamp that tells you when the configuration was installed successfully
                 * @example 1558531915505
                 */
                completedAt?: number
                /**
                 * @description A timestamp that tells you when the configuration was created
                 * @example 1558531915505
                 */
                createdAt: number
                /**
                 * @description The unique identifier of the configuration
                 * @example icfg_3bwCLgxL8qt5kjRLcv2Dit7F
                 */
                id: string
                /**
                 * @description The unique identifier of the app the configuration was created for
                 * @example oac_xzpVzcUOgcB1nrVlirtKhbWV
                 */
                integrationId: string
                /**
                 * @description The user or team ID that owns the configuration
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                ownerId: string
                /**
                 * @description When a configuration is limited to access certain projects, this will contain each of the project ID it is allowed to access. If it is not defined, the configuration has full access.
                 * @example [
                 *   "prj_xQxbutw1HpL6HLYPAzt5h75m8NjO"
                 * ]
                 */
                projects?: string[]
                /**
                 * @description Source defines where the configuration was installed from. It is used to analyze user engagement for integration installations in product metrics.
                 * @example marketplace
                 * @enum {string}
                 */
                source?: 'marketplace' | 'deploy-button' | 'external'
                removedLogDrainsAt?: number
                removedProjectEnvsAt?: number
                removedTokensAt?: number
                removedWebhooksAt?: number
                /**
                 * @description The slug of the integration the configuration is created for.
                 * @example slack
                 */
                slug: string
                /**
                 * @description When the configuration was created for a team, this will show the ID of the team.
                 * @example team_nLlpyC6RE1qxydlFKbrxDlud
                 */
                teamId?: string | null
                /** @enum {string} */
                type: 'integration-configuration'
                /**
                 * @description A timestamp that tells you when the configuration was updated.
                 * @example 1558531915505
                 */
                updatedAt: number
                /**
                 * @description The ID of the user that created the configuration.
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                userId: string
                /**
                 * @description The resources that are allowed to be accessed by the configuration.
                 * @example [
                 *   "read:project",
                 *   "read-write:log-drain"
                 * ]
                 */
                scopes: string[]
                scopesQueue?: {
                  scopes: {
                    added: (
                      | 'read:integration-configuration'
                      | 'read-write:integration-configuration'
                      | 'read:deployment'
                      | 'read-write:deployment'
                      | 'read-write:deployment-check'
                      | 'read:project'
                      | 'read-write:project'
                      | 'read-write:project-env-vars'
                      | 'read-write:global-project-env-vars'
                      | 'read:team'
                      | 'read:user'
                      | 'read-write:log-drain'
                      | 'read:domain'
                      | 'read-write:domain'
                      | 'read-write:edge-config'
                      | 'read-write:otel-endpoint'
                      | 'read:monitoring'
                      | 'read-write:integration-resource'
                    )[]
                    upgraded: (
                      | 'read:integration-configuration'
                      | 'read-write:integration-configuration'
                      | 'read:deployment'
                      | 'read-write:deployment'
                      | 'read-write:deployment-check'
                      | 'read:project'
                      | 'read-write:project'
                      | 'read-write:project-env-vars'
                      | 'read-write:global-project-env-vars'
                      | 'read:team'
                      | 'read:user'
                      | 'read-write:log-drain'
                      | 'read:domain'
                      | 'read-write:domain'
                      | 'read-write:edge-config'
                      | 'read-write:otel-endpoint'
                      | 'read:monitoring'
                      | 'read-write:integration-resource'
                    )[]
                  }
                  note: string
                  requestedAt: number
                  confirmedAt?: number
                }[]
                /**
                 * @description A timestamp that tells you when the configuration was disabled. Note: Configurations can be disabled when the associated user loses access to a team. They do not function during this time until the configuration is 'transferred', meaning the associated user is changed to one with access to the team.
                 * @example 1558531915505
                 */
                disabledAt?: number
                /**
                 * @description A timestamp that tells you when the configuration was updated.
                 * @example 1558531915505
                 */
                deletedAt?: number | null
                /** @enum {string} */
                disabledReason?:
                  | 'disabled-by-owner'
                  | 'feature-not-available'
                  | 'disabled-by-admin'
                  | 'original-owner-left-the-team'
                  | 'account-plan-downgrade'
                /** @description A timestamp that tells you when the configuration was migrated as part of the Northstar migration. In the future, if we allow integration configurations to be transferred between teams, this field should be cleared upon transfer. */
                northstarMigratedAt?: number
                /**
                 * @description Defines the installation type. - 'external' integrations are installed via the existing integrations flow - 'marketplace' integrations are natively installed: - when accepting the TOS of a partner during the store creation process - if undefined, assume 'external'
                 * @enum {string}
                 */
                installationType?: 'marketplace' | 'external'
              },
              {
                integration: {
                  name: string
                  icon: string
                  category: string
                  isLegacy: boolean
                  flags?: string[]
                  assignedBetaLabelAt?: number
                }
                /**
                 * @description A timestamp that tells you when the configuration was installed successfully
                 * @example 1558531915505
                 */
                completedAt?: number
                /**
                 * @description A timestamp that tells you when the configuration was created
                 * @example 1558531915505
                 */
                createdAt: number
                /**
                 * @description The unique identifier of the configuration
                 * @example icfg_3bwCLgxL8qt5kjRLcv2Dit7F
                 */
                id: string
                /**
                 * @description The unique identifier of the app the configuration was created for
                 * @example oac_xzpVzcUOgcB1nrVlirtKhbWV
                 */
                integrationId: string
                /**
                 * @description The user or team ID that owns the configuration
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                ownerId: string
                /**
                 * @description When a configuration is limited to access certain projects, this will contain each of the project ID it is allowed to access. If it is not defined, the configuration has full access.
                 * @example [
                 *   "prj_xQxbutw1HpL6HLYPAzt5h75m8NjO"
                 * ]
                 */
                projects?: string[]
                /**
                 * @description Source defines where the configuration was installed from. It is used to analyze user engagement for integration installations in product metrics.
                 * @example marketplace
                 * @enum {string}
                 */
                source?: 'marketplace' | 'deploy-button' | 'external'
                removedLogDrainsAt?: number
                removedProjectEnvsAt?: number
                removedTokensAt?: number
                removedWebhooksAt?: number
                /**
                 * @description The slug of the integration the configuration is created for.
                 * @example slack
                 */
                slug: string
                /**
                 * @description When the configuration was created for a team, this will show the ID of the team.
                 * @example team_nLlpyC6RE1qxydlFKbrxDlud
                 */
                teamId?: string | null
                /** @enum {string} */
                type: 'integration-configuration'
                /**
                 * @description A timestamp that tells you when the configuration was updated.
                 * @example 1558531915505
                 */
                updatedAt: number
                /**
                 * @description The ID of the user that created the configuration.
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                userId: string
                /**
                 * @description The resources that are allowed to be accessed by the configuration.
                 * @example [
                 *   "read:project",
                 *   "read-write:log-drain"
                 * ]
                 */
                scopes: string[]
                scopesQueue?: {
                  scopes: {
                    added: (
                      | 'read:integration-configuration'
                      | 'read-write:integration-configuration'
                      | 'read:deployment'
                      | 'read-write:deployment'
                      | 'read-write:deployment-check'
                      | 'read:project'
                      | 'read-write:project'
                      | 'read-write:project-env-vars'
                      | 'read-write:global-project-env-vars'
                      | 'read:team'
                      | 'read:user'
                      | 'read-write:log-drain'
                      | 'read:domain'
                      | 'read-write:domain'
                      | 'read-write:edge-config'
                      | 'read-write:otel-endpoint'
                      | 'read:monitoring'
                      | 'read-write:integration-resource'
                    )[]
                    upgraded: (
                      | 'read:integration-configuration'
                      | 'read-write:integration-configuration'
                      | 'read:deployment'
                      | 'read-write:deployment'
                      | 'read-write:deployment-check'
                      | 'read:project'
                      | 'read-write:project'
                      | 'read-write:project-env-vars'
                      | 'read-write:global-project-env-vars'
                      | 'read:team'
                      | 'read:user'
                      | 'read-write:log-drain'
                      | 'read:domain'
                      | 'read-write:domain'
                      | 'read-write:edge-config'
                      | 'read-write:otel-endpoint'
                      | 'read:monitoring'
                      | 'read-write:integration-resource'
                    )[]
                  }
                  note: string
                  requestedAt: number
                  confirmedAt?: number
                }[]
                /**
                 * @description A timestamp that tells you when the configuration was disabled. Note: Configurations can be disabled when the associated user loses access to a team. They do not function during this time until the configuration is 'transferred', meaning the associated user is changed to one with access to the team.
                 * @example 1558531915505
                 */
                disabledAt?: number
                /**
                 * @description A timestamp that tells you when the configuration was updated.
                 * @example 1558531915505
                 */
                deletedAt?: number | null
                /** @enum {string} */
                disabledReason?:
                  | 'disabled-by-owner'
                  | 'feature-not-available'
                  | 'disabled-by-admin'
                  | 'original-owner-left-the-team'
                  | 'account-plan-downgrade'
                /** @description A timestamp that tells you when the configuration was migrated as part of the Northstar migration. In the future, if we allow integration configurations to be transferred between teams, this field should be cleared upon transfer. */
                northstarMigratedAt?: number
                /**
                 * @description Defines the installation type. - 'external' integrations are installed via the existing integrations flow - 'marketplace' integrations are natively installed: - when accepting the TOS of a partner during the store creation process - if undefined, assume 'external'
                 * @enum {string}
                 */
                installationType?: 'marketplace' | 'external'
              }[],
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Retrieve an integration configuration
   * @description Allows to retrieve a the configuration with the provided id in case it exists. The authenticated user or team must be the owner of the config in order to access it.
   */
  getConfiguration: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description ID of the configuration to check */
        id: string
      }
    }
    responses: {
      /** @description The configuration with the provided id */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @description A timestamp that tells you when the configuration was installed successfully
                 * @example 1558531915505
                 */
                completedAt?: number
                /**
                 * @description A timestamp that tells you when the configuration was created
                 * @example 1558531915505
                 */
                createdAt: number
                /**
                 * @description The unique identifier of the configuration
                 * @example icfg_3bwCLgxL8qt5kjRLcv2Dit7F
                 */
                id: string
                /**
                 * @description The unique identifier of the app the configuration was created for
                 * @example oac_xzpVzcUOgcB1nrVlirtKhbWV
                 */
                integrationId: string
                /**
                 * @description The user or team ID that owns the configuration
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                ownerId: string
                /**
                 * @description When a configuration is limited to access certain projects, this will contain each of the project ID it is allowed to access. If it is not defined, the configuration has full access.
                 * @example [
                 *   "prj_xQxbutw1HpL6HLYPAzt5h75m8NjO"
                 * ]
                 */
                projects?: string[]
                /**
                 * @description Source defines where the configuration was installed from. It is used to analyze user engagement for integration installations in product metrics.
                 * @example marketplace
                 * @enum {string}
                 */
                source?: 'marketplace' | 'deploy-button' | 'external'
                removedLogDrainsAt?: number
                removedProjectEnvsAt?: number
                removedTokensAt?: number
                removedWebhooksAt?: number
                /**
                 * @description The slug of the integration the configuration is created for.
                 * @example slack
                 */
                slug: string
                /**
                 * @description When the configuration was created for a team, this will show the ID of the team.
                 * @example team_nLlpyC6RE1qxydlFKbrxDlud
                 */
                teamId?: string | null
                /** @enum {string} */
                type: 'integration-configuration'
                /**
                 * @description A timestamp that tells you when the configuration was updated.
                 * @example 1558531915505
                 */
                updatedAt: number
                /**
                 * @description The ID of the user that created the configuration.
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                userId: string
                /**
                 * @description The resources that are allowed to be accessed by the configuration.
                 * @example [
                 *   "read:project",
                 *   "read-write:log-drain"
                 * ]
                 */
                scopes: string[]
                scopesQueue?: {
                  scopes: {
                    added: (
                      | 'read:integration-configuration'
                      | 'read-write:integration-configuration'
                      | 'read:deployment'
                      | 'read-write:deployment'
                      | 'read-write:deployment-check'
                      | 'read:project'
                      | 'read-write:project'
                      | 'read-write:project-env-vars'
                      | 'read-write:global-project-env-vars'
                      | 'read:team'
                      | 'read:user'
                      | 'read-write:log-drain'
                      | 'read:domain'
                      | 'read-write:domain'
                      | 'read-write:edge-config'
                      | 'read-write:otel-endpoint'
                      | 'read:monitoring'
                      | 'read-write:integration-resource'
                    )[]
                    upgraded: (
                      | 'read:integration-configuration'
                      | 'read-write:integration-configuration'
                      | 'read:deployment'
                      | 'read-write:deployment'
                      | 'read-write:deployment-check'
                      | 'read:project'
                      | 'read-write:project'
                      | 'read-write:project-env-vars'
                      | 'read-write:global-project-env-vars'
                      | 'read:team'
                      | 'read:user'
                      | 'read-write:log-drain'
                      | 'read:domain'
                      | 'read-write:domain'
                      | 'read-write:edge-config'
                      | 'read-write:otel-endpoint'
                      | 'read:monitoring'
                      | 'read-write:integration-resource'
                    )[]
                  }
                  note: string
                  requestedAt: number
                  confirmedAt?: number
                }[]
                /**
                 * @description A timestamp that tells you when the configuration was disabled. Note: Configurations can be disabled when the associated user loses access to a team. They do not function during this time until the configuration is 'transferred', meaning the associated user is changed to one with access to the team.
                 * @example 1558531915505
                 */
                disabledAt?: number
                /**
                 * @description A timestamp that tells you when the configuration was updated.
                 * @example 1558531915505
                 */
                deletedAt?: number | null
                /** @enum {string} */
                disabledReason?:
                  | 'disabled-by-owner'
                  | 'feature-not-available'
                  | 'disabled-by-admin'
                  | 'original-owner-left-the-team'
                  | 'account-plan-downgrade'
                /** @description A timestamp that tells you when the configuration was migrated as part of the Northstar migration. In the future, if we allow integration configurations to be transferred between teams, this field should be cleared upon transfer. */
                northstarMigratedAt?: number
                /**
                 * @description Defines the installation type. - 'external' integrations are installed via the existing integrations flow - 'marketplace' integrations are natively installed: - when accepting the TOS of a partner during the store creation process - if undefined, assume 'external'
                 * @enum {string}
                 */
                installationType?: 'marketplace' | 'external'
              },
              {
                /**
                 * @description A string representing the permission for projects. Possible values are `all` or `selected`.
                 * @example all
                 * @enum {string}
                 */
                projectSelection: 'selected' | 'all'
                /**
                 * @description When a configuration is limited to access certain projects, this will contain each of the project ID it is allowed to access. If it is not defined, the configuration has full access.
                 * @example [
                 *   "prj_xQxbutw1HpL6HLYPAzt5h75m8NjO"
                 * ]
                 */
                projects?: string[]
                /**
                 * @description A timestamp that tells you when the configuration was installed successfully
                 * @example 1558531915505
                 */
                completedAt?: number
                /**
                 * @description A timestamp that tells you when the configuration was created
                 * @example 1558531915505
                 */
                createdAt: number
                /**
                 * @description The unique identifier of the configuration
                 * @example icfg_3bwCLgxL8qt5kjRLcv2Dit7F
                 */
                id: string
                /**
                 * @description The unique identifier of the app the configuration was created for
                 * @example oac_xzpVzcUOgcB1nrVlirtKhbWV
                 */
                integrationId: string
                /**
                 * @description The user or team ID that owns the configuration
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                ownerId: string
                /**
                 * @description Source defines where the configuration was installed from. It is used to analyze user engagement for integration installations in product metrics.
                 * @example marketplace
                 * @enum {string}
                 */
                source?: 'marketplace' | 'deploy-button' | 'external'
                removedLogDrainsAt?: number
                removedProjectEnvsAt?: number
                removedTokensAt?: number
                removedWebhooksAt?: number
                /**
                 * @description The slug of the integration the configuration is created for.
                 * @example slack
                 */
                slug: string
                /**
                 * @description When the configuration was created for a team, this will show the ID of the team.
                 * @example team_nLlpyC6RE1qxydlFKbrxDlud
                 */
                teamId?: string | null
                /** @enum {string} */
                type: 'integration-configuration'
                /**
                 * @description A timestamp that tells you when the configuration was updated.
                 * @example 1558531915505
                 */
                updatedAt: number
                /**
                 * @description The ID of the user that created the configuration.
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                userId: string
                /**
                 * @description The resources that are allowed to be accessed by the configuration.
                 * @example [
                 *   "read:project",
                 *   "read-write:log-drain"
                 * ]
                 */
                scopes: string[]
                scopesQueue?: {
                  scopes: {
                    added: (
                      | 'read:integration-configuration'
                      | 'read-write:integration-configuration'
                      | 'read:deployment'
                      | 'read-write:deployment'
                      | 'read-write:deployment-check'
                      | 'read:project'
                      | 'read-write:project'
                      | 'read-write:project-env-vars'
                      | 'read-write:global-project-env-vars'
                      | 'read:team'
                      | 'read:user'
                      | 'read-write:log-drain'
                      | 'read:domain'
                      | 'read-write:domain'
                      | 'read-write:edge-config'
                      | 'read-write:otel-endpoint'
                      | 'read:monitoring'
                      | 'read-write:integration-resource'
                    )[]
                    upgraded: (
                      | 'read:integration-configuration'
                      | 'read-write:integration-configuration'
                      | 'read:deployment'
                      | 'read-write:deployment'
                      | 'read-write:deployment-check'
                      | 'read:project'
                      | 'read-write:project'
                      | 'read-write:project-env-vars'
                      | 'read-write:global-project-env-vars'
                      | 'read:team'
                      | 'read:user'
                      | 'read-write:log-drain'
                      | 'read:domain'
                      | 'read-write:domain'
                      | 'read-write:edge-config'
                      | 'read-write:otel-endpoint'
                      | 'read:monitoring'
                      | 'read-write:integration-resource'
                    )[]
                  }
                  note: string
                  requestedAt: number
                  confirmedAt?: number
                }[]
                /**
                 * @description A timestamp that tells you when the configuration was disabled. Note: Configurations can be disabled when the associated user loses access to a team. They do not function during this time until the configuration is 'transferred', meaning the associated user is changed to one with access to the team.
                 * @example 1558531915505
                 */
                disabledAt?: number
                /**
                 * @description A timestamp that tells you when the configuration was updated.
                 * @example 1558531915505
                 */
                deletedAt?: number | null
                /** @enum {string} */
                disabledReason?:
                  | 'disabled-by-owner'
                  | 'feature-not-available'
                  | 'disabled-by-admin'
                  | 'original-owner-left-the-team'
                  | 'account-plan-downgrade'
                /** @description A timestamp that tells you when the configuration was migrated as part of the Northstar migration. In the future, if we allow integration configurations to be transferred between teams, this field should be cleared upon transfer. */
                northstarMigratedAt?: number
                /**
                 * @description Defines the installation type. - 'external' integrations are installed via the existing integrations flow - 'marketplace' integrations are natively installed: - when accepting the TOS of a partner during the store creation process - if undefined, assume 'external'
                 * @enum {string}
                 */
                installationType?: 'marketplace' | 'external'
                canConfigureOpenTelemetry?: boolean
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The configuration was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Delete an integration configuration
   * @description Allows to remove the configuration with the `id` provided in the parameters. The configuration and all of its resources will be removed. This includes Webhooks, LogDrains and Project Env variables.
   */
  deleteConfiguration: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        id: string
      }
    }
    responses: {
      /** @description The configuration was successfully removed */
      204: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The configuration was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Retrieves a list of Integration log drains
   * @description Retrieves a list of all Integration log drains that are defined for the authenticated user or team. When using an OAuth2 token, the list is limited to log drains created by the authenticated integration.
   */
  getIntegrationLogDrains: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description A list of log drains */
      200: {
        content: {
          'application/json': {
            /**
             * @description The oauth2 client application id that created this log drain
             * @example oac_xRhY4LAB7yLhUADD69EvV7ct
             */
            clientId?: string
            /**
             * @description The client configuration this log drain was created with
             * @example icfg_cuwj0AdCdH3BwWT4LPijCC7t
             */
            configurationId?: string
            /**
             * @description A timestamp that tells you when the log drain was created
             * @example 1558531915505
             */
            createdAt: number
            /**
             * @description The unique identifier of the log drain. Always prefixed with `ld_`
             * @example ld_nBuA7zCID8g4QZ8g
             */
            id: string
            /**
             * @description The delivery log format
             * @example json
             * @enum {string}
             */
            deliveryFormat?: 'json' | 'ndjson' | 'syslog'
            /**
             * @description The name of the log drain
             * @example My first log drain
             */
            name: string
            /**
             * @description The identifier of the team or user whose events will trigger the log drain
             * @example kr1PsOIzqEL5Xg6M4VZcZosf
             */
            ownerId: string
            /** @example AbCgVkqoxXeXCDWehVir51LHGrrcWL4mkYm14W6UBPWQeb */
            projectId?: string | null
            /**
             * @description The identifier of the projects this log drain is associated with
             * @example AbCgVkqoxXeXCDWehVir51LHGrrcWL4mkYm14W6UBPWQeb
             */
            projectIds?: string[]
            /**
             * @description The URL to call when logs are generated
             * @example https://example.com/log-drain
             */
            url: string
            /**
             * @description The sources from which logs are currently being delivered to this log drain.
             * @example [
             *   "build",
             *   "edge"
             * ]
             */
            sources?: ('build' | 'edge' | 'lambda' | 'static' | 'external')[]
            /**
             * @description Whether the log drain was created by an integration or by a user
             * @example integration
             * @enum {string}
             */
            createdFrom?: 'self-served' | 'integration'
            /**
             * @description The headers to send with the request
             * @example {"Authorization": "Bearer 123"}
             */
            headers?: {
              [key: string]: string
            }
            /**
             * @description The environment of log drain
             * @example [
             *   "production"
             * ]
             */
            environments: ('production' | 'preview')[]
            /**
             * @description The branch regexp of log drain
             * @example feature/*
             */
            branch?: string
            /**
             * @description The sampling rate of log drain
             * @example 0.5
             */
            samplingRate?: number
          }[]
        }
      }
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Creates a new Integration Log Drain
   * @description Creates an Integration log drain. This endpoint must be called with an OAuth2 client (integration), since log drains are tied to integrations. If it is called with a different token type it will produce a 400 error.
   */
  createLogDrain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the log drain
           * @example My first log drain
           */
          name: string
          projectIds?: string[]
          /**
           * @description A secret to sign log drain notification headers so a consumer can verify their authenticity
           * @example a1Xsfd325fXcs
           */
          secret?: string
          /**
           * @description The delivery log format
           * @example json
           * @enum {unknown}
           */
          deliveryFormat?: 'json' | 'ndjson' | 'syslog'
          /**
           * Format: uri
           * @description The url where you will receive logs. The protocol must be `https://` or `http://` when type is `json` and `ndjson`, and `syslog+tls:` or `syslog:` when the type is `syslog`.
           * @example https://example.com/log-drain
           */
          url: string
          sources?: ('static' | 'lambda' | 'build' | 'edge' | 'external')[]
          /** @description Headers to be sent together with the request */
          headers?: {
            [key: string]: string
          }
          environments?: ('preview' | 'production')[]
        }
      }
    }
    responses: {
      /** @description The log drain was successfully created */
      200: {
        content: {
          'application/json': {
            /**
             * @description The oauth2 client application id that created this log drain
             * @example oac_xRhY4LAB7yLhUADD69EvV7ct
             */
            clientId?: string
            /**
             * @description The client configuration this log drain was created with
             * @example icfg_cuwj0AdCdH3BwWT4LPijCC7t
             */
            configurationId?: string
            /**
             * @description A timestamp that tells you when the log drain was created
             * @example 1558531915505
             */
            createdAt: number
            /**
             * @description The unique identifier of the log drain. Always prefixed with `ld_`
             * @example ld_nBuA7zCID8g4QZ8g
             */
            id: string
            /**
             * @description The delivery log format
             * @example json
             * @enum {string}
             */
            deliveryFormat?: 'json' | 'ndjson' | 'syslog'
            /**
             * @description The name of the log drain
             * @example My first log drain
             */
            name: string
            /**
             * @description The identifier of the team or user whose events will trigger the log drain
             * @example kr1PsOIzqEL5Xg6M4VZcZosf
             */
            ownerId: string
            /** @example AbCgVkqoxXeXCDWehVir51LHGrrcWL4mkYm14W6UBPWQeb */
            projectId?: string | null
            /**
             * @description The identifier of the projects this log drain is associated with
             * @example AbCgVkqoxXeXCDWehVir51LHGrrcWL4mkYm14W6UBPWQeb
             */
            projectIds?: string[]
            /**
             * @description The URL to call when logs are generated
             * @example https://example.com/log-drain
             */
            url: string
            /**
             * @description The sources from which logs are currently being delivered to this log drain.
             * @example [
             *   "build",
             *   "edge"
             * ]
             */
            sources?: ('build' | 'edge' | 'lambda' | 'static' | 'external')[]
            /**
             * @description Whether the log drain was created by an integration or by a user
             * @example integration
             * @enum {string}
             */
            createdFrom?: 'self-served' | 'integration'
            /**
             * @description The headers to send with the request
             * @example {"Authorization": "Bearer 123"}
             */
            headers?: {
              [key: string]: string
            }
            /**
             * @description The environment of log drain
             * @example [
             *   "production"
             * ]
             */
            environments: ('production' | 'preview')[]
            /**
             * @description The branch regexp of log drain
             * @example feature/*
             */
            branch?: string
            /**
             * @description The sampling rate of log drain
             * @example 0.5
             */
            samplingRate?: number
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * The provided token is not from an OAuth2 Client
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Deletes the Integration log drain with the provided `id`
   * @description Deletes the Integration log drain with the provided `id`. When using an OAuth2 Token, the log drain can be deleted only if the integration owns it.
   */
  deleteIntegrationLogDrain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description ID of the log drain to be deleted */
        id: string
      }
    }
    responses: {
      /** @description The log drain was successfully deleted */
      204: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The log drain was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * List git repositories linked to namespace by provider
   * @description Lists git repositories linked to a namespace `id` for a supported provider. A specific namespace `id` can be obtained via the `git-namespaces`  endpoint. Supported providers are `github`, `gitlab` and `bitbucket`. If the provider or namespace is not provided, it will try to obtain it from the user that authenticated the request.
   */
  gitNamespaces: {
    parameters: {
      query?: {
        query?: string
        namespaceId?: (string | null) | (number | null)
        provider?: 'github' | 'github-custom-host' | 'gitlab' | 'bitbucket'
        installationId?: string
        /** @description The custom Git host if using a custom Git provider, like GitHub Enterprise Server */
        host?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            gitAccount: {
              /** @enum {string} */
              provider: 'github' | 'github-custom-host' | 'gitlab' | 'bitbucket'
              namespaceId: string | number | null
            }
            repos: {
              id: string | number
              /** @enum {string} */
              provider: 'github' | 'github-custom-host' | 'gitlab' | 'bitbucket'
              url: string
              name: string
              slug: string
              namespace: string
              owner: {
                id: string | number
                name: string
              }
              /** @enum {string} */
              ownerType: 'user' | 'team'
              private: boolean
              defaultBranch: string
              updatedAt: number
            }[]
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Retrieves a Configurable Log Drain
   * @description Retrieves a Configurable Log Drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated team can be accessed.
   */
  getConfigurableLogDrain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        id: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
            /** @enum {string} */
            deliveryFormat: 'json' | 'ndjson' | 'syslog'
            url: string
            name: string
            clientId?: string
            configurationId?: string
            teamId?: string | null
            ownerId: string
            projectIds?: string[]
            createdAt: number
            deletedAt: number | null
            updatedAt: number
            sources?: ('build' | 'edge' | 'lambda' | 'static' | 'external')[]
            headers?: {
              [key: string]: string
            }
            environments: ('production' | 'preview')[]
            /** @enum {string} */
            status?: 'enabled' | 'disabled' | 'errored'
            disabledAt?: number
            /** @enum {string} */
            disabledReason?:
              | 'disabled-by-owner'
              | 'feature-not-available'
              | 'account-plan-downgrade'
              | 'disabled-by-admin'
            disabledBy?: string
            firstErrorTimestamp?: number
            samplingRate?: number
            /** @enum {string} */
            compression?: 'gzip' | 'zstd' | 'none'
            secret: string
            /** @enum {string} */
            createdFrom?: 'self-served'
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Deletes a Configurable Log Drain
   * @description Deletes a Configurable Log Drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated team can be deleted.
   */
  deleteConfigurableLogDrain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        id: string
      }
    }
    responses: {
      204: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Retrieves a list of all the Log Drains
   * @description Retrieves a list of all the Log Drains owned by the account. This endpoint must be called with an account AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated account can be accessed.
   */
  getAllLogDrains: {
    parameters: {
      query?: {
        projectId?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
            /** @enum {string} */
            deliveryFormat: 'json' | 'ndjson' | 'syslog'
            url: string
            name: string
            clientId?: string
            configurationId?: string
            teamId?: string | null
            ownerId: string
            projectIds?: string[]
            createdAt: number
            deletedAt: number | null
            updatedAt: number
            sources?: ('build' | 'edge' | 'lambda' | 'static' | 'external')[]
            headers?: {
              [key: string]: string
            }
            environments: ('production' | 'preview')[]
            /** @enum {string} */
            status?: 'enabled' | 'disabled' | 'errored'
            disabledAt?: number
            /** @enum {string} */
            disabledReason?:
              | 'disabled-by-owner'
              | 'feature-not-available'
              | 'account-plan-downgrade'
              | 'disabled-by-admin'
            disabledBy?: string
            firstErrorTimestamp?: number
            samplingRate?: number
            /** @enum {string} */
            compression?: 'gzip' | 'zstd' | 'none'
            secret: string
            /** @enum {string} */
            createdFrom?: 'self-served'
          }[]
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Creates a Configurable Log Drain
   * @description Creates a configurable log drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed)
   */
  createConfigurableLogDrain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The delivery log format
           * @example json
           * @enum {unknown}
           */
          deliveryFormat: 'json' | 'ndjson'
          /**
           * Format: uri
           * @description The log drain url
           */
          url: string
          /** @description Headers to be sent together with the request */
          headers?: {
            [key: string]: string
          }
          projectIds?: string[]
          sources: ('static' | 'lambda' | 'build' | 'edge' | 'external')[]
          environments?: ('preview' | 'production')[]
          /** @description Custom secret of log drain */
          secret?: string
          /** @description The sampling rate for this log drain. It should be a percentage rate between 0 and 100. With max 2 decimal points */
          samplingRate?: number
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            /** @description The secret to validate the log-drain payload */
            secret?: string
            id: string
            /** @enum {string} */
            deliveryFormat: 'json' | 'ndjson' | 'syslog'
            url: string
            name: string
            clientId?: string
            configurationId?: string
            teamId?: string | null
            ownerId: string
            projectIds?: string[]
            createdAt: number
            deletedAt: number | null
            updatedAt: number
            sources?: ('build' | 'edge' | 'lambda' | 'static' | 'external')[]
            headers?: {
              [key: string]: string
            }
            environments: ('production' | 'preview')[]
            /** @enum {string} */
            status?: 'enabled' | 'disabled' | 'errored'
            disabledAt?: number
            /** @enum {string} */
            disabledReason?:
              | 'disabled-by-owner'
              | 'feature-not-available'
              | 'account-plan-downgrade'
              | 'disabled-by-admin'
            disabledBy?: string
            firstErrorTimestamp?: number
            samplingRate?: number
            /** @enum {string} */
            compression?: 'gzip' | 'zstd' | 'none'
            /** @enum {string} */
            createdFrom?: 'self-served'
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * List project members
   * @description Lists all members of a project.
   */
  getProjectMembers: {
    parameters: {
      query?: {
        /** @description Limit how many project members should be returned */
        limit?: number
        /** @description Timestamp in milliseconds to only include members added since then. */
        since?: number
        /** @description Timestamp in milliseconds to only include members added until then. */
        until?: number
        /** @description Search project members by their name, username, and email. */
        search?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID or name of the Project. */
        idOrName: string
      }
    }
    responses: {
      /** @description Paginated list of members for the project. */
      200: {
        content: {
          'application/json': OneOf<
            [
              Record<string, never>,
              {
                members: {
                  /**
                   * @description ID of the file for the Avatar of this member.
                   * @example 123a6c5209bc3778245d011443644c8d27dc2c50
                   */
                  avatar?: string
                  /**
                   * @description The email of this member.
                   * @example jane.doe@example.com
                   */
                  email: string
                  /**
                   * @description Role of this user in the project.
                   * @example ADMIN
                   * @enum {string}
                   */
                  role: 'ADMIN' | 'PROJECT_DEVELOPER' | 'PROJECT_VIEWER'
                  /**
                   * @description Role of this user in the project.
                   * @example ADMIN
                   * @enum {string}
                   */
                  computedProjectRole:
                    | 'ADMIN'
                    | 'PROJECT_DEVELOPER'
                    | 'PROJECT_VIEWER'
                  /**
                   * @description The ID of this user.
                   * @example zTuNVUXEAvvnNN3IaqinkyMw
                   */
                  uid: string
                  /**
                   * @description The unique username of this user.
                   * @example jane-doe
                   */
                  username: string
                  /**
                   * @description The name of this user.
                   * @example Jane Doe
                   */
                  name?: string
                  /**
                   * @description Timestamp in milliseconds when this member was added.
                   * @example 1588720733602
                   */
                  createdAt: number
                  /**
                   * @description The role of this user in the team.
                   * @example CONTRIBUTOR
                   * @enum {string}
                   */
                  teamRole:
                    | 'OWNER'
                    | 'MEMBER'
                    | 'DEVELOPER'
                    | 'BILLING'
                    | 'VIEWER'
                    | 'CONTRIBUTOR'
                }[]
                pagination: {
                  hasNext: boolean
                  /**
                   * @description Amount of items in the current page.
                   * @example 20
                   */
                  count: number
                  /**
                   * @description Timestamp that must be used to request the next page.
                   * @example 1540095775951
                   */
                  next: number | null
                  /**
                   * @description Timestamp that must be used to request the previous page.
                   * @example 1540095775951
                   */
                  prev: number | null
                }
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Adds a new member to a project.
   * @description Adds a new member to the project.
   */
  addProjectMember: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID or name of the Project. */
        idOrName: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The ID of the team member that should be added to this project.
           * @example ndlgr43fadlPyCtREAqxxdyFK
           */
          uid?: string
          /**
           * @description The username of the team member that should be added to this project.
           * @example example
           */
          username?: string
          /**
           * Format: email
           * @description The email of the team member that should be added to this project.
           * @example entity@example.com
           */
          email?: string
          /**
           * @description The project role of the member that will be added.
           * @example ADMIN
           * @enum {string}
           */
          role: 'ADMIN' | 'PROJECT_DEVELOPER' | 'PROJECT_VIEWER'
        }
      }
    }
    responses: {
      /** @description Responds with the project ID on success. */
      200: {
        content: {
          'application/json': {
            id: string
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      500: {
        content: never
      }
    }
  }
  /**
   * Remove a Project Member
   * @description Remove a member from a specific project
   */
  removeProjectMember: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID or name of the Project. */
        idOrName: string
        /** @description The user ID of the member. */
        uid: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Retrieve a list of projects
   * @description Allows to retrieve the list of projects of the authenticated user or team. The list will be paginated and the provided query parameters allow filtering the returned projects.
   */
  getProjects: {
    parameters: {
      query?: {
        /** @description Query only projects updated after the given timestamp */
        from?: string
        /** @description Specifies whether PRs from Git forks should require a team member's authorization before it can be deployed */
        gitForkProtection?: '1' | '0'
        /** @description Limit the number of projects returned */
        limit?: string
        /** @description Search projects by the name field */
        search?: string
        /** @description Filter results by repo. Also used for project count */
        repo?: string
        /** @description Filter results by Repository ID. */
        repoId?: string
        /** @description Filter results by Repository URL. */
        repoUrl?: string
        /** @description Filter results by excluding those projects that belong to a repo */
        excludeRepos?: string
        /** @description Filter results by connected Edge Config ID */
        edgeConfigId?: string
        /** @description Filter results by connected Edge Config Token ID */
        edgeConfigTokenId?: string
        deprecated?: boolean
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description The paginated list of projects */
      200: {
        content: {
          'application/json': {
            projects: {
              accountId: string
              analytics?: {
                id: string
                canceledAt?: number | null
                disabledAt: number
                enabledAt: number
                paidAt?: number
                sampleRatePercent?: number | null
                spendLimitInDollars?: number | null
              }
              speedInsights?: {
                id: string
                enabledAt?: number
                disabledAt?: number
                canceledAt?: number
                hasData?: boolean
                paidAt?: number
              }
              autoExposeSystemEnvs?: boolean
              autoAssignCustomDomains?: boolean
              autoAssignCustomDomainsUpdatedBy?: string
              buildCommand?: string | null
              commandForIgnoringBuildStep?: string | null
              connectConfigurationId?: string | null
              connectBuildsEnabled?: boolean
              createdAt?: number
              customerSupportCodeVisibility?: boolean
              crons?: {
                /** @description The time the feature was enabled for this project. Note: It enables automatically with the first Deployment that outputs cronjobs. */
                enabledAt: number
                /** @description The time the feature was disabled for this project. */
                disabledAt: number | null
                updatedAt: number
                /** @description The ID of the Deployment from which the definitions originated. */
                deploymentId: string | null
                definitions: {
                  /**
                   * @description The hostname that should be used.
                   * @example vercel.com
                   */
                  host: string
                  /**
                   * @description The path that should be called for the cronjob.
                   * @example /api/crons/sync-something?hello=world
                   */
                  path: string
                  /**
                   * @description The cron expression.
                   * @example 0 0 * * *
                   */
                  schedule: string
                }[]
              }
              dataCache?: {
                userDisabled: boolean
                storageSizeBytes?: number | null
                unlimited?: boolean
              }
              deploymentExpiration?: {
                expirationDays?: number
                expirationDaysProduction?: number
                expirationDaysCanceled?: number
                expirationDaysErrored?: number
                deploymentsToKeep?: number
              } | null
              devCommand?: string | null
              directoryListing: boolean
              installCommand?: string | null
              env?: {
                target?:
                  | ('production' | 'preview' | 'development')[]
                  | ('production' | 'preview' | 'development')
                /** @enum {string} */
                type: 'system' | 'encrypted' | 'plain' | 'sensitive' | 'secret'
                /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                sunsetSecretId?: string
                id?: string
                key: string
                value: string
                configurationId?: string | null
                createdAt?: number
                updatedAt?: number
                createdBy?: string | null
                updatedBy?: string | null
                gitBranch?: string
                edgeConfigId?: string | null
                edgeConfigTokenId?: string | null
                contentHint?:
                  | {
                      /** @enum {string} */
                      type: 'redis-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-read-only-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'blob-read-write-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-non-pooling'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-prisma-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-user'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-host'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-password'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-database'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-no-ssl'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'integration-store-secret'
                      storeId: string
                    }
                  | null
                /** @description Similar to `contentHints`, but should not be exposed to the user. */
                internalContentHint?: {
                  /** @enum {string} */
                  type: 'flags-secret'
                  /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                  encryptedValue: string
                } | null
                /** @description Whether `value` is decrypted. */
                decrypted?: boolean
                comment?: string
                customEnvironmentIds?: string[]
              }[]
              /** @enum {string|null} */
              framework?:
                | 'blitzjs'
                | 'nextjs'
                | 'gatsby'
                | 'remix'
                | 'astro'
                | 'hexo'
                | 'eleventy'
                | 'docusaurus-2'
                | 'docusaurus'
                | 'preact'
                | 'solidstart-1'
                | 'solidstart'
                | 'dojo'
                | 'ember'
                | 'vue'
                | 'scully'
                | 'ionic-angular'
                | 'angular'
                | 'polymer'
                | 'svelte'
                | 'sveltekit'
                | 'sveltekit-1'
                | 'ionic-react'
                | 'create-react-app'
                | 'gridsome'
                | 'umijs'
                | 'sapper'
                | 'saber'
                | 'stencil'
                | 'nuxtjs'
                | 'redwoodjs'
                | 'hugo'
                | 'jekyll'
                | 'brunch'
                | 'middleman'
                | 'zola'
                | 'hydrogen'
                | 'vite'
                | 'vitepress'
                | 'vuepress'
                | 'parcel'
                | 'sanity'
                | 'storybook'
                | null
              gitForkProtection?: boolean
              gitLFS?: boolean
              id: string
              latestDeployments?: {
                alias?: string[]
                aliasAssigned?: number | boolean | null
                aliasError?: {
                  code: string
                  message: string
                } | null
                aliasFinal?: string | null
                automaticAliases?: string[]
                builds?: {
                  use: string
                  src?: string
                  dest?: string
                }[]
                connectBuildsEnabled?: boolean
                connectConfigurationId?: string
                createdAt: number
                createdIn: string
                creator: {
                  email: string
                  githubLogin?: string
                  gitlabLogin?: string
                  uid: string
                  username: string
                } | null
                deletedAt?: number
                deploymentHostname: string
                name: string
                forced?: boolean
                id: string
                meta?: {
                  [key: string]: string
                }
                monorepoManager?: string | null
                /** @enum {string} */
                plan: 'pro' | 'enterprise' | 'hobby'
                private: boolean
                /** @enum {string} */
                readyState:
                  | 'BUILDING'
                  | 'ERROR'
                  | 'INITIALIZING'
                  | 'QUEUED'
                  | 'READY'
                  | 'CANCELED'
                /** @enum {string} */
                readySubstate?: 'STAGED' | 'PROMOTED'
                requestedAt?: number
                target?: string | null
                teamId?: string | null
                /** @enum {string} */
                type: 'LAMBDAS'
                url: string
                userId: string
                withCache?: boolean
                /** @enum {string} */
                checksConclusion?:
                  | 'succeeded'
                  | 'failed'
                  | 'skipped'
                  | 'canceled'
                /** @enum {string} */
                checksState?: 'registered' | 'running' | 'completed'
                readyAt?: number
                buildingAt?: number
                /**
                 * @description Whether or not preview comments are enabled for the deployment
                 * @example false
                 */
                previewCommentsEnabled?: boolean
                oidcTokenClaims?: {
                  [key: string]: string | string[]
                }
              }[]
              link?: OneOf<
                [
                  {
                    org?: string
                    repo?: string
                    repoId?: number
                    /** @enum {string} */
                    type?: 'github'
                    createdAt?: number
                    deployHooks: {
                      createdAt?: number
                      id: string
                      name: string
                      ref: string
                      url: string
                    }[]
                    gitCredentialId?: string
                    updatedAt?: number
                    sourceless?: boolean
                    productionBranch?: string
                  },
                  {
                    projectId?: string
                    projectName?: string
                    projectNameWithNamespace?: string
                    projectNamespace?: string
                    projectUrl?: string
                    /** @enum {string} */
                    type?: 'gitlab'
                    createdAt?: number
                    deployHooks: {
                      createdAt?: number
                      id: string
                      name: string
                      ref: string
                      url: string
                    }[]
                    gitCredentialId?: string
                    updatedAt?: number
                    sourceless?: boolean
                    productionBranch?: string
                  },
                  {
                    name?: string
                    slug?: string
                    owner?: string
                    /** @enum {string} */
                    type?: 'bitbucket'
                    uuid?: string
                    workspaceUuid?: string
                    createdAt?: number
                    deployHooks: {
                      createdAt?: number
                      id: string
                      name: string
                      ref: string
                      url: string
                    }[]
                    gitCredentialId?: string
                    updatedAt?: number
                    sourceless?: boolean
                    productionBranch?: string
                  },
                ]
              >
              name: string
              /** @enum {string} */
              nodeVersion:
                | '20.x'
                | '18.x'
                | '16.x'
                | '14.x'
                | '12.x'
                | '10.x'
                | '8.10.x'
              optionsAllowlist?: {
                paths: {
                  value: string
                }[]
              } | null
              outputDirectory?: string | null
              passiveConnectConfigurationId?: string | null
              passwordProtection?: unknown
              productionDeploymentsFastLane?: boolean
              publicSource?: boolean | null
              rootDirectory?: string | null
              serverlessFunctionRegion?: string | null
              serverlessFunctionZeroConfigFailover?: boolean
              skewProtectionBoundaryAt?: number
              skewProtectionMaxAge?: number
              skipGitConnectDuringLink?: boolean
              sourceFilesOutsideRootDirectory?: boolean
              ssoProtection?: {
                /** @enum {string} */
                deploymentType:
                  | 'all'
                  | 'preview'
                  | 'prod_deployment_urls_and_all_previews'
              } | null
              targets?: {
                [key: string]: string | string[]
              }
              transferCompletedAt?: number
              transferStartedAt?: number
              transferToAccountId?: string
              transferredFromAccountId?: string
              updatedAt?: number
              live?: boolean
              enablePreviewFeedback?: boolean | null
              permissions?: {
                accessGroup?: components['schemas']['ACLAction'][]
                aliasGlobal?: components['schemas']['ACLAction'][]
                analyticsSampling?: components['schemas']['ACLAction'][]
                analyticsUsage?: components['schemas']['ACLAction'][]
                auditLog?: components['schemas']['ACLAction'][]
                billingAddress?: components['schemas']['ACLAction'][]
                billingInformation?: components['schemas']['ACLAction'][]
                billingInvoice?: components['schemas']['ACLAction'][]
                billingInvoiceEmailRecipient?: components['schemas']['ACLAction'][]
                billingInvoiceLanguage?: components['schemas']['ACLAction'][]
                billingPlan?: components['schemas']['ACLAction'][]
                billingPurchaseOrder?: components['schemas']['ACLAction'][]
                billingTaxId?: components['schemas']['ACLAction'][]
                blob?: components['schemas']['ACLAction'][]
                budget?: components['schemas']['ACLAction'][]
                cacheArtifact?: components['schemas']['ACLAction'][]
                cacheArtifactUsageEvent?: components['schemas']['ACLAction'][]
                codeChecks?: components['schemas']['ACLAction'][]
                concurrentBuilds?: components['schemas']['ACLAction'][]
                connect?: components['schemas']['ACLAction'][]
                connectConfiguration?: components['schemas']['ACLAction'][]
                domain?: components['schemas']['ACLAction'][]
                domainAcceptDelegation?: components['schemas']['ACLAction'][]
                domainAuthCodes?: components['schemas']['ACLAction'][]
                domainCertificate?: components['schemas']['ACLAction'][]
                domainCheckConfig?: components['schemas']['ACLAction'][]
                domainMove?: components['schemas']['ACLAction'][]
                domainPurchase?: components['schemas']['ACLAction'][]
                domainRecord?: components['schemas']['ACLAction'][]
                domainTransferIn?: components['schemas']['ACLAction'][]
                event?: components['schemas']['ACLAction'][]
                ownEvent?: components['schemas']['ACLAction'][]
                sensitiveEnvironmentVariablePolicy?: components['schemas']['ACLAction'][]
                fileUpload?: components['schemas']['ACLAction'][]
                gitRepository?: components['schemas']['ACLAction'][]
                ipBlocking?: components['schemas']['ACLAction'][]
                integration?: components['schemas']['ACLAction'][]
                integrationAccount?: components['schemas']['ACLAction'][]
                integrationConfiguration?: components['schemas']['ACLAction'][]
                integrationConfigurationTransfer?: components['schemas']['ACLAction'][]
                integrationConfigurationProjects?: components['schemas']['ACLAction'][]
                integrationVercelConfigurationOverride?: components['schemas']['ACLAction'][]
                integrationResource?: components['schemas']['ACLAction'][]
                integrationStore?: components['schemas']['ACLAction'][]
                integrationEvent?: components['schemas']['ACLAction'][]
                integrationResourceSecrets?: components['schemas']['ACLAction'][]
                marketplaceBillingData?: components['schemas']['ACLAction'][]
                jobGlobal?: components['schemas']['ACLAction'][]
                logDrain?: components['schemas']['ACLAction'][]
                Monitoring?: components['schemas']['ACLAction'][]
                monitoringSettings?: components['schemas']['ACLAction'][]
                monitoringQuery?: components['schemas']['ACLAction'][]
                monitoringChart?: components['schemas']['ACLAction'][]
                monitoringAlert?: components['schemas']['ACLAction'][]
                notificationDeploymentFailed?: components['schemas']['ACLAction'][]
                notificationDomainConfiguration?: components['schemas']['ACLAction'][]
                notificationDomainExpire?: components['schemas']['ACLAction'][]
                notificationDomainMoved?: components['schemas']['ACLAction'][]
                notificationDomainPurchase?: components['schemas']['ACLAction'][]
                notificationDomainRenewal?: components['schemas']['ACLAction'][]
                notificationDomainTransfer?: components['schemas']['ACLAction'][]
                notificationDomainUnverified?: components['schemas']['ACLAction'][]
                NotificationMonitoringAlert?: components['schemas']['ACLAction'][]
                notificationPaymentFailed?: components['schemas']['ACLAction'][]
                notificationUsageAlert?: components['schemas']['ACLAction'][]
                notificationCustomerBudget?: components['schemas']['ACLAction'][]
                notificationStatementOfReasons?: components['schemas']['ACLAction'][]
                oauth2Connection?: components['schemas']['ACLAction'][]
                openTelemetryEndpoint?: components['schemas']['ACLAction'][]
                paymentMethod?: components['schemas']['ACLAction'][]
                permissions?: components['schemas']['ACLAction'][]
                postgres?: components['schemas']['ACLAction'][]
                previewDeploymentSuffix?: components['schemas']['ACLAction'][]
                proTrialOnboarding?: components['schemas']['ACLAction'][]
                sharedEnvVars?: components['schemas']['ACLAction'][]
                sharedEnvVarsProduction?: components['schemas']['ACLAction'][]
                space?: components['schemas']['ACLAction'][]
                spaceRun?: components['schemas']['ACLAction'][]
                passwordProtectionInvoiceItem?: components['schemas']['ACLAction'][]
                rateLimit?: components['schemas']['ACLAction'][]
                redis?: components['schemas']['ACLAction'][]
                repository?: components['schemas']['ACLAction'][]
                remoteCaching?: components['schemas']['ACLAction'][]
                samlConfig?: components['schemas']['ACLAction'][]
                secret?: components['schemas']['ACLAction'][]
                redisStoreTokenSet?: components['schemas']['ACLAction'][]
                blobStoreTokenSet?: components['schemas']['ACLAction'][]
                postgresStoreTokenSet?: components['schemas']['ACLAction'][]
                integrationStoreTokenSet?: components['schemas']['ACLAction'][]
                supportCase?: components['schemas']['ACLAction'][]
                supportCaseComment?: components['schemas']['ACLAction'][]
                dataCacheBillingSettings?: components['schemas']['ACLAction'][]
                team?: components['schemas']['ACLAction'][]
                teamAccessRequest?: components['schemas']['ACLAction'][]
                teamFellowMembership?: components['schemas']['ACLAction'][]
                teamGitExclusivity?: components['schemas']['ACLAction'][]
                teamInvite?: components['schemas']['ACLAction'][]
                teamInviteCode?: components['schemas']['ACLAction'][]
                teamJoin?: components['schemas']['ACLAction'][]
                teamOwnMembership?: components['schemas']['ACLAction'][]
                teamOwnMembershipDisconnectSAML?: components['schemas']['ACLAction'][]
                token?: components['schemas']['ACLAction'][]
                usage?: components['schemas']['ACLAction'][]
                usageCycle?: components['schemas']['ACLAction'][]
                user?: components['schemas']['ACLAction'][]
                userConnection?: components['schemas']['ACLAction'][]
                webAnalyticsPlan?: components['schemas']['ACLAction'][]
                webAuthn?: components['schemas']['ACLAction'][]
                edgeConfig?: components['schemas']['ACLAction'][]
                edgeConfigItem?: components['schemas']['ACLAction'][]
                edgeConfigSchema?: components['schemas']['ACLAction'][]
                edgeConfigToken?: components['schemas']['ACLAction'][]
                webhook?: components['schemas']['ACLAction'][]
                'webhook-event'?: components['schemas']['ACLAction'][]
                endpointVerification?: components['schemas']['ACLAction'][]
                projectTransferIn?: components['schemas']['ACLAction'][]
                oauth2Application?: components['schemas']['ACLAction'][]
                aliasProject?: components['schemas']['ACLAction'][]
                aliasProtectionBypass?: components['schemas']['ACLAction'][]
                productionAliasProtectionBypass?: components['schemas']['ACLAction'][]
                connectConfigurationLink?: components['schemas']['ACLAction'][]
                dataCacheNamespace?: components['schemas']['ACLAction'][]
                deployment?: components['schemas']['ACLAction'][]
                deploymentCheck?: components['schemas']['ACLAction'][]
                deploymentCheckPreview?: components['schemas']['ACLAction'][]
                deploymentCheckReRunFromProductionBranch?: components['schemas']['ACLAction'][]
                deploymentProductionGit?: components['schemas']['ACLAction'][]
                deploymentPreview?: components['schemas']['ACLAction'][]
                deploymentPrivate?: components['schemas']['ACLAction'][]
                deploymentPromote?: components['schemas']['ACLAction'][]
                deploymentRollback?: components['schemas']['ACLAction'][]
                environments?: components['schemas']['ACLAction'][]
                logs?: components['schemas']['ACLAction'][]
                logsPreset?: components['schemas']['ACLAction'][]
                passwordProtection?: components['schemas']['ACLAction'][]
                optionsAllowlist?: components['schemas']['ACLAction'][]
                job?: components['schemas']['ACLAction'][]
                project?: components['schemas']['ACLAction'][]
                projectAccessGroup?: components['schemas']['ACLAction'][]
                projectAnalyticsSampling?: components['schemas']['ACLAction'][]
                projectDeploymentHook?: components['schemas']['ACLAction'][]
                projectDomain?: components['schemas']['ACLAction'][]
                projectDomainMove?: components['schemas']['ACLAction'][]
                projectDomainCheckConfig?: components['schemas']['ACLAction'][]
                projectEnvVars?: components['schemas']['ACLAction'][]
                projectEnvVarsProduction?: components['schemas']['ACLAction'][]
                projectEnvVarsUnownedByIntegration?: components['schemas']['ACLAction'][]
                projectId?: components['schemas']['ACLAction'][]
                projectIntegrationConfiguration?: components['schemas']['ACLAction'][]
                projectLink?: components['schemas']['ACLAction'][]
                projectMember?: components['schemas']['ACLAction'][]
                projectMonitoring?: components['schemas']['ACLAction'][]
                projectPermissions?: components['schemas']['ACLAction'][]
                projectProductionBranch?: components['schemas']['ACLAction'][]
                projectTransfer?: components['schemas']['ACLAction'][]
                projectTransferOut?: components['schemas']['ACLAction'][]
                projectProtectionBypass?: components['schemas']['ACLAction'][]
                projectUsage?: components['schemas']['ACLAction'][]
                projectAnalyticsUsage?: components['schemas']['ACLAction'][]
                projectSupportCase?: components['schemas']['ACLAction'][]
                projectSupportCaseComment?: components['schemas']['ACLAction'][]
                projectDeploymentExpiration?: components['schemas']['ACLAction'][]
                seawallConfig?: components['schemas']['ACLAction'][]
                skewProtection?: components['schemas']['ACLAction'][]
                analytics?: components['schemas']['ACLAction'][]
                trustedIps?: components['schemas']['ACLAction'][]
                webAnalytics?: components['schemas']['ACLAction'][]
                sharedEnvVarConnection?: components['schemas']['ACLAction'][]
              }
              lastRollbackTarget?: unknown
              lastAliasRequest?: {
                fromDeploymentId: string
                toDeploymentId: string
                /** @enum {string} */
                jobStatus:
                  | 'succeeded'
                  | 'failed'
                  | 'skipped'
                  | 'pending'
                  | 'in-progress'
                requestedAt: number
                /** @enum {string} */
                type: 'promote' | 'rollback'
              } | null
              hasFloatingAliases?: boolean
              protectionBypass?: {
                [key: string]: {
                  createdAt: number
                  createdBy: string
                  /** @enum {string} */
                  scope: 'automation-bypass'
                }
              }
              hasActiveBranches?: boolean
              trustedIps?: OneOf<
                [
                  {
                    /** @enum {string} */
                    deploymentType:
                      | 'all'
                      | 'preview'
                      | 'prod_deployment_urls_and_all_previews'
                      | 'production'
                    addresses: {
                      value: string
                      note?: string
                    }[]
                    /** @enum {string} */
                    protectionMode: 'additional' | 'exclusive'
                  },
                  {
                    /** @enum {string} */
                    deploymentType:
                      | 'all'
                      | 'preview'
                      | 'prod_deployment_urls_and_all_previews'
                      | 'production'
                  },
                  null,
                ]
              >
              gitComments?: {
                /** @description Whether the Vercel bot should comment on PRs */
                onPullRequest: boolean
                /** @description Whether the Vercel bot should comment on commits */
                onCommit: boolean
              }
              paused?: boolean
              concurrencyBucketName?: string
              webAnalytics?: {
                id: string
                disabledAt?: number
                canceledAt?: number
                enabledAt?: number
                hasData?: boolean
              }
              security?: {
                attackModeEnabled?: boolean
                attackModeUpdatedAt?: number
                firewallEnabled?: boolean
                firewallUpdatedAt?: number
                attackModeActiveUntil?: number | null
                firewallConfigVersion?: number
                firewallRoutes?: {
                  src?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                  has?: {
                    /** @enum {string} */
                    type:
                      | 'host'
                      | 'method'
                      | 'path'
                      | 'header'
                      | 'cookie'
                      | 'query'
                      | 'ip_address'
                      | 'protocol'
                      | 'scheme'
                      | 'region'
                    key?: string
                    value?: OneOf<
                      [
                        string,
                        {
                          re?: string
                          eq?: string
                          neq?: string
                          inc?: string[]
                          ninc?: string[]
                          pre?: string
                          suf?: string
                          gt?: number
                          gte?: number
                          lt?: number
                          lte?: number
                        },
                      ]
                    >
                  }[]
                  missing?: {
                    /** @enum {string} */
                    type:
                      | 'host'
                      | 'method'
                      | 'path'
                      | 'header'
                      | 'cookie'
                      | 'query'
                      | 'ip_address'
                      | 'protocol'
                      | 'scheme'
                      | 'region'
                    key?: string
                    value?: OneOf<
                      [
                        string,
                        {
                          re?: string
                          eq?: string
                          neq?: string
                          inc?: string[]
                          ninc?: string[]
                          pre?: string
                          suf?: string
                          gt?: number
                          gte?: number
                          lt?: number
                          lte?: number
                        },
                      ]
                    >
                  }[]
                  dest?: string
                  status?: number
                  /** @enum {string} */
                  handle?: 'init' | 'finalize'
                  mitigate?: {
                    /** @enum {string} */
                    action:
                      | 'deny'
                      | 'challenge'
                      | 'log'
                      | 'bypass'
                      | 'rate_limit'
                    rule_id: string
                    erl?: {
                      /** @enum {string} */
                      algo: 'fixed_window' | 'token_bucket'
                      window: number
                      limit: number
                      keys: string[]
                    }
                  }
                }[]
                firewallSeawallEnabled?: boolean
                ja3Enabled?: boolean
                ja4Enabled?: boolean
              }
              oidcTokenConfig?: {
                enabled: boolean
              }
            }[]
            pagination: components['schemas']['Pagination']
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Create a new project
   * @description Allows to create a new project with the provided configuration. It only requires the project `name` but more configuration can be provided to override the defaults.
   */
  createProject: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description The build command for this project. When `null` is used this value will be automatically detected */
          buildCommand?: string | null
          commandForIgnoringBuildStep?: string | null
          /** @description The dev command for this project. When `null` is used this value will be automatically detected */
          devCommand?: string | null
          /** @description Collection of ENV Variables the Project will use */
          environmentVariables?: {
            /** @description Name of the ENV variable */
            key: string
            /** @description Deployment Target or Targets in which the ENV variable will be used */
            target:
              | ('production' | 'preview' | 'development')
              | ('production' | 'preview' | 'development')[]
            /** @description If defined, the git branch of the environment variable (must have target=preview) */
            gitBranch?: string
            /**
             * @description Type of the ENV variable
             * @enum {string}
             */
            type?: 'system' | 'secret' | 'encrypted' | 'plain' | 'sensitive'
            /** @description Value for the ENV variable */
            value: string
          }[]
          /**
           * @description The framework that is being used for this project. When `null` is used no framework is selected
           * @enum {unknown}
           */
          framework?:
            | ''
            | 'blitzjs'
            | 'nextjs'
            | 'gatsby'
            | 'remix'
            | 'astro'
            | 'hexo'
            | 'eleventy'
            | 'docusaurus-2'
            | 'docusaurus'
            | 'preact'
            | 'solidstart-1'
            | 'solidstart'
            | 'dojo'
            | 'ember'
            | 'vue'
            | 'scully'
            | 'ionic-angular'
            | 'angular'
            | 'polymer'
            | 'svelte'
            | 'sveltekit'
            | 'sveltekit-1'
            | 'ionic-react'
            | 'create-react-app'
            | 'gridsome'
            | 'umijs'
            | 'sapper'
            | 'saber'
            | 'stencil'
            | 'nuxtjs'
            | 'redwoodjs'
            | 'hugo'
            | 'jekyll'
            | 'brunch'
            | 'middleman'
            | 'zola'
            | 'hydrogen'
            | 'vite'
            | 'vitepress'
            | 'vuepress'
            | 'parcel'
            | 'sanity'
            | 'storybook'
          /** @description The Git Repository that will be connected to the project. When this is defined, any pushes to the specified connected Git Repository will be automatically deployed */
          gitRepository?: {
            /** @description The name of the git repository. For example: \"vercel/next.js\" */
            repo: string
            /**
             * @description The Git Provider of the repository
             * @enum {unknown}
             */
            type: 'github' | 'gitlab' | 'bitbucket'
          }
          /** @description The install command for this project. When `null` is used this value will be automatically detected */
          installCommand?: string | null
          /**
           * @description The desired name for the project
           * @example a-project-name
           */
          name: string
          /**
           * @deprecated
           * @description Opts-out of the message prompting a CLI user to connect a Git repository in `vercel link`.
           */
          skipGitConnectDuringLink?: boolean
          /** @description The output directory of the project. When `null` is used this value will be automatically detected */
          outputDirectory?: string | null
          /** @description Specifies whether the source code and logs of the deployments for this project should be public or not */
          publicSource?: boolean | null
          /** @description The name of a directory or relative path to the source code of your project. When `null` is used it will default to the project root */
          rootDirectory?: string | null
          /** @description The region to deploy Serverless Functions in this project */
          serverlessFunctionRegion?: string | null
          /** @description Specifies whether Zero Config Failover is enabled for this project. */
          serverlessFunctionZeroConfigFailover?: boolean
        }
      }
    }
    responses: {
      /** @description The project was successfuly created */
      200: {
        content: {
          'application/json': {
            accountId: string
            analytics?: {
              id: string
              canceledAt?: number | null
              disabledAt: number
              enabledAt: number
              paidAt?: number
              sampleRatePercent?: number | null
              spendLimitInDollars?: number | null
            }
            speedInsights?: {
              id: string
              enabledAt?: number
              disabledAt?: number
              canceledAt?: number
              hasData?: boolean
              paidAt?: number
            }
            autoExposeSystemEnvs?: boolean
            autoAssignCustomDomains?: boolean
            autoAssignCustomDomainsUpdatedBy?: string
            buildCommand?: string | null
            commandForIgnoringBuildStep?: string | null
            connectConfigurationId?: string | null
            connectBuildsEnabled?: boolean
            createdAt?: number
            customerSupportCodeVisibility?: boolean
            crons?: {
              /** @description The time the feature was enabled for this project. Note: It enables automatically with the first Deployment that outputs cronjobs. */
              enabledAt: number
              /** @description The time the feature was disabled for this project. */
              disabledAt: number | null
              updatedAt: number
              /** @description The ID of the Deployment from which the definitions originated. */
              deploymentId: string | null
              definitions: {
                /**
                 * @description The hostname that should be used.
                 * @example vercel.com
                 */
                host: string
                /**
                 * @description The path that should be called for the cronjob.
                 * @example /api/crons/sync-something?hello=world
                 */
                path: string
                /**
                 * @description The cron expression.
                 * @example 0 0 * * *
                 */
                schedule: string
              }[]
            }
            dataCache?: {
              userDisabled: boolean
              storageSizeBytes?: number | null
              unlimited?: boolean
            }
            deploymentExpiration?: {
              expirationDays?: number
              expirationDaysProduction?: number
              expirationDaysCanceled?: number
              expirationDaysErrored?: number
              deploymentsToKeep?: number
            } | null
            devCommand?: string | null
            directoryListing: boolean
            installCommand?: string | null
            env?: {
              target?:
                | ('production' | 'preview' | 'development')[]
                | ('production' | 'preview' | 'development')
              /** @enum {string} */
              type: 'system' | 'secret' | 'encrypted' | 'plain' | 'sensitive'
              /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
              sunsetSecretId?: string
              id?: string
              key: string
              value: string
              configurationId?: string | null
              createdAt?: number
              updatedAt?: number
              createdBy?: string | null
              updatedBy?: string | null
              gitBranch?: string
              edgeConfigId?: string | null
              edgeConfigTokenId?: string | null
              contentHint?:
                | {
                    /** @enum {string} */
                    type: 'redis-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-read-only-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'blob-read-write-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url-non-pooling'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-prisma-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-user'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-host'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-password'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-database'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url-no-ssl'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'integration-store-secret'
                    storeId: string
                  }
                | null
              /** @description Similar to `contentHints`, but should not be exposed to the user. */
              internalContentHint?: {
                /** @enum {string} */
                type: 'flags-secret'
                /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                encryptedValue: string
              } | null
              /** @description Whether `value` is decrypted. */
              decrypted?: boolean
              comment?: string
              customEnvironmentIds?: string[]
            }[]
            /** @enum {string|null} */
            framework?:
              | 'blitzjs'
              | 'nextjs'
              | 'gatsby'
              | 'remix'
              | 'astro'
              | 'hexo'
              | 'eleventy'
              | 'docusaurus-2'
              | 'docusaurus'
              | 'preact'
              | 'solidstart-1'
              | 'solidstart'
              | 'dojo'
              | 'ember'
              | 'vue'
              | 'scully'
              | 'ionic-angular'
              | 'angular'
              | 'polymer'
              | 'svelte'
              | 'sveltekit'
              | 'sveltekit-1'
              | 'ionic-react'
              | 'create-react-app'
              | 'gridsome'
              | 'umijs'
              | 'sapper'
              | 'saber'
              | 'stencil'
              | 'nuxtjs'
              | 'redwoodjs'
              | 'hugo'
              | 'jekyll'
              | 'brunch'
              | 'middleman'
              | 'zola'
              | 'hydrogen'
              | 'vite'
              | 'vitepress'
              | 'vuepress'
              | 'parcel'
              | 'sanity'
              | 'storybook'
              | null
            gitForkProtection?: boolean
            gitLFS?: boolean
            id: string
            latestDeployments?: {
              alias?: string[]
              aliasAssigned?: number | boolean | null
              aliasError?: {
                code: string
                message: string
              } | null
              aliasFinal?: string | null
              automaticAliases?: string[]
              builds?: {
                use: string
                src?: string
                dest?: string
              }[]
              connectBuildsEnabled?: boolean
              connectConfigurationId?: string
              createdAt: number
              createdIn: string
              creator: {
                email: string
                githubLogin?: string
                gitlabLogin?: string
                uid: string
                username: string
              } | null
              deletedAt?: number
              deploymentHostname: string
              name: string
              forced?: boolean
              id: string
              meta?: {
                [key: string]: string
              }
              monorepoManager?: string | null
              /** @enum {string} */
              plan: 'pro' | 'enterprise' | 'hobby'
              private: boolean
              /** @enum {string} */
              readyState:
                | 'BUILDING'
                | 'ERROR'
                | 'INITIALIZING'
                | 'QUEUED'
                | 'READY'
                | 'CANCELED'
              /** @enum {string} */
              readySubstate?: 'STAGED' | 'PROMOTED'
              requestedAt?: number
              target?: string | null
              teamId?: string | null
              /** @enum {string} */
              type: 'LAMBDAS'
              url: string
              userId: string
              withCache?: boolean
              /** @enum {string} */
              checksConclusion?: 'succeeded' | 'failed' | 'skipped' | 'canceled'
              /** @enum {string} */
              checksState?: 'registered' | 'running' | 'completed'
              readyAt?: number
              buildingAt?: number
              /**
               * @description Whether or not preview comments are enabled for the deployment
               * @example false
               */
              previewCommentsEnabled?: boolean
              oidcTokenClaims?: {
                [key: string]: string | string[]
              }
            }[]
            link?: OneOf<
              [
                {
                  org?: string
                  repo?: string
                  repoId?: number
                  /** @enum {string} */
                  type?: 'github'
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
                {
                  projectId?: string
                  projectName?: string
                  projectNameWithNamespace?: string
                  projectNamespace?: string
                  projectUrl?: string
                  /** @enum {string} */
                  type?: 'gitlab'
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
                {
                  name?: string
                  slug?: string
                  owner?: string
                  /** @enum {string} */
                  type?: 'bitbucket'
                  uuid?: string
                  workspaceUuid?: string
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
              ]
            >
            name: string
            /** @enum {string} */
            nodeVersion:
              | '20.x'
              | '18.x'
              | '16.x'
              | '14.x'
              | '12.x'
              | '10.x'
              | '8.10.x'
            optionsAllowlist?: {
              paths: {
                value: string
              }[]
            } | null
            outputDirectory?: string | null
            passiveConnectConfigurationId?: string | null
            passwordProtection?: unknown
            productionDeploymentsFastLane?: boolean
            publicSource?: boolean | null
            rootDirectory?: string | null
            serverlessFunctionRegion?: string | null
            serverlessFunctionZeroConfigFailover?: boolean
            skewProtectionBoundaryAt?: number
            skewProtectionMaxAge?: number
            skipGitConnectDuringLink?: boolean
            sourceFilesOutsideRootDirectory?: boolean
            ssoProtection?: {
              /** @enum {string} */
              deploymentType:
                | 'all'
                | 'preview'
                | 'prod_deployment_urls_and_all_previews'
            } | null
            targets?: {
              [key: string]: string | string[]
            }
            transferCompletedAt?: number
            transferStartedAt?: number
            transferToAccountId?: string
            transferredFromAccountId?: string
            updatedAt?: number
            live?: boolean
            enablePreviewFeedback?: boolean | null
            permissions?: {
              accessGroup?: components['schemas']['ACLAction'][]
              aliasGlobal?: components['schemas']['ACLAction'][]
              analyticsSampling?: components['schemas']['ACLAction'][]
              analyticsUsage?: components['schemas']['ACLAction'][]
              auditLog?: components['schemas']['ACLAction'][]
              billingAddress?: components['schemas']['ACLAction'][]
              billingInformation?: components['schemas']['ACLAction'][]
              billingInvoice?: components['schemas']['ACLAction'][]
              billingInvoiceEmailRecipient?: components['schemas']['ACLAction'][]
              billingInvoiceLanguage?: components['schemas']['ACLAction'][]
              billingPlan?: components['schemas']['ACLAction'][]
              billingPurchaseOrder?: components['schemas']['ACLAction'][]
              billingTaxId?: components['schemas']['ACLAction'][]
              blob?: components['schemas']['ACLAction'][]
              budget?: components['schemas']['ACLAction'][]
              cacheArtifact?: components['schemas']['ACLAction'][]
              cacheArtifactUsageEvent?: components['schemas']['ACLAction'][]
              codeChecks?: components['schemas']['ACLAction'][]
              concurrentBuilds?: components['schemas']['ACLAction'][]
              connect?: components['schemas']['ACLAction'][]
              connectConfiguration?: components['schemas']['ACLAction'][]
              domain?: components['schemas']['ACLAction'][]
              domainAcceptDelegation?: components['schemas']['ACLAction'][]
              domainAuthCodes?: components['schemas']['ACLAction'][]
              domainCertificate?: components['schemas']['ACLAction'][]
              domainCheckConfig?: components['schemas']['ACLAction'][]
              domainMove?: components['schemas']['ACLAction'][]
              domainPurchase?: components['schemas']['ACLAction'][]
              domainRecord?: components['schemas']['ACLAction'][]
              domainTransferIn?: components['schemas']['ACLAction'][]
              event?: components['schemas']['ACLAction'][]
              ownEvent?: components['schemas']['ACLAction'][]
              sensitiveEnvironmentVariablePolicy?: components['schemas']['ACLAction'][]
              fileUpload?: components['schemas']['ACLAction'][]
              gitRepository?: components['schemas']['ACLAction'][]
              ipBlocking?: components['schemas']['ACLAction'][]
              integration?: components['schemas']['ACLAction'][]
              integrationAccount?: components['schemas']['ACLAction'][]
              integrationConfiguration?: components['schemas']['ACLAction'][]
              integrationConfigurationTransfer?: components['schemas']['ACLAction'][]
              integrationConfigurationProjects?: components['schemas']['ACLAction'][]
              integrationVercelConfigurationOverride?: components['schemas']['ACLAction'][]
              integrationResource?: components['schemas']['ACLAction'][]
              integrationStore?: components['schemas']['ACLAction'][]
              integrationEvent?: components['schemas']['ACLAction'][]
              integrationResourceSecrets?: components['schemas']['ACLAction'][]
              marketplaceBillingData?: components['schemas']['ACLAction'][]
              jobGlobal?: components['schemas']['ACLAction'][]
              logDrain?: components['schemas']['ACLAction'][]
              Monitoring?: components['schemas']['ACLAction'][]
              monitoringSettings?: components['schemas']['ACLAction'][]
              monitoringQuery?: components['schemas']['ACLAction'][]
              monitoringChart?: components['schemas']['ACLAction'][]
              monitoringAlert?: components['schemas']['ACLAction'][]
              notificationDeploymentFailed?: components['schemas']['ACLAction'][]
              notificationDomainConfiguration?: components['schemas']['ACLAction'][]
              notificationDomainExpire?: components['schemas']['ACLAction'][]
              notificationDomainMoved?: components['schemas']['ACLAction'][]
              notificationDomainPurchase?: components['schemas']['ACLAction'][]
              notificationDomainRenewal?: components['schemas']['ACLAction'][]
              notificationDomainTransfer?: components['schemas']['ACLAction'][]
              notificationDomainUnverified?: components['schemas']['ACLAction'][]
              NotificationMonitoringAlert?: components['schemas']['ACLAction'][]
              notificationPaymentFailed?: components['schemas']['ACLAction'][]
              notificationUsageAlert?: components['schemas']['ACLAction'][]
              notificationCustomerBudget?: components['schemas']['ACLAction'][]
              notificationStatementOfReasons?: components['schemas']['ACLAction'][]
              oauth2Connection?: components['schemas']['ACLAction'][]
              openTelemetryEndpoint?: components['schemas']['ACLAction'][]
              paymentMethod?: components['schemas']['ACLAction'][]
              permissions?: components['schemas']['ACLAction'][]
              postgres?: components['schemas']['ACLAction'][]
              previewDeploymentSuffix?: components['schemas']['ACLAction'][]
              proTrialOnboarding?: components['schemas']['ACLAction'][]
              sharedEnvVars?: components['schemas']['ACLAction'][]
              sharedEnvVarsProduction?: components['schemas']['ACLAction'][]
              space?: components['schemas']['ACLAction'][]
              spaceRun?: components['schemas']['ACLAction'][]
              passwordProtectionInvoiceItem?: components['schemas']['ACLAction'][]
              rateLimit?: components['schemas']['ACLAction'][]
              redis?: components['schemas']['ACLAction'][]
              repository?: components['schemas']['ACLAction'][]
              remoteCaching?: components['schemas']['ACLAction'][]
              samlConfig?: components['schemas']['ACLAction'][]
              secret?: components['schemas']['ACLAction'][]
              redisStoreTokenSet?: components['schemas']['ACLAction'][]
              blobStoreTokenSet?: components['schemas']['ACLAction'][]
              postgresStoreTokenSet?: components['schemas']['ACLAction'][]
              integrationStoreTokenSet?: components['schemas']['ACLAction'][]
              supportCase?: components['schemas']['ACLAction'][]
              supportCaseComment?: components['schemas']['ACLAction'][]
              dataCacheBillingSettings?: components['schemas']['ACLAction'][]
              team?: components['schemas']['ACLAction'][]
              teamAccessRequest?: components['schemas']['ACLAction'][]
              teamFellowMembership?: components['schemas']['ACLAction'][]
              teamGitExclusivity?: components['schemas']['ACLAction'][]
              teamInvite?: components['schemas']['ACLAction'][]
              teamInviteCode?: components['schemas']['ACLAction'][]
              teamJoin?: components['schemas']['ACLAction'][]
              teamOwnMembership?: components['schemas']['ACLAction'][]
              teamOwnMembershipDisconnectSAML?: components['schemas']['ACLAction'][]
              token?: components['schemas']['ACLAction'][]
              usage?: components['schemas']['ACLAction'][]
              usageCycle?: components['schemas']['ACLAction'][]
              user?: components['schemas']['ACLAction'][]
              userConnection?: components['schemas']['ACLAction'][]
              webAnalyticsPlan?: components['schemas']['ACLAction'][]
              webAuthn?: components['schemas']['ACLAction'][]
              edgeConfig?: components['schemas']['ACLAction'][]
              edgeConfigItem?: components['schemas']['ACLAction'][]
              edgeConfigSchema?: components['schemas']['ACLAction'][]
              edgeConfigToken?: components['schemas']['ACLAction'][]
              webhook?: components['schemas']['ACLAction'][]
              'webhook-event'?: components['schemas']['ACLAction'][]
              endpointVerification?: components['schemas']['ACLAction'][]
              projectTransferIn?: components['schemas']['ACLAction'][]
              oauth2Application?: components['schemas']['ACLAction'][]
              aliasProject?: components['schemas']['ACLAction'][]
              aliasProtectionBypass?: components['schemas']['ACLAction'][]
              productionAliasProtectionBypass?: components['schemas']['ACLAction'][]
              connectConfigurationLink?: components['schemas']['ACLAction'][]
              dataCacheNamespace?: components['schemas']['ACLAction'][]
              deployment?: components['schemas']['ACLAction'][]
              deploymentCheck?: components['schemas']['ACLAction'][]
              deploymentCheckPreview?: components['schemas']['ACLAction'][]
              deploymentCheckReRunFromProductionBranch?: components['schemas']['ACLAction'][]
              deploymentProductionGit?: components['schemas']['ACLAction'][]
              deploymentPreview?: components['schemas']['ACLAction'][]
              deploymentPrivate?: components['schemas']['ACLAction'][]
              deploymentPromote?: components['schemas']['ACLAction'][]
              deploymentRollback?: components['schemas']['ACLAction'][]
              environments?: components['schemas']['ACLAction'][]
              logs?: components['schemas']['ACLAction'][]
              logsPreset?: components['schemas']['ACLAction'][]
              passwordProtection?: components['schemas']['ACLAction'][]
              optionsAllowlist?: components['schemas']['ACLAction'][]
              job?: components['schemas']['ACLAction'][]
              project?: components['schemas']['ACLAction'][]
              projectAccessGroup?: components['schemas']['ACLAction'][]
              projectAnalyticsSampling?: components['schemas']['ACLAction'][]
              projectDeploymentHook?: components['schemas']['ACLAction'][]
              projectDomain?: components['schemas']['ACLAction'][]
              projectDomainMove?: components['schemas']['ACLAction'][]
              projectDomainCheckConfig?: components['schemas']['ACLAction'][]
              projectEnvVars?: components['schemas']['ACLAction'][]
              projectEnvVarsProduction?: components['schemas']['ACLAction'][]
              projectEnvVarsUnownedByIntegration?: components['schemas']['ACLAction'][]
              projectId?: components['schemas']['ACLAction'][]
              projectIntegrationConfiguration?: components['schemas']['ACLAction'][]
              projectLink?: components['schemas']['ACLAction'][]
              projectMember?: components['schemas']['ACLAction'][]
              projectMonitoring?: components['schemas']['ACLAction'][]
              projectPermissions?: components['schemas']['ACLAction'][]
              projectProductionBranch?: components['schemas']['ACLAction'][]
              projectTransfer?: components['schemas']['ACLAction'][]
              projectTransferOut?: components['schemas']['ACLAction'][]
              projectProtectionBypass?: components['schemas']['ACLAction'][]
              projectUsage?: components['schemas']['ACLAction'][]
              projectAnalyticsUsage?: components['schemas']['ACLAction'][]
              projectSupportCase?: components['schemas']['ACLAction'][]
              projectSupportCaseComment?: components['schemas']['ACLAction'][]
              projectDeploymentExpiration?: components['schemas']['ACLAction'][]
              seawallConfig?: components['schemas']['ACLAction'][]
              skewProtection?: components['schemas']['ACLAction'][]
              analytics?: components['schemas']['ACLAction'][]
              trustedIps?: components['schemas']['ACLAction'][]
              webAnalytics?: components['schemas']['ACLAction'][]
              sharedEnvVarConnection?: components['schemas']['ACLAction'][]
            }
            lastRollbackTarget?: unknown
            lastAliasRequest?: {
              fromDeploymentId: string
              toDeploymentId: string
              /** @enum {string} */
              jobStatus:
                | 'succeeded'
                | 'failed'
                | 'skipped'
                | 'pending'
                | 'in-progress'
              requestedAt: number
              /** @enum {string} */
              type: 'promote' | 'rollback'
            } | null
            hasFloatingAliases?: boolean
            protectionBypass?: {
              [key: string]: {
                createdAt: number
                createdBy: string
                /** @enum {string} */
                scope: 'automation-bypass'
              }
            }
            hasActiveBranches?: boolean
            trustedIps?: OneOf<
              [
                {
                  /** @enum {string} */
                  deploymentType:
                    | 'all'
                    | 'preview'
                    | 'prod_deployment_urls_and_all_previews'
                    | 'production'
                  addresses: {
                    value: string
                    note?: string
                  }[]
                  /** @enum {string} */
                  protectionMode: 'additional' | 'exclusive'
                },
                {
                  /** @enum {string} */
                  deploymentType:
                    | 'all'
                    | 'preview'
                    | 'prod_deployment_urls_and_all_previews'
                    | 'production'
                },
                null,
              ]
            >
            gitComments?: {
              /** @description Whether the Vercel bot should comment on PRs */
              onPullRequest: boolean
              /** @description Whether the Vercel bot should comment on commits */
              onCommit: boolean
            }
            paused?: boolean
            concurrencyBucketName?: string
            webAnalytics?: {
              id: string
              disabledAt?: number
              canceledAt?: number
              enabledAt?: number
              hasData?: boolean
            }
            security?: {
              attackModeEnabled?: boolean
              attackModeUpdatedAt?: number
              firewallEnabled?: boolean
              firewallUpdatedAt?: number
              attackModeActiveUntil?: number | null
              firewallConfigVersion?: number
              firewallRoutes?: {
                src?: OneOf<
                  [
                    string,
                    {
                      re?: string
                      eq?: string
                      neq?: string
                      inc?: string[]
                      ninc?: string[]
                      pre?: string
                      suf?: string
                      gt?: number
                      gte?: number
                      lt?: number
                      lte?: number
                    },
                  ]
                >
                has?: {
                  /** @enum {string} */
                  type:
                    | 'host'
                    | 'method'
                    | 'path'
                    | 'header'
                    | 'cookie'
                    | 'query'
                    | 'ip_address'
                    | 'protocol'
                    | 'scheme'
                    | 'region'
                  key?: string
                  value?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                }[]
                missing?: {
                  /** @enum {string} */
                  type:
                    | 'host'
                    | 'method'
                    | 'path'
                    | 'header'
                    | 'cookie'
                    | 'query'
                    | 'ip_address'
                    | 'protocol'
                    | 'scheme'
                    | 'region'
                  key?: string
                  value?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                }[]
                dest?: string
                status?: number
                /** @enum {string} */
                handle?: 'init' | 'finalize'
                mitigate?: {
                  /** @enum {string} */
                  action: 'deny' | 'challenge' | 'log' | 'bypass' | 'rate_limit'
                  rule_id: string
                  erl?: {
                    /** @enum {string} */
                    algo: 'fixed_window' | 'token_bucket'
                    window: number
                    limit: number
                    keys: string[]
                  }
                }
              }[]
              firewallSeawallEnabled?: boolean
              ja3Enabled?: boolean
              ja4Enabled?: boolean
            }
            oidcTokenConfig?: {
              enabled: boolean
            }
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * The Bitbucket Webhook for the project link could not be created
       * The Gitlab Webhook for the project link could not be created
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description A project with the provided name already exists. */
      409: {
        content: never
      }
    }
  }
  /**
   * Find a project by id or name
   * @description Get the information for a specific project by passing either the project `id` or `name` in the URL.
   */
  getProject: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string | boolean
      }
    }
    responses: {
      /** @description The project information */
      200: {
        content: {
          'application/json': {
            accountId: string
            analytics?: {
              id: string
              canceledAt?: number | null
              disabledAt: number
              enabledAt: number
              paidAt?: number
              sampleRatePercent?: number | null
              spendLimitInDollars?: number | null
            }
            speedInsights?: {
              id: string
              enabledAt?: number
              disabledAt?: number
              canceledAt?: number
              hasData?: boolean
              paidAt?: number
            }
            autoExposeSystemEnvs?: boolean
            autoAssignCustomDomains?: boolean
            autoAssignCustomDomainsUpdatedBy?: string
            buildCommand?: string | null
            commandForIgnoringBuildStep?: string | null
            connectConfigurationId?: string | null
            connectBuildsEnabled?: boolean
            createdAt?: number
            customerSupportCodeVisibility?: boolean
            crons?: {
              /** @description The time the feature was enabled for this project. Note: It enables automatically with the first Deployment that outputs cronjobs. */
              enabledAt: number
              /** @description The time the feature was disabled for this project. */
              disabledAt: number | null
              updatedAt: number
              /** @description The ID of the Deployment from which the definitions originated. */
              deploymentId: string | null
              definitions: {
                /**
                 * @description The hostname that should be used.
                 * @example vercel.com
                 */
                host: string
                /**
                 * @description The path that should be called for the cronjob.
                 * @example /api/crons/sync-something?hello=world
                 */
                path: string
                /**
                 * @description The cron expression.
                 * @example 0 0 * * *
                 */
                schedule: string
              }[]
            }
            dataCache?: {
              userDisabled: boolean
              storageSizeBytes?: number | null
              unlimited?: boolean
            }
            deploymentExpiration?: {
              expirationDays?: number
              expirationDaysProduction?: number
              expirationDaysCanceled?: number
              expirationDaysErrored?: number
              deploymentsToKeep?: number
            } | null
            devCommand?: string | null
            directoryListing: boolean
            installCommand?: string | null
            env?: {
              target?:
                | ('production' | 'preview' | 'development')[]
                | ('production' | 'preview' | 'development')
              /** @enum {string} */
              type: 'system' | 'encrypted' | 'plain' | 'sensitive' | 'secret'
              /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
              sunsetSecretId?: string
              id?: string
              key: string
              value: string
              configurationId?: string | null
              createdAt?: number
              updatedAt?: number
              createdBy?: string | null
              updatedBy?: string | null
              gitBranch?: string
              edgeConfigId?: string | null
              edgeConfigTokenId?: string | null
              contentHint?:
                | {
                    /** @enum {string} */
                    type: 'redis-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-read-only-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'blob-read-write-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url-non-pooling'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-prisma-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-user'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-host'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-password'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-database'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url-no-ssl'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'integration-store-secret'
                    storeId: string
                  }
                | null
              /** @description Similar to `contentHints`, but should not be exposed to the user. */
              internalContentHint?: {
                /** @enum {string} */
                type: 'flags-secret'
                /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                encryptedValue: string
              } | null
              /** @description Whether `value` is decrypted. */
              decrypted?: boolean
              comment?: string
              customEnvironmentIds?: string[]
            }[]
            /** @enum {string|null} */
            framework?:
              | 'blitzjs'
              | 'nextjs'
              | 'gatsby'
              | 'remix'
              | 'astro'
              | 'hexo'
              | 'eleventy'
              | 'docusaurus-2'
              | 'docusaurus'
              | 'preact'
              | 'solidstart-1'
              | 'solidstart'
              | 'dojo'
              | 'ember'
              | 'vue'
              | 'scully'
              | 'ionic-angular'
              | 'angular'
              | 'polymer'
              | 'svelte'
              | 'sveltekit'
              | 'sveltekit-1'
              | 'ionic-react'
              | 'create-react-app'
              | 'gridsome'
              | 'umijs'
              | 'sapper'
              | 'saber'
              | 'stencil'
              | 'nuxtjs'
              | 'redwoodjs'
              | 'hugo'
              | 'jekyll'
              | 'brunch'
              | 'middleman'
              | 'zola'
              | 'hydrogen'
              | 'vite'
              | 'vitepress'
              | 'vuepress'
              | 'parcel'
              | 'sanity'
              | 'storybook'
              | null
            gitForkProtection?: boolean
            gitLFS?: boolean
            id: string
            latestDeployments?: {
              alias?: string[]
              aliasAssigned?: number | boolean | null
              aliasError?: {
                code: string
                message: string
              } | null
              aliasFinal?: string | null
              automaticAliases?: string[]
              builds?: {
                use: string
                src?: string
                dest?: string
              }[]
              connectBuildsEnabled?: boolean
              connectConfigurationId?: string
              createdAt: number
              createdIn: string
              creator: {
                email: string
                githubLogin?: string
                gitlabLogin?: string
                uid: string
                username: string
              } | null
              deletedAt?: number
              deploymentHostname: string
              name: string
              forced?: boolean
              id: string
              meta?: {
                [key: string]: string
              }
              monorepoManager?: string | null
              /** @enum {string} */
              plan: 'pro' | 'enterprise' | 'hobby'
              private: boolean
              /** @enum {string} */
              readyState:
                | 'BUILDING'
                | 'ERROR'
                | 'INITIALIZING'
                | 'QUEUED'
                | 'READY'
                | 'CANCELED'
              /** @enum {string} */
              readySubstate?: 'STAGED' | 'PROMOTED'
              requestedAt?: number
              target?: string | null
              teamId?: string | null
              /** @enum {string} */
              type: 'LAMBDAS'
              url: string
              userId: string
              withCache?: boolean
              /** @enum {string} */
              checksConclusion?: 'succeeded' | 'failed' | 'skipped' | 'canceled'
              /** @enum {string} */
              checksState?: 'registered' | 'running' | 'completed'
              readyAt?: number
              buildingAt?: number
              /**
               * @description Whether or not preview comments are enabled for the deployment
               * @example false
               */
              previewCommentsEnabled?: boolean
              oidcTokenClaims?: {
                [key: string]: string | string[]
              }
            }[]
            link?: OneOf<
              [
                {
                  org?: string
                  repo?: string
                  repoId?: number
                  /** @enum {string} */
                  type?: 'github'
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
                {
                  projectId?: string
                  projectName?: string
                  projectNameWithNamespace?: string
                  projectNamespace?: string
                  projectUrl?: string
                  /** @enum {string} */
                  type?: 'gitlab'
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
                {
                  name?: string
                  slug?: string
                  owner?: string
                  /** @enum {string} */
                  type?: 'bitbucket'
                  uuid?: string
                  workspaceUuid?: string
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
              ]
            >
            name: string
            /** @enum {string} */
            nodeVersion:
              | '20.x'
              | '18.x'
              | '16.x'
              | '14.x'
              | '12.x'
              | '10.x'
              | '8.10.x'
            optionsAllowlist?: {
              paths: {
                value: string
              }[]
            } | null
            outputDirectory?: string | null
            passiveConnectConfigurationId?: string | null
            passwordProtection?: unknown
            productionDeploymentsFastLane?: boolean
            publicSource?: boolean | null
            rootDirectory?: string | null
            serverlessFunctionRegion?: string | null
            serverlessFunctionZeroConfigFailover?: boolean
            skewProtectionBoundaryAt?: number
            skewProtectionMaxAge?: number
            skipGitConnectDuringLink?: boolean
            sourceFilesOutsideRootDirectory?: boolean
            ssoProtection?: {
              /** @enum {string} */
              deploymentType:
                | 'all'
                | 'preview'
                | 'prod_deployment_urls_and_all_previews'
            } | null
            targets?: {
              [key: string]: string | string[]
            }
            transferCompletedAt?: number
            transferStartedAt?: number
            transferToAccountId?: string
            transferredFromAccountId?: string
            updatedAt?: number
            live?: boolean
            enablePreviewFeedback?: boolean | null
            permissions?: {
              accessGroup?: components['schemas']['ACLAction'][]
              aliasGlobal?: components['schemas']['ACLAction'][]
              analyticsSampling?: components['schemas']['ACLAction'][]
              analyticsUsage?: components['schemas']['ACLAction'][]
              auditLog?: components['schemas']['ACLAction'][]
              billingAddress?: components['schemas']['ACLAction'][]
              billingInformation?: components['schemas']['ACLAction'][]
              billingInvoice?: components['schemas']['ACLAction'][]
              billingInvoiceEmailRecipient?: components['schemas']['ACLAction'][]
              billingInvoiceLanguage?: components['schemas']['ACLAction'][]
              billingPlan?: components['schemas']['ACLAction'][]
              billingPurchaseOrder?: components['schemas']['ACLAction'][]
              billingTaxId?: components['schemas']['ACLAction'][]
              blob?: components['schemas']['ACLAction'][]
              budget?: components['schemas']['ACLAction'][]
              cacheArtifact?: components['schemas']['ACLAction'][]
              cacheArtifactUsageEvent?: components['schemas']['ACLAction'][]
              codeChecks?: components['schemas']['ACLAction'][]
              concurrentBuilds?: components['schemas']['ACLAction'][]
              connect?: components['schemas']['ACLAction'][]
              connectConfiguration?: components['schemas']['ACLAction'][]
              domain?: components['schemas']['ACLAction'][]
              domainAcceptDelegation?: components['schemas']['ACLAction'][]
              domainAuthCodes?: components['schemas']['ACLAction'][]
              domainCertificate?: components['schemas']['ACLAction'][]
              domainCheckConfig?: components['schemas']['ACLAction'][]
              domainMove?: components['schemas']['ACLAction'][]
              domainPurchase?: components['schemas']['ACLAction'][]
              domainRecord?: components['schemas']['ACLAction'][]
              domainTransferIn?: components['schemas']['ACLAction'][]
              event?: components['schemas']['ACLAction'][]
              ownEvent?: components['schemas']['ACLAction'][]
              sensitiveEnvironmentVariablePolicy?: components['schemas']['ACLAction'][]
              fileUpload?: components['schemas']['ACLAction'][]
              gitRepository?: components['schemas']['ACLAction'][]
              ipBlocking?: components['schemas']['ACLAction'][]
              integration?: components['schemas']['ACLAction'][]
              integrationAccount?: components['schemas']['ACLAction'][]
              integrationConfiguration?: components['schemas']['ACLAction'][]
              integrationConfigurationTransfer?: components['schemas']['ACLAction'][]
              integrationConfigurationProjects?: components['schemas']['ACLAction'][]
              integrationVercelConfigurationOverride?: components['schemas']['ACLAction'][]
              integrationResource?: components['schemas']['ACLAction'][]
              integrationStore?: components['schemas']['ACLAction'][]
              integrationEvent?: components['schemas']['ACLAction'][]
              integrationResourceSecrets?: components['schemas']['ACLAction'][]
              marketplaceBillingData?: components['schemas']['ACLAction'][]
              jobGlobal?: components['schemas']['ACLAction'][]
              logDrain?: components['schemas']['ACLAction'][]
              Monitoring?: components['schemas']['ACLAction'][]
              monitoringSettings?: components['schemas']['ACLAction'][]
              monitoringQuery?: components['schemas']['ACLAction'][]
              monitoringChart?: components['schemas']['ACLAction'][]
              monitoringAlert?: components['schemas']['ACLAction'][]
              notificationDeploymentFailed?: components['schemas']['ACLAction'][]
              notificationDomainConfiguration?: components['schemas']['ACLAction'][]
              notificationDomainExpire?: components['schemas']['ACLAction'][]
              notificationDomainMoved?: components['schemas']['ACLAction'][]
              notificationDomainPurchase?: components['schemas']['ACLAction'][]
              notificationDomainRenewal?: components['schemas']['ACLAction'][]
              notificationDomainTransfer?: components['schemas']['ACLAction'][]
              notificationDomainUnverified?: components['schemas']['ACLAction'][]
              NotificationMonitoringAlert?: components['schemas']['ACLAction'][]
              notificationPaymentFailed?: components['schemas']['ACLAction'][]
              notificationUsageAlert?: components['schemas']['ACLAction'][]
              notificationCustomerBudget?: components['schemas']['ACLAction'][]
              notificationStatementOfReasons?: components['schemas']['ACLAction'][]
              oauth2Connection?: components['schemas']['ACLAction'][]
              openTelemetryEndpoint?: components['schemas']['ACLAction'][]
              paymentMethod?: components['schemas']['ACLAction'][]
              permissions?: components['schemas']['ACLAction'][]
              postgres?: components['schemas']['ACLAction'][]
              previewDeploymentSuffix?: components['schemas']['ACLAction'][]
              proTrialOnboarding?: components['schemas']['ACLAction'][]
              sharedEnvVars?: components['schemas']['ACLAction'][]
              sharedEnvVarsProduction?: components['schemas']['ACLAction'][]
              space?: components['schemas']['ACLAction'][]
              spaceRun?: components['schemas']['ACLAction'][]
              passwordProtectionInvoiceItem?: components['schemas']['ACLAction'][]
              rateLimit?: components['schemas']['ACLAction'][]
              redis?: components['schemas']['ACLAction'][]
              repository?: components['schemas']['ACLAction'][]
              remoteCaching?: components['schemas']['ACLAction'][]
              samlConfig?: components['schemas']['ACLAction'][]
              secret?: components['schemas']['ACLAction'][]
              redisStoreTokenSet?: components['schemas']['ACLAction'][]
              blobStoreTokenSet?: components['schemas']['ACLAction'][]
              postgresStoreTokenSet?: components['schemas']['ACLAction'][]
              integrationStoreTokenSet?: components['schemas']['ACLAction'][]
              supportCase?: components['schemas']['ACLAction'][]
              supportCaseComment?: components['schemas']['ACLAction'][]
              dataCacheBillingSettings?: components['schemas']['ACLAction'][]
              team?: components['schemas']['ACLAction'][]
              teamAccessRequest?: components['schemas']['ACLAction'][]
              teamFellowMembership?: components['schemas']['ACLAction'][]
              teamGitExclusivity?: components['schemas']['ACLAction'][]
              teamInvite?: components['schemas']['ACLAction'][]
              teamInviteCode?: components['schemas']['ACLAction'][]
              teamJoin?: components['schemas']['ACLAction'][]
              teamOwnMembership?: components['schemas']['ACLAction'][]
              teamOwnMembershipDisconnectSAML?: components['schemas']['ACLAction'][]
              token?: components['schemas']['ACLAction'][]
              usage?: components['schemas']['ACLAction'][]
              usageCycle?: components['schemas']['ACLAction'][]
              user?: components['schemas']['ACLAction'][]
              userConnection?: components['schemas']['ACLAction'][]
              webAnalyticsPlan?: components['schemas']['ACLAction'][]
              webAuthn?: components['schemas']['ACLAction'][]
              edgeConfig?: components['schemas']['ACLAction'][]
              edgeConfigItem?: components['schemas']['ACLAction'][]
              edgeConfigSchema?: components['schemas']['ACLAction'][]
              edgeConfigToken?: components['schemas']['ACLAction'][]
              webhook?: components['schemas']['ACLAction'][]
              'webhook-event'?: components['schemas']['ACLAction'][]
              endpointVerification?: components['schemas']['ACLAction'][]
              projectTransferIn?: components['schemas']['ACLAction'][]
              oauth2Application?: components['schemas']['ACLAction'][]
              aliasProject?: components['schemas']['ACLAction'][]
              aliasProtectionBypass?: components['schemas']['ACLAction'][]
              productionAliasProtectionBypass?: components['schemas']['ACLAction'][]
              connectConfigurationLink?: components['schemas']['ACLAction'][]
              dataCacheNamespace?: components['schemas']['ACLAction'][]
              deployment?: components['schemas']['ACLAction'][]
              deploymentCheck?: components['schemas']['ACLAction'][]
              deploymentCheckPreview?: components['schemas']['ACLAction'][]
              deploymentCheckReRunFromProductionBranch?: components['schemas']['ACLAction'][]
              deploymentProductionGit?: components['schemas']['ACLAction'][]
              deploymentPreview?: components['schemas']['ACLAction'][]
              deploymentPrivate?: components['schemas']['ACLAction'][]
              deploymentPromote?: components['schemas']['ACLAction'][]
              deploymentRollback?: components['schemas']['ACLAction'][]
              environments?: components['schemas']['ACLAction'][]
              logs?: components['schemas']['ACLAction'][]
              logsPreset?: components['schemas']['ACLAction'][]
              passwordProtection?: components['schemas']['ACLAction'][]
              optionsAllowlist?: components['schemas']['ACLAction'][]
              job?: components['schemas']['ACLAction'][]
              project?: components['schemas']['ACLAction'][]
              projectAccessGroup?: components['schemas']['ACLAction'][]
              projectAnalyticsSampling?: components['schemas']['ACLAction'][]
              projectDeploymentHook?: components['schemas']['ACLAction'][]
              projectDomain?: components['schemas']['ACLAction'][]
              projectDomainMove?: components['schemas']['ACLAction'][]
              projectDomainCheckConfig?: components['schemas']['ACLAction'][]
              projectEnvVars?: components['schemas']['ACLAction'][]
              projectEnvVarsProduction?: components['schemas']['ACLAction'][]
              projectEnvVarsUnownedByIntegration?: components['schemas']['ACLAction'][]
              projectId?: components['schemas']['ACLAction'][]
              projectIntegrationConfiguration?: components['schemas']['ACLAction'][]
              projectLink?: components['schemas']['ACLAction'][]
              projectMember?: components['schemas']['ACLAction'][]
              projectMonitoring?: components['schemas']['ACLAction'][]
              projectPermissions?: components['schemas']['ACLAction'][]
              projectProductionBranch?: components['schemas']['ACLAction'][]
              projectTransfer?: components['schemas']['ACLAction'][]
              projectTransferOut?: components['schemas']['ACLAction'][]
              projectProtectionBypass?: components['schemas']['ACLAction'][]
              projectUsage?: components['schemas']['ACLAction'][]
              projectAnalyticsUsage?: components['schemas']['ACLAction'][]
              projectSupportCase?: components['schemas']['ACLAction'][]
              projectSupportCaseComment?: components['schemas']['ACLAction'][]
              projectDeploymentExpiration?: components['schemas']['ACLAction'][]
              seawallConfig?: components['schemas']['ACLAction'][]
              skewProtection?: components['schemas']['ACLAction'][]
              analytics?: components['schemas']['ACLAction'][]
              trustedIps?: components['schemas']['ACLAction'][]
              webAnalytics?: components['schemas']['ACLAction'][]
              sharedEnvVarConnection?: components['schemas']['ACLAction'][]
            }
            lastRollbackTarget?: unknown
            lastAliasRequest?: {
              fromDeploymentId: string
              toDeploymentId: string
              /** @enum {string} */
              jobStatus:
                | 'succeeded'
                | 'failed'
                | 'skipped'
                | 'pending'
                | 'in-progress'
              requestedAt: number
              /** @enum {string} */
              type: 'promote' | 'rollback'
            } | null
            hasFloatingAliases?: boolean
            protectionBypass?: {
              [key: string]: {
                createdAt: number
                createdBy: string
                /** @enum {string} */
                scope: 'automation-bypass'
              }
            }
            hasActiveBranches?: boolean
            trustedIps?: OneOf<
              [
                {
                  /** @enum {string} */
                  deploymentType:
                    | 'all'
                    | 'preview'
                    | 'prod_deployment_urls_and_all_previews'
                    | 'production'
                  addresses: {
                    value: string
                    note?: string
                  }[]
                  /** @enum {string} */
                  protectionMode: 'additional' | 'exclusive'
                },
                {
                  /** @enum {string} */
                  deploymentType:
                    | 'all'
                    | 'preview'
                    | 'prod_deployment_urls_and_all_previews'
                    | 'production'
                },
                null,
              ]
            >
            gitComments?: {
              /** @description Whether the Vercel bot should comment on PRs */
              onPullRequest: boolean
              /** @description Whether the Vercel bot should comment on commits */
              onCommit: boolean
            }
            paused?: boolean
            concurrencyBucketName?: string
            webAnalytics?: {
              id: string
              disabledAt?: number
              canceledAt?: number
              enabledAt?: number
              hasData?: boolean
            }
            security?: {
              attackModeEnabled?: boolean
              attackModeUpdatedAt?: number
              firewallEnabled?: boolean
              firewallUpdatedAt?: number
              attackModeActiveUntil?: number | null
              firewallConfigVersion?: number
              firewallRoutes?: {
                src?: OneOf<
                  [
                    string,
                    {
                      re?: string
                      eq?: string
                      neq?: string
                      inc?: string[]
                      ninc?: string[]
                      pre?: string
                      suf?: string
                      gt?: number
                      gte?: number
                      lt?: number
                      lte?: number
                    },
                  ]
                >
                has?: {
                  /** @enum {string} */
                  type:
                    | 'host'
                    | 'method'
                    | 'path'
                    | 'header'
                    | 'cookie'
                    | 'query'
                    | 'ip_address'
                    | 'protocol'
                    | 'scheme'
                    | 'region'
                  key?: string
                  value?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                }[]
                missing?: {
                  /** @enum {string} */
                  type:
                    | 'host'
                    | 'method'
                    | 'path'
                    | 'header'
                    | 'cookie'
                    | 'query'
                    | 'ip_address'
                    | 'protocol'
                    | 'scheme'
                    | 'region'
                  key?: string
                  value?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                }[]
                dest?: string
                status?: number
                /** @enum {string} */
                handle?: 'init' | 'finalize'
                mitigate?: {
                  /** @enum {string} */
                  action: 'deny' | 'challenge' | 'log' | 'bypass' | 'rate_limit'
                  rule_id: string
                  erl?: {
                    /** @enum {string} */
                    algo: 'fixed_window' | 'token_bucket'
                    window: number
                    limit: number
                    keys: string[]
                  }
                }
              }[]
              firewallSeawallEnabled?: boolean
              ja3Enabled?: boolean
              ja4Enabled?: boolean
            }
            oidcTokenConfig?: {
              enabled: boolean
            }
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Delete a Project
   * @description Delete a specific project by passing either the project `id` or `name` in the URL.
   */
  deleteProject: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
      }
    }
    responses: {
      /** @description The project was successfuly removed */
      204: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Update an existing project
   * @description Update the fields of a project using either its `name` or `id`.
   */
  updateProject: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          autoExposeSystemEnvs?: boolean
          autoAssignCustomDomains?: boolean
          autoAssignCustomDomainsUpdatedBy?: string
          /** @description The build command for this project. When `null` is used this value will be automatically detected */
          buildCommand?: string | null
          commandForIgnoringBuildStep?: string | null
          /** @description Specifies whether customer support can see git source for a deployment */
          customerSupportCodeVisibility?: boolean
          /** @description The dev command for this project. When `null` is used this value will be automatically detected */
          devCommand?: string | null
          directoryListing?: boolean
          /**
           * @description The framework that is being used for this project. When `null` is used no framework is selected
           * @enum {string|null}
           */
          framework?:
            | null
            | 'blitzjs'
            | 'nextjs'
            | 'gatsby'
            | 'remix'
            | 'astro'
            | 'hexo'
            | 'eleventy'
            | 'docusaurus-2'
            | 'docusaurus'
            | 'preact'
            | 'solidstart-1'
            | 'solidstart'
            | 'dojo'
            | 'ember'
            | 'vue'
            | 'scully'
            | 'ionic-angular'
            | 'angular'
            | 'polymer'
            | 'svelte'
            | 'sveltekit'
            | 'sveltekit-1'
            | 'ionic-react'
            | 'create-react-app'
            | 'gridsome'
            | 'umijs'
            | 'sapper'
            | 'saber'
            | 'stencil'
            | 'nuxtjs'
            | 'redwoodjs'
            | 'hugo'
            | 'jekyll'
            | 'brunch'
            | 'middleman'
            | 'zola'
            | 'hydrogen'
            | 'vite'
            | 'vitepress'
            | 'vuepress'
            | 'parcel'
            | 'sanity'
            | 'storybook'
          /** @description Specifies whether PRs from Git forks should require a team member's authorization before it can be deployed */
          gitForkProtection?: boolean
          /** @description Specifies whether Git LFS is enabled for this project. */
          gitLFS?: boolean
          /** @description The install command for this project. When `null` is used this value will be automatically detected */
          installCommand?: string | null
          /**
           * @description The desired name for the project
           * @example a-project-name
           */
          name?: string
          /** @enum {string} */
          nodeVersion?: '20.x' | '18.x' | '16.x' | '14.x' | '12.x' | '10.x'
          /** @description The output directory of the project. When `null` is used this value will be automatically detected */
          outputDirectory?: string | null
          /** @description Specifies whether the source code and logs of the deployments for this project should be public or not */
          publicSource?: boolean | null
          /** @description The name of a directory or relative path to the source code of your project. When `null` is used it will default to the project root */
          rootDirectory?: string | null
          /** @description The region to deploy Serverless Functions in this project */
          serverlessFunctionRegion?: string | null
          /** @description Specifies whether Zero Config Failover is enabled for this project. */
          serverlessFunctionZeroConfigFailover?: boolean
          /** @description Deployments created before this absolute datetime have Skew Protection disabled. Value is in milliseconds since epoch to match \"createdAt\" fields. */
          skewProtectionBoundaryAt?: number
          /** @description Deployments created before this rolling window have Skew Protection disabled. Value is in seconds to match \"revalidate\" fields. */
          skewProtectionMaxAge?: number
          /**
           * @deprecated
           * @description Opts-out of the message prompting a CLI user to connect a Git repository in `vercel link`.
           */
          skipGitConnectDuringLink?: boolean
          /** @description Indicates if there are source files outside of the root directory */
          sourceFilesOutsideRootDirectory?: boolean
          /** @description Opt-in to Preview comments on the project level */
          enablePreviewFeedback?: boolean | null
          /** @description Allows to protect project deployments with a password */
          passwordProtection?: {
            /**
             * @description Specify if the password will apply to every Deployment Target or just Preview
             * @enum {string}
             */
            deploymentType:
              | 'all'
              | 'preview'
              | 'prod_deployment_urls_and_all_previews'
            /** @description The password that will be used to protect Project Deployments */
            password?: string | null
          } | null
          /** @description Ensures visitors to your Preview Deployments are logged into Vercel and have a minimum of Viewer access on your team */
          ssoProtection?: {
            /**
             * @description Specify if the Vercel Authentication (SSO Protection) will apply to every Deployment Target or just Preview
             * @default preview
             * @enum {string}
             */
            deploymentType:
              | 'all'
              | 'preview'
              | 'prod_deployment_urls_and_all_previews'
          } | null
          /** @description Restricts access to deployments based on the incoming request IP address */
          trustedIps?: {
            /**
             * @description Specify if the Trusted IPs will apply to every Deployment Target or just Preview
             * @enum {string}
             */
            deploymentType:
              | 'all'
              | 'preview'
              | 'production'
              | 'prod_deployment_urls_and_all_previews'
            addresses: {
              /** @description The IP addresses that are allowlisted. Supports IPv4 addresses and CIDR notations. IPv6 is not supported */
              value: string
              /** @description An optional note explaining what the IP address or subnet is used for */
              note?: string
            }[]
            /**
             * @description exclusive: ip match is enough to bypass deployment protection (regardless of other settings). additional: ip must match + any other protection should be also provided (password, vercel auth, shareable link, automation bypass header, automation bypass query param)
             * @enum {string}
             */
            protectionMode: 'exclusive' | 'additional'
          } | null
          /** @description Specify a list of paths that should not be protected by Deployment Protection to enable Cors preflight requests */
          optionsAllowlist?: {
            paths: {
              /** @description The regex path that should not be protected by Deployment Protection */
              value: string
            }[]
          } | null
        }
      }
    }
    responses: {
      /** @description The project was successfully updated */
      200: {
        content: {
          'application/json': {
            accountId: string
            analytics?: {
              id: string
              canceledAt?: number | null
              disabledAt: number
              enabledAt: number
              paidAt?: number
              sampleRatePercent?: number | null
              spendLimitInDollars?: number | null
            }
            speedInsights?: {
              id: string
              enabledAt?: number
              disabledAt?: number
              canceledAt?: number
              hasData?: boolean
              paidAt?: number
            }
            autoExposeSystemEnvs?: boolean
            autoAssignCustomDomains?: boolean
            autoAssignCustomDomainsUpdatedBy?: string
            buildCommand?: string | null
            commandForIgnoringBuildStep?: string | null
            connectConfigurationId?: string | null
            connectBuildsEnabled?: boolean
            createdAt?: number
            customerSupportCodeVisibility?: boolean
            crons?: {
              /** @description The time the feature was enabled for this project. Note: It enables automatically with the first Deployment that outputs cronjobs. */
              enabledAt: number
              /** @description The time the feature was disabled for this project. */
              disabledAt: number | null
              updatedAt: number
              /** @description The ID of the Deployment from which the definitions originated. */
              deploymentId: string | null
              definitions: {
                /**
                 * @description The hostname that should be used.
                 * @example vercel.com
                 */
                host: string
                /**
                 * @description The path that should be called for the cronjob.
                 * @example /api/crons/sync-something?hello=world
                 */
                path: string
                /**
                 * @description The cron expression.
                 * @example 0 0 * * *
                 */
                schedule: string
              }[]
            }
            dataCache?: {
              userDisabled: boolean
              storageSizeBytes?: number | null
              unlimited?: boolean
            }
            deploymentExpiration?: {
              expirationDays?: number
              expirationDaysProduction?: number
              expirationDaysCanceled?: number
              expirationDaysErrored?: number
              deploymentsToKeep?: number
            } | null
            devCommand?: string | null
            directoryListing: boolean
            installCommand?: string | null
            env?: {
              target?:
                | ('production' | 'preview' | 'development')[]
                | ('production' | 'preview' | 'development')
              /** @enum {string} */
              type: 'secret' | 'system' | 'encrypted' | 'plain' | 'sensitive'
              /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
              sunsetSecretId?: string
              id?: string
              key: string
              value: string
              configurationId?: string | null
              createdAt?: number
              updatedAt?: number
              createdBy?: string | null
              updatedBy?: string | null
              gitBranch?: string
              edgeConfigId?: string | null
              edgeConfigTokenId?: string | null
              contentHint?:
                | {
                    /** @enum {string} */
                    type: 'redis-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'redis-rest-api-read-only-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'blob-read-write-token'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url-non-pooling'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-prisma-url'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-user'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-host'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-password'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-database'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'postgres-url-no-ssl'
                    storeId: string
                  }
                | {
                    /** @enum {string} */
                    type: 'integration-store-secret'
                    storeId: string
                  }
                | null
              /** @description Similar to `contentHints`, but should not be exposed to the user. */
              internalContentHint?: {
                /** @enum {string} */
                type: 'flags-secret'
                /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                encryptedValue: string
              } | null
              /** @description Whether `value` is decrypted. */
              decrypted?: boolean
              comment?: string
              customEnvironmentIds?: string[]
            }[]
            /** @enum {string|null} */
            framework?:
              | 'blitzjs'
              | 'nextjs'
              | 'gatsby'
              | 'remix'
              | 'astro'
              | 'hexo'
              | 'eleventy'
              | 'docusaurus-2'
              | 'docusaurus'
              | 'preact'
              | 'solidstart-1'
              | 'solidstart'
              | 'dojo'
              | 'ember'
              | 'vue'
              | 'scully'
              | 'ionic-angular'
              | 'angular'
              | 'polymer'
              | 'svelte'
              | 'sveltekit'
              | 'sveltekit-1'
              | 'ionic-react'
              | 'create-react-app'
              | 'gridsome'
              | 'umijs'
              | 'sapper'
              | 'saber'
              | 'stencil'
              | 'nuxtjs'
              | 'redwoodjs'
              | 'hugo'
              | 'jekyll'
              | 'brunch'
              | 'middleman'
              | 'zola'
              | 'hydrogen'
              | 'vite'
              | 'vitepress'
              | 'vuepress'
              | 'parcel'
              | 'sanity'
              | 'storybook'
              | null
            gitForkProtection?: boolean
            gitLFS?: boolean
            id: string
            latestDeployments?: {
              alias?: string[]
              aliasAssigned?: number | boolean | null
              aliasError?: {
                code: string
                message: string
              } | null
              aliasFinal?: string | null
              automaticAliases?: string[]
              builds?: {
                use: string
                src?: string
                dest?: string
              }[]
              connectBuildsEnabled?: boolean
              connectConfigurationId?: string
              createdAt: number
              createdIn: string
              creator: {
                email: string
                githubLogin?: string
                gitlabLogin?: string
                uid: string
                username: string
              } | null
              deletedAt?: number
              deploymentHostname: string
              name: string
              forced?: boolean
              id: string
              meta?: {
                [key: string]: string
              }
              monorepoManager?: string | null
              /** @enum {string} */
              plan: 'pro' | 'enterprise' | 'hobby'
              private: boolean
              /** @enum {string} */
              readyState:
                | 'BUILDING'
                | 'ERROR'
                | 'INITIALIZING'
                | 'QUEUED'
                | 'READY'
                | 'CANCELED'
              /** @enum {string} */
              readySubstate?: 'STAGED' | 'PROMOTED'
              requestedAt?: number
              target?: string | null
              teamId?: string | null
              /** @enum {string} */
              type: 'LAMBDAS'
              url: string
              userId: string
              withCache?: boolean
              /** @enum {string} */
              checksConclusion?: 'succeeded' | 'failed' | 'skipped' | 'canceled'
              /** @enum {string} */
              checksState?: 'registered' | 'running' | 'completed'
              readyAt?: number
              buildingAt?: number
              /**
               * @description Whether or not preview comments are enabled for the deployment
               * @example false
               */
              previewCommentsEnabled?: boolean
              oidcTokenClaims?: {
                [key: string]: string | string[]
              }
            }[]
            link?: OneOf<
              [
                {
                  org?: string
                  repo?: string
                  repoId?: number
                  /** @enum {string} */
                  type?: 'github'
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
                {
                  projectId?: string
                  projectName?: string
                  projectNameWithNamespace?: string
                  projectNamespace?: string
                  projectUrl?: string
                  /** @enum {string} */
                  type?: 'gitlab'
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
                {
                  name?: string
                  slug?: string
                  owner?: string
                  /** @enum {string} */
                  type?: 'bitbucket'
                  uuid?: string
                  workspaceUuid?: string
                  createdAt?: number
                  deployHooks: {
                    createdAt?: number
                    id: string
                    name: string
                    ref: string
                    url: string
                  }[]
                  gitCredentialId?: string
                  updatedAt?: number
                  sourceless?: boolean
                  productionBranch?: string
                },
              ]
            >
            name: string
            /** @enum {string} */
            nodeVersion:
              | '20.x'
              | '18.x'
              | '16.x'
              | '14.x'
              | '12.x'
              | '10.x'
              | '8.10.x'
            optionsAllowlist?: {
              paths: {
                value: string
              }[]
            } | null
            outputDirectory?: string | null
            passiveConnectConfigurationId?: string | null
            passwordProtection?: unknown
            productionDeploymentsFastLane?: boolean
            publicSource?: boolean | null
            rootDirectory?: string | null
            serverlessFunctionRegion?: string | null
            serverlessFunctionZeroConfigFailover?: boolean
            skewProtectionBoundaryAt?: number
            skewProtectionMaxAge?: number
            skipGitConnectDuringLink?: boolean
            sourceFilesOutsideRootDirectory?: boolean
            ssoProtection?: {
              /** @enum {string} */
              deploymentType:
                | 'all'
                | 'preview'
                | 'prod_deployment_urls_and_all_previews'
            } | null
            targets?: {
              [key: string]: string | string[]
            }
            transferCompletedAt?: number
            transferStartedAt?: number
            transferToAccountId?: string
            transferredFromAccountId?: string
            updatedAt?: number
            live?: boolean
            enablePreviewFeedback?: boolean | null
            permissions?: {
              accessGroup?: components['schemas']['ACLAction'][]
              aliasGlobal?: components['schemas']['ACLAction'][]
              analyticsSampling?: components['schemas']['ACLAction'][]
              analyticsUsage?: components['schemas']['ACLAction'][]
              auditLog?: components['schemas']['ACLAction'][]
              billingAddress?: components['schemas']['ACLAction'][]
              billingInformation?: components['schemas']['ACLAction'][]
              billingInvoice?: components['schemas']['ACLAction'][]
              billingInvoiceEmailRecipient?: components['schemas']['ACLAction'][]
              billingInvoiceLanguage?: components['schemas']['ACLAction'][]
              billingPlan?: components['schemas']['ACLAction'][]
              billingPurchaseOrder?: components['schemas']['ACLAction'][]
              billingTaxId?: components['schemas']['ACLAction'][]
              blob?: components['schemas']['ACLAction'][]
              budget?: components['schemas']['ACLAction'][]
              cacheArtifact?: components['schemas']['ACLAction'][]
              cacheArtifactUsageEvent?: components['schemas']['ACLAction'][]
              codeChecks?: components['schemas']['ACLAction'][]
              concurrentBuilds?: components['schemas']['ACLAction'][]
              connect?: components['schemas']['ACLAction'][]
              connectConfiguration?: components['schemas']['ACLAction'][]
              domain?: components['schemas']['ACLAction'][]
              domainAcceptDelegation?: components['schemas']['ACLAction'][]
              domainAuthCodes?: components['schemas']['ACLAction'][]
              domainCertificate?: components['schemas']['ACLAction'][]
              domainCheckConfig?: components['schemas']['ACLAction'][]
              domainMove?: components['schemas']['ACLAction'][]
              domainPurchase?: components['schemas']['ACLAction'][]
              domainRecord?: components['schemas']['ACLAction'][]
              domainTransferIn?: components['schemas']['ACLAction'][]
              event?: components['schemas']['ACLAction'][]
              ownEvent?: components['schemas']['ACLAction'][]
              sensitiveEnvironmentVariablePolicy?: components['schemas']['ACLAction'][]
              fileUpload?: components['schemas']['ACLAction'][]
              gitRepository?: components['schemas']['ACLAction'][]
              ipBlocking?: components['schemas']['ACLAction'][]
              integration?: components['schemas']['ACLAction'][]
              integrationAccount?: components['schemas']['ACLAction'][]
              integrationConfiguration?: components['schemas']['ACLAction'][]
              integrationConfigurationTransfer?: components['schemas']['ACLAction'][]
              integrationConfigurationProjects?: components['schemas']['ACLAction'][]
              integrationVercelConfigurationOverride?: components['schemas']['ACLAction'][]
              integrationResource?: components['schemas']['ACLAction'][]
              integrationStore?: components['schemas']['ACLAction'][]
              integrationEvent?: components['schemas']['ACLAction'][]
              integrationResourceSecrets?: components['schemas']['ACLAction'][]
              marketplaceBillingData?: components['schemas']['ACLAction'][]
              jobGlobal?: components['schemas']['ACLAction'][]
              logDrain?: components['schemas']['ACLAction'][]
              Monitoring?: components['schemas']['ACLAction'][]
              monitoringSettings?: components['schemas']['ACLAction'][]
              monitoringQuery?: components['schemas']['ACLAction'][]
              monitoringChart?: components['schemas']['ACLAction'][]
              monitoringAlert?: components['schemas']['ACLAction'][]
              notificationDeploymentFailed?: components['schemas']['ACLAction'][]
              notificationDomainConfiguration?: components['schemas']['ACLAction'][]
              notificationDomainExpire?: components['schemas']['ACLAction'][]
              notificationDomainMoved?: components['schemas']['ACLAction'][]
              notificationDomainPurchase?: components['schemas']['ACLAction'][]
              notificationDomainRenewal?: components['schemas']['ACLAction'][]
              notificationDomainTransfer?: components['schemas']['ACLAction'][]
              notificationDomainUnverified?: components['schemas']['ACLAction'][]
              NotificationMonitoringAlert?: components['schemas']['ACLAction'][]
              notificationPaymentFailed?: components['schemas']['ACLAction'][]
              notificationUsageAlert?: components['schemas']['ACLAction'][]
              notificationCustomerBudget?: components['schemas']['ACLAction'][]
              notificationStatementOfReasons?: components['schemas']['ACLAction'][]
              oauth2Connection?: components['schemas']['ACLAction'][]
              openTelemetryEndpoint?: components['schemas']['ACLAction'][]
              paymentMethod?: components['schemas']['ACLAction'][]
              permissions?: components['schemas']['ACLAction'][]
              postgres?: components['schemas']['ACLAction'][]
              previewDeploymentSuffix?: components['schemas']['ACLAction'][]
              proTrialOnboarding?: components['schemas']['ACLAction'][]
              sharedEnvVars?: components['schemas']['ACLAction'][]
              sharedEnvVarsProduction?: components['schemas']['ACLAction'][]
              space?: components['schemas']['ACLAction'][]
              spaceRun?: components['schemas']['ACLAction'][]
              passwordProtectionInvoiceItem?: components['schemas']['ACLAction'][]
              rateLimit?: components['schemas']['ACLAction'][]
              redis?: components['schemas']['ACLAction'][]
              repository?: components['schemas']['ACLAction'][]
              remoteCaching?: components['schemas']['ACLAction'][]
              samlConfig?: components['schemas']['ACLAction'][]
              secret?: components['schemas']['ACLAction'][]
              redisStoreTokenSet?: components['schemas']['ACLAction'][]
              blobStoreTokenSet?: components['schemas']['ACLAction'][]
              postgresStoreTokenSet?: components['schemas']['ACLAction'][]
              integrationStoreTokenSet?: components['schemas']['ACLAction'][]
              supportCase?: components['schemas']['ACLAction'][]
              supportCaseComment?: components['schemas']['ACLAction'][]
              dataCacheBillingSettings?: components['schemas']['ACLAction'][]
              team?: components['schemas']['ACLAction'][]
              teamAccessRequest?: components['schemas']['ACLAction'][]
              teamFellowMembership?: components['schemas']['ACLAction'][]
              teamGitExclusivity?: components['schemas']['ACLAction'][]
              teamInvite?: components['schemas']['ACLAction'][]
              teamInviteCode?: components['schemas']['ACLAction'][]
              teamJoin?: components['schemas']['ACLAction'][]
              teamOwnMembership?: components['schemas']['ACLAction'][]
              teamOwnMembershipDisconnectSAML?: components['schemas']['ACLAction'][]
              token?: components['schemas']['ACLAction'][]
              usage?: components['schemas']['ACLAction'][]
              usageCycle?: components['schemas']['ACLAction'][]
              user?: components['schemas']['ACLAction'][]
              userConnection?: components['schemas']['ACLAction'][]
              webAnalyticsPlan?: components['schemas']['ACLAction'][]
              webAuthn?: components['schemas']['ACLAction'][]
              edgeConfig?: components['schemas']['ACLAction'][]
              edgeConfigItem?: components['schemas']['ACLAction'][]
              edgeConfigSchema?: components['schemas']['ACLAction'][]
              edgeConfigToken?: components['schemas']['ACLAction'][]
              webhook?: components['schemas']['ACLAction'][]
              'webhook-event'?: components['schemas']['ACLAction'][]
              endpointVerification?: components['schemas']['ACLAction'][]
              projectTransferIn?: components['schemas']['ACLAction'][]
              oauth2Application?: components['schemas']['ACLAction'][]
              aliasProject?: components['schemas']['ACLAction'][]
              aliasProtectionBypass?: components['schemas']['ACLAction'][]
              productionAliasProtectionBypass?: components['schemas']['ACLAction'][]
              connectConfigurationLink?: components['schemas']['ACLAction'][]
              dataCacheNamespace?: components['schemas']['ACLAction'][]
              deployment?: components['schemas']['ACLAction'][]
              deploymentCheck?: components['schemas']['ACLAction'][]
              deploymentCheckPreview?: components['schemas']['ACLAction'][]
              deploymentCheckReRunFromProductionBranch?: components['schemas']['ACLAction'][]
              deploymentProductionGit?: components['schemas']['ACLAction'][]
              deploymentPreview?: components['schemas']['ACLAction'][]
              deploymentPrivate?: components['schemas']['ACLAction'][]
              deploymentPromote?: components['schemas']['ACLAction'][]
              deploymentRollback?: components['schemas']['ACLAction'][]
              environments?: components['schemas']['ACLAction'][]
              logs?: components['schemas']['ACLAction'][]
              logsPreset?: components['schemas']['ACLAction'][]
              passwordProtection?: components['schemas']['ACLAction'][]
              optionsAllowlist?: components['schemas']['ACLAction'][]
              job?: components['schemas']['ACLAction'][]
              project?: components['schemas']['ACLAction'][]
              projectAccessGroup?: components['schemas']['ACLAction'][]
              projectAnalyticsSampling?: components['schemas']['ACLAction'][]
              projectDeploymentHook?: components['schemas']['ACLAction'][]
              projectDomain?: components['schemas']['ACLAction'][]
              projectDomainMove?: components['schemas']['ACLAction'][]
              projectDomainCheckConfig?: components['schemas']['ACLAction'][]
              projectEnvVars?: components['schemas']['ACLAction'][]
              projectEnvVarsProduction?: components['schemas']['ACLAction'][]
              projectEnvVarsUnownedByIntegration?: components['schemas']['ACLAction'][]
              projectId?: components['schemas']['ACLAction'][]
              projectIntegrationConfiguration?: components['schemas']['ACLAction'][]
              projectLink?: components['schemas']['ACLAction'][]
              projectMember?: components['schemas']['ACLAction'][]
              projectMonitoring?: components['schemas']['ACLAction'][]
              projectPermissions?: components['schemas']['ACLAction'][]
              projectProductionBranch?: components['schemas']['ACLAction'][]
              projectTransfer?: components['schemas']['ACLAction'][]
              projectTransferOut?: components['schemas']['ACLAction'][]
              projectProtectionBypass?: components['schemas']['ACLAction'][]
              projectUsage?: components['schemas']['ACLAction'][]
              projectAnalyticsUsage?: components['schemas']['ACLAction'][]
              projectSupportCase?: components['schemas']['ACLAction'][]
              projectSupportCaseComment?: components['schemas']['ACLAction'][]
              projectDeploymentExpiration?: components['schemas']['ACLAction'][]
              seawallConfig?: components['schemas']['ACLAction'][]
              skewProtection?: components['schemas']['ACLAction'][]
              analytics?: components['schemas']['ACLAction'][]
              trustedIps?: components['schemas']['ACLAction'][]
              webAnalytics?: components['schemas']['ACLAction'][]
              sharedEnvVarConnection?: components['schemas']['ACLAction'][]
            }
            lastRollbackTarget?: unknown
            lastAliasRequest?: {
              fromDeploymentId: string
              toDeploymentId: string
              /** @enum {string} */
              jobStatus:
                | 'succeeded'
                | 'failed'
                | 'skipped'
                | 'pending'
                | 'in-progress'
              requestedAt: number
              /** @enum {string} */
              type: 'promote' | 'rollback'
            } | null
            hasFloatingAliases?: boolean
            protectionBypass?: {
              [key: string]: {
                createdAt: number
                createdBy: string
                /** @enum {string} */
                scope: 'automation-bypass'
              }
            }
            hasActiveBranches?: boolean
            trustedIps?: OneOf<
              [
                {
                  /** @enum {string} */
                  deploymentType:
                    | 'all'
                    | 'preview'
                    | 'prod_deployment_urls_and_all_previews'
                    | 'production'
                  addresses: {
                    value: string
                    note?: string
                  }[]
                  /** @enum {string} */
                  protectionMode: 'exclusive' | 'additional'
                },
                {
                  /** @enum {string} */
                  deploymentType:
                    | 'all'
                    | 'preview'
                    | 'prod_deployment_urls_and_all_previews'
                    | 'production'
                },
                null,
              ]
            >
            gitComments?: {
              /** @description Whether the Vercel bot should comment on PRs */
              onPullRequest: boolean
              /** @description Whether the Vercel bot should comment on commits */
              onCommit: boolean
            }
            paused?: boolean
            concurrencyBucketName?: string
            webAnalytics?: {
              id: string
              disabledAt?: number
              canceledAt?: number
              enabledAt?: number
              hasData?: boolean
            }
            security?: {
              attackModeEnabled?: boolean
              attackModeUpdatedAt?: number
              firewallEnabled?: boolean
              firewallUpdatedAt?: number
              attackModeActiveUntil?: number | null
              firewallConfigVersion?: number
              firewallRoutes?: {
                src?: OneOf<
                  [
                    string,
                    {
                      re?: string
                      eq?: string
                      neq?: string
                      inc?: string[]
                      ninc?: string[]
                      pre?: string
                      suf?: string
                      gt?: number
                      gte?: number
                      lt?: number
                      lte?: number
                    },
                  ]
                >
                has?: {
                  /** @enum {string} */
                  type:
                    | 'host'
                    | 'method'
                    | 'path'
                    | 'header'
                    | 'cookie'
                    | 'query'
                    | 'ip_address'
                    | 'protocol'
                    | 'scheme'
                    | 'region'
                  key?: string
                  value?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                }[]
                missing?: {
                  /** @enum {string} */
                  type:
                    | 'host'
                    | 'method'
                    | 'path'
                    | 'header'
                    | 'cookie'
                    | 'query'
                    | 'ip_address'
                    | 'protocol'
                    | 'scheme'
                    | 'region'
                  key?: string
                  value?: OneOf<
                    [
                      string,
                      {
                        re?: string
                        eq?: string
                        neq?: string
                        inc?: string[]
                        ninc?: string[]
                        pre?: string
                        suf?: string
                        gt?: number
                        gte?: number
                        lt?: number
                        lte?: number
                      },
                    ]
                  >
                }[]
                dest?: string
                status?: number
                /** @enum {string} */
                handle?: 'init' | 'finalize'
                mitigate?: {
                  /** @enum {string} */
                  action: 'deny' | 'challenge' | 'log' | 'bypass' | 'rate_limit'
                  rule_id: string
                  erl?: {
                    /** @enum {string} */
                    algo: 'fixed_window' | 'token_bucket'
                    window: number
                    limit: number
                    keys: string[]
                  }
                }
              }[]
              firewallSeawallEnabled?: boolean
              ja3Enabled?: boolean
              ja4Enabled?: boolean
            }
            oidcTokenConfig?: {
              enabled: boolean
            }
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * Trusted IPs is only accessible for enterprise customers
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /**
       * @description The provided name for the project is already being used
       * The project is currently being transferred.
       */
      409: {
        content: never
      }
      /**
       * @description Owner does not have protection add-on
       * Advanced Deployment Protection is not available for the user plan
       */
      428: {
        content: never
      }
    }
  }
  /**
   * Retrieve project domains by project by id or name
   * @description Retrieve the domains associated with a given project by passing either the project `id` or `name` in the URL.
   */
  getProjectDomains: {
    parameters: {
      query?: {
        /** @description Filters only production domains when set to `true`. */
        production?: 'true' | 'false'
        /** @description Filters domains based on specific branch. */
        gitBranch?: string
        /** @description Excludes redirect project domains when \"false\". Includes redirect project domains when \"true\" (default). */
        redirects?: 'true' | 'false'
        /** @description Filters domains based on their redirect target. */
        redirect?: string
        /** @description Filters domains based on their verification status. */
        verified?: 'true' | 'false'
        /** @description Maximum number of domains to list from a request (max 100). */
        limit?: number
        /** @description Get domains created after this JavaScript timestamp. */
        since?: number
        /** @description Get domains created before this JavaScript timestamp. */
        until?: number
        /** @description Domains sort order by createdAt */
        order?: 'ASC' | 'DESC'
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string | number
      }
    }
    responses: {
      /** @description Successful response retrieving a list of domains */
      200: {
        content: {
          'application/json': {
            domains: {
              name: string
              apexName: string
              projectId: string
              redirect?: string | null
              /** @enum {number|null} */
              redirectStatusCode?: 307 | 301 | 302 | 308 | null
              gitBranch?: string | null
              customEnvironmentId?: string | null
              updatedAt?: number
              createdAt?: number
              /** @description `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed. */
              verified: boolean
              /** @description A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`. */
              verification?: {
                type: string
                domain: string
                value: string
                reason: string
              }[]
            }[]
            pagination: components['schemas']['Pagination']
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Get a project domain
   * @description Get project domain by project id/name and domain name.
   */
  getProjectDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
        /** @description The project domain name */
        domain: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            name: string
            apexName: string
            projectId: string
            redirect?: string | null
            /** @enum {number|null} */
            redirectStatusCode?: 307 | 301 | 302 | 308 | null
            gitBranch?: string | null
            customEnvironmentId?: string | null
            updatedAt?: number
            createdAt?: number
            /** @description `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed. */
            verified: boolean
            /** @description A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`. */
            verification?: {
              type: string
              domain: string
              value: string
              reason: string
            }[]
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Remove a domain from a project
   * @description Remove a domain from a project by passing the domain name and by specifying the project by either passing the project `id` or `name` in the URL.
   */
  removeProjectDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
        /** @description The project domain name */
        domain: string
      }
    }
    responses: {
      /** @description The domain was succesfully removed from the project */
      200: {
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      /** @description The project is currently being transferred */
      409: {
        content: never
      }
    }
  }
  /**
   * Update a project domain
   * @description Update a project domain's configuration, including the name, git branch and redirect of the domain.
   */
  updateProjectDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
        /** @description The project domain name */
        domain: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description Git branch to link the project domain
           * @example null
           */
          gitBranch?: string | null
          /** @description The unique custom environment identifier within the project */
          customEnvironmentId?: string
          /**
           * @description Target destination domain for redirect
           * @example foobar.com
           */
          redirect?: string | null
          /**
           * @description Status code for domain redirect
           * @example 307
           * @enum {integer|null}
           */
          redirectStatusCode?: null | 301 | 302 | 307 | 308
        }
      }
    }
    responses: {
      /** @description The domain was updated successfuly */
      200: {
        content: {
          'application/json': {
            name: string
            apexName: string
            projectId: string
            redirect?: string | null
            /** @enum {number|null} */
            redirectStatusCode?: 307 | 301 | 302 | 308 | null
            gitBranch?: string | null
            customEnvironmentId?: string | null
            updatedAt?: number
            createdAt?: number
            /** @description `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed. */
            verified: boolean
            /** @description A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`. */
            verification?: {
              type: string
              domain: string
              value: string
              reason: string
            }[]
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * The domain redirect is not valid
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The project is currently being transferred */
      409: {
        content: never
      }
    }
  }
  /**
   * Add a domain to a project
   * @description Add a domain to the project by passing its domain name and by specifying the project by either passing the project `id` or `name` in the URL. If the domain is not yet verified to be used on this project, the request will return `verified = false`, and the domain will need to be verified according to the `verification` challenge via `POST /projects/:idOrName/domains/:domain/verify`. If the domain already exists on the project, the request will fail with a `400` status code.
   */
  addProjectDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The project domain name
           * @example www.example.com
           */
          name: string
          /**
           * @description Git branch to link the project domain
           * @example null
           */
          gitBranch?: string | null
          /**
           * @description Target destination domain for redirect
           * @example foobar.com
           */
          redirect?: string | null
          /**
           * @description Status code for domain redirect
           * @example 307
           * @enum {integer|null}
           */
          redirectStatusCode?: null | 301 | 302 | 307 | 308
        }
      }
    }
    responses: {
      /** @description The domain was successfully added to the project */
      200: {
        content: {
          'application/json': {
            name: string
            apexName: string
            projectId: string
            redirect?: string | null
            /** @enum {number|null} */
            redirectStatusCode?: 307 | 301 | 302 | 308 | null
            gitBranch?: string | null
            customEnvironmentId?: string | null
            updatedAt?: number
            createdAt?: number
            /** @description `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed. */
            verified: boolean
            /** @description A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`. */
            verification?: {
              type: string
              domain: string
              value: string
              reason: string
            }[]
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * The domain is not valid
       * You can't set both a git branch and a redirect for the domain
       * The domain can not be added because the latest production deployment for the project was not successful
       * The domain redirect is not valid
       * A domain cannot redirect to itself
       * You can not set the production branch as a branch for your domain
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * You don't have access to the domain you are adding
       */
      403: {
        content: never
      }
      /**
       * @description The domain is already assigned to another Vercel project
       * Cannot create project domain since owner already has `domain` on their account, but it's not verified yet.
       * Cannot create project domain since owner already has `domain` on their account, and it's verified.
       * The domain is not allowed to be used
       * The project is currently being transferred
       */
      409: {
        content: never
      }
    }
  }
  /**
   * Verify project domain
   * @description Attempts to verify a project domain with `verified = false` by checking the correctness of the project domain's `verification` challenge.
   */
  verifyProjectDomain: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
        /** @description The domain name you want to verify */
        domain: string
      }
    }
    responses: {
      /**
       * @description The project domain was verified successfully
       * Domain is already verified
       */
      200: {
        content: {
          'application/json': {
            name: string
            apexName: string
            projectId: string
            redirect?: string | null
            /** @enum {number|null} */
            redirectStatusCode?: 307 | 301 | 302 | 308 | null
            gitBranch?: string | null
            customEnvironmentId?: string | null
            updatedAt?: number
            createdAt?: number
            /** @description `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed. */
            verified: boolean
            /** @description A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`. */
            verification?: {
              type: string
              domain: string
              value: string
              reason: string
            }[]
          }
        }
      }
      /**
       * @description One of the provided values in the request query is invalid.
       * There is an existing TXT record on the domain verifying it for another project
       * The domain does not have a TXT record that attempts to verify the project domain
       * The TXT record on the domain does not match the expected challenge for the project domain
       * Project domain is not assigned to project
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Retrieve the environment variables of a project by id or name
   * @description Retrieve the environment variables for a given project by passing either the project `id` or `name` in the URL.
   */
  filterProjectEnvs: {
    parameters: {
      query?: {
        /** @description If defined, the git branch of the environment variable to filter the results (must have target=preview) */
        gitBranch?: string
        /** @description If true, the environment variable value will be decrypted */
        decrypt?: 'true' | 'false'
        /** @description The source that is calling the endpoint. */
        source?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
      }
    }
    responses: {
      /** @description The list of environment variables for the given project */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                target?:
                  | ('production' | 'preview' | 'development')[]
                  | ('production' | 'preview' | 'development')
                /** @enum {string} */
                type?: 'system' | 'encrypted' | 'plain' | 'sensitive' | 'secret'
                /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                sunsetSecretId?: string
                id?: string
                key?: string
                value?: string
                configurationId?: string | null
                createdAt?: number
                updatedAt?: number
                createdBy?: string | null
                updatedBy?: string | null
                gitBranch?: string
                edgeConfigId?: string | null
                edgeConfigTokenId?: string | null
                contentHint?:
                  | {
                      /** @enum {string} */
                      type: 'redis-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-read-only-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'blob-read-write-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-non-pooling'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-prisma-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-user'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-host'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-password'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-database'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-no-ssl'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'integration-store-secret'
                      storeId: string
                    }
                  | null
                /** @description Similar to `contentHints`, but should not be exposed to the user. */
                internalContentHint?: {
                  /** @enum {string} */
                  type: 'flags-secret'
                  /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                  encryptedValue: string
                } | null
                /** @description Whether `value` is decrypted. */
                decrypted?: boolean
                comment?: string
                customEnvironmentIds?: string[]
                system?: boolean
              },
              {
                envs: {
                  target?:
                    | ('production' | 'preview' | 'development')[]
                    | ('production' | 'preview' | 'development')
                  /** @enum {string} */
                  type?:
                    | 'system'
                    | 'encrypted'
                    | 'plain'
                    | 'sensitive'
                    | 'secret'
                  /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                  sunsetSecretId?: string
                  id?: string
                  key?: string
                  value?: string
                  configurationId?: string | null
                  createdAt?: number
                  updatedAt?: number
                  createdBy?: string | null
                  updatedBy?: string | null
                  gitBranch?: string
                  edgeConfigId?: string | null
                  edgeConfigTokenId?: string | null
                  contentHint?:
                    | {
                        /** @enum {string} */
                        type: 'redis-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-read-only-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'blob-read-write-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url-non-pooling'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-prisma-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-user'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-host'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-password'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-database'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url-no-ssl'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'integration-store-secret'
                        storeId: string
                      }
                    | null
                  /** @description Similar to `contentHints`, but should not be exposed to the user. */
                  internalContentHint?: {
                    /** @enum {string} */
                    type: 'flags-secret'
                    /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                    encryptedValue: string
                  } | null
                  /** @description Whether `value` is decrypted. */
                  decrypted?: boolean
                  comment?: string
                  customEnvironmentIds?: string[]
                  system?: boolean
                }[]
                pagination: components['schemas']['Pagination']
              },
              {
                envs: {
                  target?:
                    | ('production' | 'preview' | 'development')[]
                    | ('production' | 'preview' | 'development')
                  /** @enum {string} */
                  type?:
                    | 'system'
                    | 'encrypted'
                    | 'plain'
                    | 'sensitive'
                    | 'secret'
                  /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                  sunsetSecretId?: string
                  id?: string
                  key?: string
                  value?: string
                  configurationId?: string | null
                  createdAt?: number
                  updatedAt?: number
                  createdBy?: string | null
                  updatedBy?: string | null
                  gitBranch?: string
                  edgeConfigId?: string | null
                  edgeConfigTokenId?: string | null
                  contentHint?:
                    | {
                        /** @enum {string} */
                        type: 'redis-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-read-only-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'blob-read-write-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url-non-pooling'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-prisma-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-user'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-host'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-password'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-database'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url-no-ssl'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'integration-store-secret'
                        storeId: string
                      }
                    | null
                  /** @description Similar to `contentHints`, but should not be exposed to the user. */
                  internalContentHint?: {
                    /** @enum {string} */
                    type: 'flags-secret'
                    /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                    encryptedValue: string
                  } | null
                  /** @description Whether `value` is decrypted. */
                  decrypted?: boolean
                  comment?: string
                  customEnvironmentIds?: string[]
                  system?: boolean
                }[]
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Retrieve the decrypted value of an environment variable of a project by id
   * @description Retrieve the environment variable for a given project.
   */
  getProjectEnv: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
        /** @description The unique ID for the environment variable to get the decrypted value. */
        id: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                decrypted: boolean
                target?:
                  | ('production' | 'preview' | 'development')[]
                  | ('production' | 'preview' | 'development')
                /** @enum {string} */
                type: 'secret' | 'system' | 'encrypted' | 'plain' | 'sensitive'
                /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                sunsetSecretId?: string
                id?: string
                key: string
                configurationId?: string | null
                createdAt?: number
                updatedAt?: number
                createdBy?: string | null
                updatedBy?: string | null
                gitBranch?: string
                edgeConfigId?: string | null
                edgeConfigTokenId?: string | null
                contentHint?:
                  | {
                      /** @enum {string} */
                      type: 'redis-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-read-only-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'blob-read-write-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-non-pooling'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-prisma-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-user'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-host'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-password'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-database'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-no-ssl'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'integration-store-secret'
                      storeId: string
                    }
                  | null
                /** @description Similar to `contentHints`, but should not be exposed to the user. */
                internalContentHint?: {
                  /** @enum {string} */
                  type: 'flags-secret'
                  /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                  encryptedValue: string
                } | null
                comment?: string
                customEnvironmentIds?: string[]
              },
              {
                target?:
                  | ('production' | 'preview' | 'development')[]
                  | ('production' | 'preview' | 'development')
                /** @enum {string} */
                type: 'secret' | 'system' | 'encrypted' | 'plain' | 'sensitive'
                /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                sunsetSecretId?: string
                id?: string
                key: string
                value: string
                configurationId?: string | null
                createdAt?: number
                updatedAt?: number
                createdBy?: string | null
                updatedBy?: string | null
                gitBranch?: string
                edgeConfigId?: string | null
                edgeConfigTokenId?: string | null
                contentHint?:
                  | {
                      /** @enum {string} */
                      type: 'redis-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-read-only-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'blob-read-write-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-non-pooling'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-prisma-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-user'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-host'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-password'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-database'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-no-ssl'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'integration-store-secret'
                      storeId: string
                    }
                  | null
                /** @description Similar to `contentHints`, but should not be exposed to the user. */
                internalContentHint?: {
                  /** @enum {string} */
                  type: 'flags-secret'
                  /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                  encryptedValue: string
                } | null
                /** @description Whether `value` is decrypted. */
                decrypted?: boolean
                comment?: string
                customEnvironmentIds?: string[]
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Create one or more environment variables
   * @description Create one ore more environment variables for a project by passing its `key`, `value`, `type` and `target` and by specifying the project by either passing the project `id` or `name` in the URL.
   */
  createProjectEnv: {
    parameters: {
      query?: {
        /** @description Allow override of environment variable if it already exists */
        upsert?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
      }
    }
    requestBody?: {
      content: {
        'application/json': OneOf<
          [
            {
              /**
               * @description The name of the environment variable
               * @example API_URL
               */
              key: string
              /**
               * @description The value of the environment variable
               * @example https://api.vercel.com
               */
              value: string
              /**
               * @description The type of environment variable
               * @example plain
               * @enum {string}
               */
              type: 'system' | 'secret' | 'encrypted' | 'plain' | 'sensitive'
              /**
               * @description The target environment of the environment variable
               * @example [
               *   "preview"
               * ]
               */
              target?: ('production' | 'preview' | 'development')[]
              /**
               * @description If defined, the git branch of the environment variable (must have target=preview)
               * @example feature-1
               */
              gitBranch?: string | null
              /**
               * @description A comment to add context on what this environment variable is for
               * @example database connection string for production
               */
              comment?: string
            },
            {
              /**
               * @description The name of the environment variable
               * @example API_URL
               */
              key: string
              /**
               * @description The value of the environment variable
               * @example https://api.vercel.com
               */
              value: string
              /**
               * @description The type of environment variable
               * @example plain
               * @enum {string}
               */
              type: 'system' | 'secret' | 'encrypted' | 'plain' | 'sensitive'
              /**
               * @description The target environment of the environment variable
               * @example [
               *   "preview"
               * ]
               */
              target?: ('production' | 'preview' | 'development')[]
              /**
               * @description If defined, the git branch of the environment variable (must have target=preview)
               * @example feature-1
               */
              gitBranch?: string | null
              /**
               * @description A comment to add context on what this environment variable is for
               * @example database connection string for production
               */
              comment?: string
            }[],
          ]
        >
      }
    }
    responses: {
      /** @description The environment variable was created successfully */
      201: {
        content: {
          'application/json': {
            created: OneOf<
              [
                {
                  target?:
                    | ('production' | 'preview' | 'development')[]
                    | ('production' | 'preview' | 'development')
                  /** @enum {string} */
                  type?:
                    | 'system'
                    | 'encrypted'
                    | 'plain'
                    | 'sensitive'
                    | 'secret'
                  /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                  sunsetSecretId?: string
                  id?: string
                  key?: string
                  value?: string
                  configurationId?: string | null
                  createdAt?: number
                  updatedAt?: number
                  createdBy?: string | null
                  updatedBy?: string | null
                  gitBranch?: string
                  edgeConfigId?: string | null
                  edgeConfigTokenId?: string | null
                  contentHint?:
                    | {
                        /** @enum {string} */
                        type: 'redis-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-read-only-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'blob-read-write-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url-non-pooling'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-prisma-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-user'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-host'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-password'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-database'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url-no-ssl'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'integration-store-secret'
                        storeId: string
                      }
                    | null
                  /** @description Similar to `contentHints`, but should not be exposed to the user. */
                  internalContentHint?: {
                    /** @enum {string} */
                    type: 'flags-secret'
                    /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                    encryptedValue: string
                  } | null
                  /** @description Whether `value` is decrypted. */
                  decrypted?: boolean
                  comment?: string
                  customEnvironmentIds?: string[]
                  system?: boolean
                },
                {
                  target?:
                    | ('production' | 'preview' | 'development')[]
                    | ('production' | 'preview' | 'development')
                  /** @enum {string} */
                  type?:
                    | 'system'
                    | 'encrypted'
                    | 'plain'
                    | 'sensitive'
                    | 'secret'
                  /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                  sunsetSecretId?: string
                  id?: string
                  key?: string
                  value?: string
                  configurationId?: string | null
                  createdAt?: number
                  updatedAt?: number
                  createdBy?: string | null
                  updatedBy?: string | null
                  gitBranch?: string
                  edgeConfigId?: string | null
                  edgeConfigTokenId?: string | null
                  contentHint?:
                    | {
                        /** @enum {string} */
                        type: 'redis-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'redis-rest-api-read-only-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'blob-read-write-token'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url-non-pooling'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-prisma-url'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-user'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-host'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-password'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-database'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'postgres-url-no-ssl'
                        storeId: string
                      }
                    | {
                        /** @enum {string} */
                        type: 'integration-store-secret'
                        storeId: string
                      }
                    | null
                  /** @description Similar to `contentHints`, but should not be exposed to the user. */
                  internalContentHint?: {
                    /** @enum {string} */
                    type: 'flags-secret'
                    /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                    encryptedValue: string
                  } | null
                  /** @description Whether `value` is decrypted. */
                  decrypted?: boolean
                  comment?: string
                  customEnvironmentIds?: string[]
                  system?: boolean
                }[],
              ]
            >
            failed: {
              error: {
                code: string
                message: string
                key?: string
                envVarId?: string
                envVarKey?: string
                action?: string
                link?: string
                value?: string | ('production' | 'preview' | 'development')[]
                gitBranch?: string
                target?:
                  | ('production' | 'preview' | 'development')[]
                  | ('production' | 'preview' | 'development')
                project?: string
              }
            }[]
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The environment variable cannot be created because it already exists
       * Additional permissions are required to create production environment variables
       */
      403: {
        content: never
      }
      /** @description The project is being transfered and creating an environment variable is not possible */
      409: {
        content: never
      }
    }
  }
  /**
   * Remove an environment variable
   * @description Delete a specific environment variable for a given project by passing the environment variable identifier and either passing the project `id` or `name` in the URL.
   */
  removeProjectEnv: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
        /** @description The unique environment variable identifier */
        id: string
      }
    }
    responses: {
      /** @description The environment variable was successfully removed */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                target?:
                  | ('production' | 'preview' | 'development')[]
                  | ('production' | 'preview' | 'development')
                /** @enum {string} */
                type: 'system' | 'encrypted' | 'plain' | 'sensitive' | 'secret'
                /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                sunsetSecretId?: string
                id?: string
                key: string
                value: string
                configurationId?: string | null
                createdAt?: number
                updatedAt?: number
                createdBy?: string | null
                updatedBy?: string | null
                gitBranch?: string
                edgeConfigId?: string | null
                edgeConfigTokenId?: string | null
                contentHint?:
                  | {
                      /** @enum {string} */
                      type: 'redis-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-read-only-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'blob-read-write-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-non-pooling'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-prisma-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-user'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-host'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-password'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-database'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-no-ssl'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'integration-store-secret'
                      storeId: string
                    }
                  | null
                /** @description Similar to `contentHints`, but should not be exposed to the user. */
                internalContentHint?: {
                  /** @enum {string} */
                  type: 'flags-secret'
                  /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                  encryptedValue: string
                } | null
                /** @description Whether `value` is decrypted. */
                decrypted?: boolean
                comment?: string
                customEnvironmentIds?: string[]
              }[],
              {
                system?: boolean
                target?:
                  | ('production' | 'preview' | 'development')[]
                  | ('production' | 'preview' | 'development')
                /** @enum {string} */
                type: 'system' | 'encrypted' | 'plain' | 'sensitive' | 'secret'
                /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                sunsetSecretId?: string
                id?: string
                key: string
                value: string
                configurationId?: string | null
                createdAt?: number
                updatedAt?: number
                createdBy?: string | null
                updatedBy?: string | null
                gitBranch?: string
                edgeConfigId?: string | null
                edgeConfigTokenId?: string | null
                contentHint?:
                  | {
                      /** @enum {string} */
                      type: 'redis-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-read-only-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'blob-read-write-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-non-pooling'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-prisma-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-user'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-host'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-password'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-database'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-no-ssl'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'integration-store-secret'
                      storeId: string
                    }
                  | null
                /** @description Similar to `contentHints`, but should not be exposed to the user. */
                internalContentHint?: {
                  /** @enum {string} */
                  type: 'flags-secret'
                  /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                  encryptedValue: string
                } | null
                /** @description Whether `value` is decrypted. */
                decrypted?: boolean
                comment?: string
                customEnvironmentIds?: string[]
              },
              {
                target?:
                  | ('production' | 'preview' | 'development')[]
                  | ('production' | 'preview' | 'development')
                /** @enum {string} */
                type: 'system' | 'encrypted' | 'plain' | 'sensitive' | 'secret'
                /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
                sunsetSecretId?: string
                id?: string
                key: string
                value: string
                configurationId?: string | null
                createdAt?: number
                updatedAt?: number
                createdBy?: string | null
                updatedBy?: string | null
                gitBranch?: string
                edgeConfigId?: string | null
                edgeConfigTokenId?: string | null
                contentHint?:
                  | {
                      /** @enum {string} */
                      type: 'redis-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'redis-rest-api-read-only-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'blob-read-write-token'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-non-pooling'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-prisma-url'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-user'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-host'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-password'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-database'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'postgres-url-no-ssl'
                      storeId: string
                    }
                  | {
                      /** @enum {string} */
                      type: 'integration-store-secret'
                      storeId: string
                    }
                  | null
                /** @description Similar to `contentHints`, but should not be exposed to the user. */
                internalContentHint?: {
                  /** @enum {string} */
                  type: 'flags-secret'
                  /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
                  encryptedValue: string
                } | null
                /** @description Whether `value` is decrypted. */
                decrypted?: boolean
                comment?: string
                customEnvironmentIds?: string[]
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      /** @description The project is being transfered and removing an environment variable is not possible */
      409: {
        content: never
      }
    }
  }
  /**
   * Edit an environment variable
   * @description Edit a specific environment variable for a given project by passing the environment variable identifier and either passing the project `id` or `name` in the URL.
   */
  editProjectEnv: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier or the project name */
        idOrName: string
        /** @description The unique environment variable identifier */
        id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the environment variable
           * @example GITHUB_APP_ID
           */
          key?: string
          /**
           * @description The target environment of the environment variable
           * @example [
           *   "preview"
           * ]
           */
          target?: ('production' | 'preview' | 'development')[]
          /**
           * @description If defined, the git branch of the environment variable (must have target=preview)
           * @example feature-1
           */
          gitBranch?: string | null
          /**
           * @description The type of environment variable
           * @example plain
           * @enum {string}
           */
          type?: 'system' | 'secret' | 'encrypted' | 'plain' | 'sensitive'
          /**
           * @description The value of the environment variable
           * @example bkWIjbnxcvo78
           */
          value?: string
          customEnvironmentIds?: string[]
          /**
           * @description A comment to add context on what this env var is for
           * @example database connection string for production
           */
          comment?: string
        }
      }
    }
    responses: {
      /** @description The environment variable was successfully edited */
      200: {
        content: {
          'application/json': {
            target?:
              | ('production' | 'preview' | 'development')[]
              | ('production' | 'preview' | 'development')
            /** @enum {string} */
            type: 'system' | 'encrypted' | 'plain' | 'sensitive' | 'secret'
            /** @description This is used to identiy variables that have been migrated from type secret to sensitive. */
            sunsetSecretId?: string
            id?: string
            key: string
            value: string
            configurationId?: string | null
            createdAt?: number
            updatedAt?: number
            createdBy?: string | null
            updatedBy?: string | null
            gitBranch?: string
            edgeConfigId?: string | null
            edgeConfigTokenId?: string | null
            contentHint?:
              | {
                  /** @enum {string} */
                  type: 'redis-url'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'redis-rest-api-url'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'redis-rest-api-token'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'redis-rest-api-read-only-token'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'blob-read-write-token'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'postgres-url'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'postgres-url-non-pooling'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'postgres-prisma-url'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'postgres-user'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'postgres-host'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'postgres-password'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'postgres-database'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'postgres-url-no-ssl'
                  storeId: string
                }
              | {
                  /** @enum {string} */
                  type: 'integration-store-secret'
                  storeId: string
                }
              | null
            /** @description Similar to `contentHints`, but should not be exposed to the user. */
            internalContentHint?: {
              /** @enum {string} */
              type: 'flags-secret'
              /** @description Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda. */
              encryptedValue: string
            } | null
            /** @description Whether `value` is decrypted. */
            decrypted?: boolean
            comment?: string
            customEnvironmentIds?: string[]
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The project is being transfered and removing an environment variable is not possible */
      409: {
        content: never
      }
    }
  }
  /**
   * Gets a list of aliases with status for the current promote
   * @description Get a list of aliases related to the last promote request with their mapping status
   */
  requestPromote: {
    parameters: {
      query?: {
        /** @description Maximum number of aliases to list from a request (max 100). */
        limit?: number
        /** @description Get aliases created after this epoch timestamp. */
        since?: number
        /** @description Get aliases created before this epoch timestamp. */
        until?: number
        /** @description Filter results down to aliases that failed to map to the requested deployment */
        failedOnly?: boolean
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        projectId: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': OneOf<
            [
              Record<string, never>,
              {
                aliases: {
                  status: string
                  alias: string
                  id: string
                }[]
                pagination: components['schemas']['Pagination']
              },
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Pause a project
   * @description Pause a project by passing its project `id` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project disables auto assigning custom production domains and blocks the active Production Deployment then the request will return with 200 status code.
   */
  pauseProject: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier */
        projectId: string
      }
    }
    responses: {
      200: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      500: {
        content: never
      }
    }
  }
  /**
   * Unpause a project
   * @description Unpause a project by passing its project `id` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project enables auto assigning custom production domains and unblocks the active Production Deployment then the request will return with 200 status code.
   */
  unpauseProject: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique project identifier */
        projectId: string
      }
    }
    responses: {
      200: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      500: {
        content: never
      }
    }
  }
  /**
   * List team members
   * @description Get a paginated list of team members for the provided team.
   */
  getTeamMembers: {
    parameters: {
      query?: {
        /** @description Limit how many teams should be returned */
        limit?: number
        /** @description Timestamp in milliseconds to only include members added since then. */
        since?: number
        /** @description Timestamp in milliseconds to only include members added until then. */
        until?: number
        /** @description Search team members by their name, username, and email. */
        search?: string
        /** @description Only return members with the specified team role. */
        role?:
          | 'OWNER'
          | 'MEMBER'
          | 'DEVELOPER'
          | 'VIEWER'
          | 'BILLING'
          | 'CONTRIBUTOR'
        /** @description Exclude members who belong to the specified project. */
        excludeProject?: string
        /** @description Include team members who are eligible to be members of the specified project. */
        eligibleMembersForProjectId?: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            members: {
              /**
               * @description ID of the file for the Avatar of this member.
               * @example 123a6c5209bc3778245d011443644c8d27dc2c50
               */
              avatar?: string
              /**
               * @description Boolean that indicates if this member was confirmed by an owner.
               * @example true
               */
              confirmed: boolean
              /**
               * @description The email of this member.
               * @example jane.doe@example.com
               */
              email: string
              /** @description Information about the GitHub account for this user. */
              github?: {
                login?: string
              }
              /** @description Information about the GitLab account of this user. */
              gitlab?: {
                login?: string
              }
              /** @description Information about the Bitbucket account of this user. */
              bitbucket?: {
                login?: string
              }
              /**
               * @description Role of this user in the team.
               * @example OWNER
               * @enum {string}
               */
              role:
                | 'OWNER'
                | 'MEMBER'
                | 'DEVELOPER'
                | 'BILLING'
                | 'VIEWER'
                | 'CONTRIBUTOR'
              /**
               * @description The ID of this user.
               * @example zTuNVUXEAvvnNN3IaqinkyMw
               */
              uid: string
              /**
               * @description The unique username of this user.
               * @example jane-doe
               */
              username: string
              /**
               * @description The name of this user.
               * @example Jane Doe
               */
              name?: string
              /**
               * @description Timestamp in milliseconds when this member was added.
               * @example 1588720733602
               */
              createdAt: number
              /**
               * @description Timestamp in milliseconds for when this team member was accepted by an owner.
               * @example 1588820733602
               */
              accessRequestedAt?: number
              /** @description Map with information about the members origin if they joined by requesting access. */
              joinedFrom?: {
                /** @enum {string} */
                origin:
                  | 'teams'
                  | 'link'
                  | 'mail'
                  | 'import'
                  | 'github'
                  | 'gitlab'
                  | 'bitbucket'
                  | 'saml'
                  | 'dsync'
                  | 'feedback'
                  | 'organization-teams'
                commitId?: string
                repoId?: string
                repoPath?: string
                gitUserId?: string | number
                gitUserLogin?: string
                ssoUserId?: string
                ssoConnectedAt?: number
                idpUserId?: string
                dsyncUserId?: string
                dsyncConnectedAt?: number
              }
              /** @description Array of project memberships */
              projects?: {
                name?: string
                id?: string
                /** @enum {string} */
                role?: 'ADMIN' | 'PROJECT_DEVELOPER' | 'PROJECT_VIEWER'
              }[]
            }[]
            emailInviteCodes?: {
              accessGroups?: string[]
              id: string
              email?: string
              /** @enum {string} */
              role?:
                | 'OWNER'
                | 'MEMBER'
                | 'DEVELOPER'
                | 'BILLING'
                | 'VIEWER'
                | 'CONTRIBUTOR'
              isDSyncUser: boolean
              createdAt?: number
              expired?: boolean
              projects?: {
                [key: string]: 'ADMIN' | 'PROJECT_DEVELOPER' | 'PROJECT_VIEWER'
              }
            }[]
            pagination: {
              hasNext: boolean
              /**
               * @description Amount of items in the current page.
               * @example 20
               */
              count: number
              /**
               * @description Timestamp that must be used to request the next page.
               * @example 1540095775951
               */
              next: number | null
              /**
               * @description Timestamp that must be used to request the previous page.
               * @example 1540095775951
               */
              prev: number | null
            }
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description No team was found. */
      404: {
        content: never
      }
    }
  }
  /**
   * Invite a user
   * @description Invite a user to join the team specified in the URL. The authenticated user needs to be an `OWNER` in order to successfully invoke this endpoint. The user can be specified with an email or an ID. If both email and ID are provided, ID will take priority.
   */
  inviteUserToTeam: {
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The id of the user to invite
           * @example kr1PsOIzqEL5Xg6M4VZcZosf
           */
          uid?: string
          /**
           * Format: email
           * @description The email address of the user to invite
           * @example john@example.com
           */
          email?: string
          /**
           * @description The role of the user to invite
           * @default [
           *   "MEMBER",
           *   "VIEWER"
           * ]
           * @example [
           *   "MEMBER",
           *   "VIEWER"
           * ]
           * @enum {string}
           */
          role?:
            | 'OWNER'
            | 'MEMBER'
            | 'DEVELOPER'
            | 'BILLING'
            | 'VIEWER'
            | 'CONTRIBUTOR'
          projects?: {
            /**
             * @description The ID of the project.
             * @example prj_ndlgr43fadlPyCtREAqxxdyFK
             */
            projectId: string
            /**
             * @description Sets the project roles for the invited user
             * @example ADMIN
             * @enum {string}
             */
            role: 'ADMIN' | 'PROJECT_VIEWER' | 'PROJECT_DEVELOPER'
          }[]
        }
      }
    }
    responses: {
      /** @description The member was successfully added to the team */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @description The ID of the invited user
                 * @example kr1PsOIzqEL5Xg6M4VZcZosf
                 */
                uid: string
                /**
                 * @description The username of the invited user
                 * @example john-doe
                 */
                username: string
                /**
                 * @description The email of the invited user. Not included if the user was invited via their UID.
                 * @example john@user.co
                 */
                email?: string
                /**
                 * @description The role used for the invitation
                 * @example MEMBER
                 * @enum {string}
                 */
                role:
                  | 'OWNER'
                  | 'MEMBER'
                  | 'DEVELOPER'
                  | 'BILLING'
                  | 'VIEWER'
                  | 'CONTRIBUTOR'
              },
              {
                uid: string
                username: string
                /** @enum {string} */
                role:
                  | 'OWNER'
                  | 'MEMBER'
                  | 'DEVELOPER'
                  | 'BILLING'
                  | 'VIEWER'
                  | 'CONTRIBUTOR'
              },
            ]
          >
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * The user already requested access to the team
       * Hobby teams are not allowed to add seats.
       * The team reached the maximum allowed amount of members
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The authenticated user must be a team owner to perform the action
       */
      403: {
        content: never
      }
      /** @description The team was not found */
      404: {
        content: never
      }
      503: {
        content: never
      }
    }
  }
  /**
   * Request access to a team
   * @description Request access to a team as a member. An owner has to approve the request. Only 10 users can request access to a team at the same time.
   */
  requestAccessToTeam: {
    requestBody?: {
      content: {
        'application/json': {
          joinedFrom: {
            /**
             * @description The origin of the request.
             * @example github
             * @enum {string}
             */
            origin:
              | 'import'
              | 'teams'
              | 'github'
              | 'gitlab'
              | 'bitbucket'
              | 'feedback'
              | 'organization-teams'
            /**
             * @description The commit sha if the origin is a git provider.
             * @example f498d25d8bd654b578716203be73084b31130cd7
             */
            commitId?: string
            /**
             * @description The ID of the repository for the given Git provider.
             * @example 67753070
             */
            repoId?: string
            /**
             * @description The path to the repository for the given Git provider.
             * @example jane-doe/example
             */
            repoPath?: string
            /**
             * @description The ID of the Git account of the user who requests access.
             * @example 103053343
             */
            gitUserId?: string | number
            /**
             * @description The login name for the Git account of the user who requests access.
             * @example jane-doe
             */
            gitUserLogin?: string
          }
        }
      }
    }
    responses: {
      /** @description Successfuly requested access to the team. */
      200: {
        content: {
          'application/json': {
            teamSlug: string
            teamName: string
            confirmed?: boolean
            joinedFrom?: {
              /** @enum {string} */
              origin:
                | 'import'
                | 'teams'
                | 'github'
                | 'gitlab'
                | 'bitbucket'
                | 'feedback'
                | 'organization-teams'
                | 'mail'
                | 'link'
                | 'saml'
                | 'dsync'
              commitId?: string
              repoId?: string
              repoPath?: string
              gitUserId?: string | number
              gitUserLogin?: string
              ssoUserId?: string
              ssoConnectedAt?: number
              idpUserId?: string
              dsyncUserId?: string
              dsyncConnectedAt?: number
            }
            accessRequestedAt?: number
            github: {
              login?: string
            } | null
            gitlab: {
              login?: string
            } | null
            bitbucket: {
              login?: string
            } | null
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The team was not found. */
      404: {
        content: never
      }
      503: {
        content: never
      }
    }
  }
  /**
   * Get access request status
   * @description Check the status of a join request. It'll respond with a 404 if the request has been declined. If no `userId` path segment was provided, this endpoint will instead return the status of the authenticated user.
   */
  getTeamAccessRequest: {
    parameters: {
      path: {
        userId: string
      }
    }
    responses: {
      /** @description Successfully */
      200: {
        content: {
          'application/json': {
            /**
             * @description The slug of the team.
             * @example my-team
             */
            teamSlug: string
            /**
             * @description The name of the team.
             * @example My Team
             */
            teamName: string
            /**
             * @description Current status of the membership. Will be `true` if confirmed, if pending it'll be `false`.
             * @example false
             */
            confirmed: boolean
            /** @description A map that describes the origin from where the user joined. */
            joinedFrom: {
              /** @enum {string} */
              origin:
                | 'mail'
                | 'link'
                | 'import'
                | 'teams'
                | 'github'
                | 'gitlab'
                | 'bitbucket'
                | 'saml'
                | 'dsync'
                | 'feedback'
                | 'organization-teams'
              commitId?: string
              repoId?: string
              repoPath?: string
              gitUserId?: string | number
              gitUserLogin?: string
              ssoUserId?: string
              ssoConnectedAt?: number
              idpUserId?: string
              dsyncUserId?: string
              dsyncConnectedAt?: number
            }
            /**
             * @description Timestamp in milliseconds when the user requested access to the team.
             * @example 1588720733602
             */
            accessRequestedAt: number
            /** @description Map of the connected GitHub account. */
            github: {
              login?: string
            } | null
            /** @description Map of the connected GitLab account. */
            gitlab: {
              login?: string
            } | null
            /** @description Map of the connected Bitbucket account. */
            bitbucket: {
              login?: string
            } | null
          }
        }
      }
      /**
       * @description One of the provided values in the request query is invalid.
       * User is already a confirmed member of the team and did not request access. Only visible when the authenticated user does have access to the team.
       */
      400: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /**
       * @description The provided user doesn't have a membership.
       * Team was not found.
       */
      404: {
        content: never
      }
    }
  }
  /**
   * Join a team
   * @description Join a team with a provided invite code or team ID.
   */
  joinTeam: {
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The invite code to join the team.
           * @example fisdh38aejkeivn34nslfore9vjtn4ls
           */
          inviteCode?: string
        }
      }
    }
    responses: {
      /** @description Successfully joined a team. */
      200: {
        content: {
          'application/json': {
            /**
             * @description The ID of the team the user joined.
             * @example team_LLHUOMOoDlqOp8wPE4kFo9pE
             */
            teamId: string
            /**
             * @description The slug of the team the user joined.
             * @example my-team
             */
            slug: string
            /**
             * @description The name of the team the user joined.
             * @example My Team
             */
            name: string
            /**
             * @description The origin of how the user joined.
             * @example email
             */
            from: string
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Remove a Team Member
   * @description Remove a Team Member from the Team, or dismiss a user that requested access, or leave a team.
   */
  removeTeamMember: {
    parameters: {
      query?: {
        /** @description The ID of the team to set as the new default team for the Northstar user. */
        newDefaultTeamId?: string
      }
      path: {
        /** @description The user ID of the member. */
        uid: string
      }
    }
    responses: {
      /** @description Successfully removed a member of the team. */
      200: {
        content: {
          'application/json': {
            /** @description ID of the team. */
            id: string
          }
        }
      }
      /**
       * @description One of the provided values in the request query is invalid.
       * Cannot leave the team as the only owner.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * Not authorized to update the team.
       */
      403: {
        content: never
      }
      /**
       * @description A user with the specified ID does not exist.
       * No team found.
       */
      404: {
        content: never
      }
      503: {
        content: never
      }
    }
  }
  /**
   * Update a Team Member
   * @description Update the membership of a Team Member on the Team specified by `teamId`, such as changing the _role_ of the member, or confirming a request to join the Team for an unconfirmed member. The authenticated user must be an `OWNER` of the Team.
   */
  updateTeamMember: {
    parameters: {
      path: {
        /** @description The ID of the member. */
        uid: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description Accept a user who requested access to the team.
           * @example true
           * @enum {boolean}
           */
          confirmed?: true
          /**
           * @description The role in the team of the member.
           * @default [
           *   "MEMBER",
           *   "VIEWER"
           * ]
           * @example [
           *   "MEMBER",
           *   "VIEWER"
           * ]
           */
          role?: string
          projects?: {
            /**
             * @description The ID of the project.
             * @example prj_ndlgr43fadlPyCtREAqxxdyFK
             */
            projectId: string
            /**
             * @description The project role of the member that will be added. \"null\" will remove this project level role.
             * @example ADMIN
             * @enum {string|null}
             */
            role: 'ADMIN' | 'PROJECT_VIEWER' | 'PROJECT_DEVELOPER' | null
          }[]
          joinedFrom?: {
            ssoUserId?: null
          }
        }
      }
    }
    responses: {
      /** @description Successfully updated the membership. */
      200: {
        content: {
          'application/json': {
            /** @description ID of the team. */
            id: string
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * Cannot disconnect SSO from a Team member that does not have a SSO connection.
       * Cannot confirm a member that is already confirmed.
       * Cannot confirm a member that did not request access.
       */
      400: {
        content: never
      }
      /** @description Team members can only be updated by an owner, or by the authenticated user if they are only disconnecting their SAML connection to the Team. */
      401: {
        content: never
      }
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /**
       * @description The provided user is not part of this team.
       * A user with the specified ID does not exist.
       * Team not found.
       */
      404: {
        content: never
      }
      500: {
        content: never
      }
    }
  }
  /**
   * Get a Team
   * @description Get information for the Team specified by the `teamId` parameter.
   */
  getTeam: {
    parameters: {
      query?: {
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId: string
      }
    }
    responses: {
      /** @description The requested team */
      200: {
        content: {
          'application/json': components['schemas']['Team']
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * Not authorized to access the team.
       */
      403: {
        content: never
      }
      /** @description Team was not found. */
      404: {
        content: never
      }
    }
  }
  /**
   * Update a Team
   * @description Update the information of a Team specified by the `teamId` parameter. The request body should contain the information that will be updated on the Team.
   */
  patchTeam: {
    parameters: {
      query?: {
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * Format: regex
           * @description The hash value of an uploaded image.
           */
          avatar?: string
          /**
           * @description A short text that describes the team.
           * @example Our mission is to make cloud computing accessible to everyone
           */
          description?: string
          /**
           * Format: regex
           * @example example.com
           */
          emailDomain?: string | null
          /**
           * @description The name of the team.
           * @example My Team
           */
          name?: string
          /**
           * Format: hostname
           * @description Suffix that will be used for all preview deployments.
           * @example example.dev
           */
          previewDeploymentSuffix?: string | null
          /**
           * @description Create a new invite code and replace the current one.
           * @example true
           */
          regenerateInviteCode?: boolean
          saml?: {
            /**
             * @description Require that members of the team use SAML Single Sign-On.
             * @example true
             */
            enforced?: boolean
            /** @description Directory groups to role or access group mappings. */
            roles?: {
              [key: string]:
                | (
                    | 'OWNER'
                    | 'MEMBER'
                    | 'DEVELOPER'
                    | 'BILLING'
                    | 'VIEWER'
                    | 'CONTRIBUTOR'
                  )
                | {
                    accessGroupId: string
                  }
            }
          }
          /**
           * @description A new slug for the team.
           * @example my-team
           */
          slug?: string
          /**
           * @description Enable preview comments: one of on, off or default.
           * @example on
           */
          enablePreviewFeedback?: string
          /**
           * @description Sensitive environment variable policy: one of on, off or default.
           * @example on
           */
          sensitiveEnvironmentVariablePolicy?: string
          /** @description Whether or not remote caching is enabled for the team */
          remoteCaching?: {
            /**
             * @description Enable or disable remote caching for the team.
             * @example true
             */
            enabled?: boolean
          }
          /**
           * @description Display or hide IP addresses in Monitoring queries.
           * @example false
           */
          hideIpAddresses?: boolean
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['Team']
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * Not authorized to update the team. Must be an OWNER.
       */
      403: {
        content: never
      }
      /** @description Team was not found. */
      404: {
        content: never
      }
    }
  }
  /**
   * List all teams
   * @description Get a paginated list of all the Teams the authenticated User is a member of.
   */
  getTeams: {
    parameters: {
      query?: {
        /** @description Maximum number of Teams which may be returned. */
        limit?: number
        /** @description Timestamp (in milliseconds) to only include Teams created since then. */
        since?: number
        /** @description Timestamp (in milliseconds) to only include Teams created until then. */
        until?: number
      }
    }
    responses: {
      /** @description A paginated list of teams. */
      200: {
        content: {
          'application/json': {
            teams: (
              | components['schemas']['Team']
              | components['schemas']['TeamLimited']
            )[]
            pagination: components['schemas']['Pagination']
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Create a Team
   * @description Create a new Team under your account. You need to send a POST request with the desired Team slug, and optionally the Team name.
   */
  createTeam: {
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The desired slug for the Team
           * @example a-random-team
           */
          slug: string
          /**
           * @description The desired name for the Team. It will be generated from the provided slug if nothing is provided
           * @example A Random Team
           */
          name?: string
          /** @description Attribution information for the session or current page */
          attribution?: {
            /** @description Session referrer */
            sessionReferrer?: string
            /** @description Session landing page */
            landingPage?: string
            /** @description Referrer to the signup page */
            pageBeforeConversionPage?: string
            utm?: {
              /** @description UTM source */
              utmSource?: string
              /** @description UTM medium */
              utmMedium?: string
              /** @description UTM campaign */
              utmCampaign?: string
              /** @description UTM term */
              utmTerm?: string
            }
          }
        }
      }
    }
    responses: {
      /** @description The team was created successfully */
      200: {
        content: {
          'application/json': {
            /**
             * @description Id of the created team
             * @example team_nLlpyC6RE1qxqglFKbrMxlud
             */
            id: string
            slug: string
            billing: {
              /** @enum {string} */
              currency?: 'usd' | 'eur'
              cancelation?: number | null
              period: {
                start: number
                end: number
              } | null
              contract?: {
                start: number
                end: number
              } | null
              /** @enum {string} */
              plan: 'pro' | 'enterprise' | 'hobby'
              planIteration?: string
              /** @enum {string} */
              platform?: 'stripe' | 'stripeTestMode'
              orbCustomerId?: string
              syncedAt?: number
              /** @enum {string} */
              programType?: 'startup' | 'agency'
              trial?: {
                start: number
                end: number
              } | null
              email?: string | null
              tax?: {
                type: string
                id: string
              } | null
              language?: string | null
              address?: {
                line1?: string
                line2?: string
                postalCode?: string
                city?: string
                country?: string
                state?: string
              } | null
              name?: string | null
              invoiceItems?: {
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                pro?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                enterprise?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                analytics?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                concurrentBuilds?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                monitoring?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                passwordProtection?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                previewDeploymentSuffix?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                saml?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                teamSeats?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                /** @description Will be used to create an invoice item. The price must be in cents: 2000 for $20. */
                webAnalytics?: {
                  tier?: number
                  price: number
                  quantity: number
                  /** @description The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons. */
                  highestQuantity?: number
                  name?: string
                  hidden: boolean
                  createdAt?: number
                  disabledAt?: number | null
                  frequency?: {
                    /** @enum {string} */
                    interval: 'month'
                    /** @enum {number} */
                    intervalCount: 2 | 1 | 3 | 6 | 12
                  }
                  maxQuantity?: number
                }
                analyticsUsage?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                artifacts?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                bandwidth?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                blobStores?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                blobTotalAdvancedRequests?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                blobTotalAvgSizeInBytes?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                blobTotalGetResponseObjectSizeInBytes?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                blobTotalSimpleRequests?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                buildMinute?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                dataCacheRead?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                dataCacheRevalidation?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                dataCacheWrite?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                edgeConfigRead?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                edgeConfigWrite?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                edgeFunctionExecutionUnits?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                edgeMiddlewareInvocations?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                edgeRequest?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                edgeRequestAdditionalCpuDuration?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                fastDataTransfer?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                fastOriginTransfer?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                functionDuration?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                functionInvocation?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                logDrainsVolume?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                monitoringMetric?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                postgresComputeTime?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                postgresDataStorage?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                postgresDataTransfer?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                postgresDatabase?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                postgresWrittenData?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                serverlessFunctionExecution?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                sourceImages?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                storageRedisTotalBandwidthInBytes?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                storageRedisTotalCommands?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                storageRedisTotalDailyAvgStorageInBytes?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                storageRedisTotalDatabases?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                wafOwaspExcessBytes?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                wafOwaspRequests?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
                webAnalyticsEvent?: {
                  matrix?: {
                    defaultUnitPrice: string
                    dimensionPrices: {
                      [key: string]: string
                    }
                  }
                  tier?: number
                  price: number
                  batch: number
                  threshold: number
                  name?: string
                  hidden: boolean
                  disabledAt?: number | null
                  enabledAt?: number | null
                }
              } | null
              invoiceSettings?: {
                footer?: string
              }
              subscriptions?:
                | {
                    id: string
                    trial: {
                      start: number
                      end: number
                    } | null
                    period: {
                      start: number
                      end: number
                    }
                    frequency: {
                      /** @enum {string} */
                      interval: 'month' | 'day' | 'week' | 'year'
                      intervalCount: number
                    }
                    discount: {
                      id: string
                      coupon: {
                        id: string
                        name: string | null
                        amountOff: number | null
                        percentageOff: number | null
                        durationInMonths: number | null
                        /** @enum {string} */
                        duration: 'forever' | 'repeating' | 'once'
                      }
                    } | null
                    items: {
                      id: string
                      priceId: string
                      productId: string
                      amount: number
                      quantity: number
                    }[]
                  }[]
                | null
              controls?: {
                analyticsSampleRateInPercent?: number | null
                analyticsSpendLimitInDollars?: number | null
              } | null
              purchaseOrder?: string | null
              /** @enum {string} */
              status?:
                | 'active'
                | 'trialing'
                | 'overdue'
                | 'expired'
                | 'canceled'
              /** @enum {string} */
              pricingExperiment?: 'august-2022'
              orbMigrationScheduledAt?: number | null
              forceOrbMigration?: boolean | null
            }
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * The slug is already in use
       */
      400: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Delete a Team
   * @description Delete a team under your account. You need to send a `DELETE` request with the desired team `id`. An optional array of reasons for deletion may also be sent.
   */
  deleteTeam: {
    parameters: {
      query?: {
        /** @description Id of the team to be set as the new default team */
        newDefaultTeamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description Optional array of objects that describe the reason why the team is being deleted. */
          reasons?: {
            /** @description Idenitifier slug of the reason why the team is being deleted. */
            slug: string
            /** @description Description of the reason why the team is being deleted. */
            description: string
          }[]
        }
      }
    }
    responses: {
      /** @description The Team was successfully deleted */
      200: {
        content: {
          'application/json': {
            /**
             * @description The ID of the deleted Team
             * @example team_LLHUOMOoDlqOp8wPE4kFo9pE
             */
            id: string
            /**
             * @description Signifies whether the default team update has failed, when newDefaultTeamId is provided in request query.
             * @example true
             */
            newDefaultTeamIdError?: boolean
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The authenticated user can't access the team
       */
      403: {
        content: never
      }
      /** @description The team was not found */
      404: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Delete a Team invite code
   * @description Delete an active Team invite code.
   */
  deleteTeamInviteCode: {
    parameters: {
      path: {
        /** @description The Team invite code ID. */
        inviteId: string
      }
    }
    responses: {
      /** @description Successfully deleted Team invite code. */
      200: {
        content: {
          'application/json': {
            /** @description ID of the team. */
            id: string
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * Invite managed by directory sync
       * Not authorized to access this team.
       */
      403: {
        content: never
      }
      /**
       * @description Team invite code not found.
       * No team found.
       */
      404: {
        content: never
      }
    }
  }
  /**
   * Upload Deployment Files
   * @description Before you create a deployment you need to upload the required files for that deployment. To do it, you need to first upload each file to this endpoint. Once that's completed, you can create a new deployment with the uploaded files. The file content must be placed inside the body of the request. In the case of a successful response you'll receive a status code 200 with an empty body.
   */
  uploadFile: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      header?: {
        /** @description The file size in bytes */
        'Content-Length'?: number
        /** @description The file SHA1 used to check the integrity */
        'x-vercel-digest'?: string
        /** @description The file SHA1 used to check the integrity */
        'x-now-digest'?: string
        /** @description The file size as an alternative to `Content-Length` */
        'x-now-size'?: number
      }
    }
    responses: {
      /**
       * @description File already uploaded
       * File successfully uploaded
       */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                /**
                 * @description Array of URLs where the file was updated
                 * @example [
                 *   "example-upload.aws.com"
                 * ]
                 */
                urls: string[]
              },
              Record<string, never>,
            ]
          >
        }
      }
      /**
       * @description One of the provided values in the headers is invalid
       * Digest is not valid
       * File size is not valid
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Get the User
   * @description Retrieves information related to the currently authenticated User.
   */
  getAuthUser: {
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          'application/json': {
            user:
              | components['schemas']['AuthUser']
              | components['schemas']['AuthUserLimited']
          }
        }
      }
      302: {
        content: never
      }
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      409: {
        content: never
      }
    }
  }
  /**
   * Delete User Account
   * @description Initiates the deletion process for the currently authenticated User, by sending a deletion confirmation email. The email contains a link that the user needs to visit in order to proceed with the deletion process.
   */
  requestDelete: {
    requestBody?: {
      content: {
        'application/json': {
          /** @description Optional array of objects that describe the reason why the User account is being deleted. */
          reasons?: {
            /** @description Idenitifier slug of the reason why the User account is being deleted. */
            slug: string
            /** @description Description of the reason why the User account is being deleted. */
            description: string
          }[]
        }
      }
    }
    responses: {
      /** @description Response indicating that the User deletion process has been initiated, and a confirmation email has been sent. */
      202: {
        content: {
          'application/json': {
            /** @description Unique identifier of the User who has initiated deletion. */
            id: string
            /** @description Email address of the User who has initiated deletion. */
            email: string
            /**
             * @description User deletion progress status.
             * @example Verification email sent
             */
            message: string
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * List Auth Tokens
   * @description Retrieve a list of the current User's authentication tokens.
   */
  listAuthTokens: {
    responses: {
      200: {
        content: {
          'application/json': {
            tokens: components['schemas']['AuthToken'][]
            testingToken?: components['schemas']['AuthToken']
            pagination: components['schemas']['Pagination']
          }
        }
      }
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Create an Auth Token
   * @description Creates and returns a new authentication token for the currently authenticated User. The `bearerToken` property is only provided once, in the response body, so be sure to save it on the client for use with API requests.
   */
  createAuthToken: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': OneOf<
          [
            {
              name: string
              expiresAt?: number
            },
            {
              /** @enum {unknown} */
              type: 'oauth2-token'
              name: string
              clientId?: string
              installationId?: string
              expiresAt?: number
            },
          ]
        >
      }
    }
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          'application/json': {
            token: components['schemas']['AuthToken']
            /**
             * @description The authentication token's actual value. This token is only provided in this response, and can never be retrieved again in the future. Be sure to save it somewhere safe!
             * @example uRKJSTt0L4RaSkiMj41QTkxM
             */
            bearerToken: string
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Get Auth Token Metadata
   * @description Retrieve metadata about an authentication token belonging to the currently authenticated User.
   */
  getAuthToken: {
    parameters: {
      path: {
        /** @description The identifier of the token to retrieve. The special value \"current\" may be supplied, which returns the metadata for the token that the current HTTP request is authenticated with. */
        tokenId: string
      }
    }
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          'application/json': {
            token: components['schemas']['AuthToken']
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description Token not found with the requested `tokenId`. */
      404: {
        content: never
      }
    }
  }
  /**
   * Delete an authentication token
   * @description Invalidate an authentication token, such that it will no longer be valid for future HTTP requests.
   */
  deleteAuthToken: {
    parameters: {
      path: {
        /** @description The identifier of the token to invalidate. The special value \"current\" may be supplied, which invalidates the token that the HTTP request was authenticated with. */
        tokenId: string
      }
    }
    responses: {
      /** @description Authentication token successfully deleted. */
      200: {
        content: {
          'application/json': {
            /**
             * @description The unique identifier of the token that was deleted.
             * @example 5d9f2ebd38ddca62e5d51e9c1704c72530bdc8bfdd41e782a6687c48399e8391
             */
            tokenId: string
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description Token not found with the requested `tokenId`. */
      404: {
        content: never
      }
    }
  }
  /**
   * Get a list of webhooks
   * @description Get a list of webhooks
   */
  getWebhooks: {
    parameters: {
      query?: {
        projectId?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                projectsMetadata:
                  | {
                      id: string
                      name: string
                      /** @enum {string|null} */
                      framework?:
                        | 'blitzjs'
                        | 'nextjs'
                        | 'gatsby'
                        | 'remix'
                        | 'astro'
                        | 'hexo'
                        | 'eleventy'
                        | 'docusaurus-2'
                        | 'docusaurus'
                        | 'preact'
                        | 'solidstart-1'
                        | 'solidstart'
                        | 'dojo'
                        | 'ember'
                        | 'vue'
                        | 'scully'
                        | 'ionic-angular'
                        | 'angular'
                        | 'polymer'
                        | 'svelte'
                        | 'sveltekit'
                        | 'sveltekit-1'
                        | 'ionic-react'
                        | 'create-react-app'
                        | 'gridsome'
                        | 'umijs'
                        | 'sapper'
                        | 'saber'
                        | 'stencil'
                        | 'nuxtjs'
                        | 'redwoodjs'
                        | 'hugo'
                        | 'jekyll'
                        | 'brunch'
                        | 'middleman'
                        | 'zola'
                        | 'hydrogen'
                        | 'vite'
                        | 'vitepress'
                        | 'vuepress'
                        | 'parcel'
                        | 'sanity'
                        | 'storybook'
                        | null
                      latestDeployment?: string
                    }[]
                  | null
                /**
                 * @description The webhooks events
                 * @example deployment.created
                 */
                events: (
                  | 'budget.reached'
                  | 'budget.reset'
                  | 'domain.created'
                  | 'deployment.created'
                  | 'deployment.error'
                  | 'deployment.canceled'
                  | 'deployment.succeeded'
                  | 'deployment.ready'
                  | 'deployment.check-rerequested'
                  | 'integration-configuration.permission-upgraded'
                  | 'integration-configuration.removed'
                  | 'integration-configuration.scope-change-confirmed'
                  | 'project.created'
                  | 'project.removed'
                  | 'deployment-checks-completed'
                  | 'deployment-ready'
                  | 'deployment-prepared'
                  | 'deployment-error'
                  | 'deployment-check-rerequested'
                  | 'deployment-canceled'
                  | 'project-created'
                  | 'project-removed'
                  | 'domain-created'
                  | 'deployment'
                  | 'integration-configuration-permission-updated'
                  | 'integration-configuration-removed'
                  | 'integration-configuration-scope-change-confirmed'
                  | 'test-webhook'
                )[]
                /**
                 * @description The webhook id
                 * @example account_hook_GflD6EYyo7F4ViYS
                 */
                id: string
                /**
                 * @description A string with the URL of the webhook
                 * @example https://my-webhook.com
                 */
                url: string
                /**
                 * @description The unique ID of the team the webhook belongs to
                 * @example ZspSRT4ljIEEmMHgoDwKWDei
                 */
                ownerId: string
                /**
                 * @description A number containing the date when the webhook was created in in milliseconds
                 * @example 1567024758130
                 */
                createdAt: number
                /**
                 * @description A number containing the date when the webhook was updated in in milliseconds
                 * @example 1567024758130
                 */
                updatedAt: number
                /**
                 * @description The ID of the projects the webhook is associated with
                 * @example [
                 *   "prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB"
                 * ]
                 */
                projectIds?: string[]
              }[],
              {
                /**
                 * @description The webhooks events
                 * @example deployment.created
                 */
                events: (
                  | 'budget.reached'
                  | 'budget.reset'
                  | 'domain.created'
                  | 'deployment.created'
                  | 'deployment.error'
                  | 'deployment.canceled'
                  | 'deployment.succeeded'
                  | 'deployment.ready'
                  | 'deployment.check-rerequested'
                  | 'integration-configuration.permission-upgraded'
                  | 'integration-configuration.removed'
                  | 'integration-configuration.scope-change-confirmed'
                  | 'project.created'
                  | 'project.removed'
                  | 'deployment-checks-completed'
                  | 'deployment-ready'
                  | 'deployment-prepared'
                  | 'deployment-error'
                  | 'deployment-check-rerequested'
                  | 'deployment-canceled'
                  | 'project-created'
                  | 'project-removed'
                  | 'domain-created'
                  | 'deployment'
                  | 'integration-configuration-permission-updated'
                  | 'integration-configuration-removed'
                  | 'integration-configuration-scope-change-confirmed'
                  | 'test-webhook'
                )[]
                /**
                 * @description The webhook id
                 * @example account_hook_GflD6EYyo7F4ViYS
                 */
                id: string
                /**
                 * @description A string with the URL of the webhook
                 * @example https://my-webhook.com
                 */
                url: string
                /**
                 * @description The unique ID of the team the webhook belongs to
                 * @example ZspSRT4ljIEEmMHgoDwKWDei
                 */
                ownerId: string
                /**
                 * @description A number containing the date when the webhook was created in in milliseconds
                 * @example 1567024758130
                 */
                createdAt: number
                /**
                 * @description A number containing the date when the webhook was updated in in milliseconds
                 * @example 1567024758130
                 */
                updatedAt: number
                /**
                 * @description The ID of the projects the webhook is associated with
                 * @example [
                 *   "prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB"
                 * ]
                 */
                projectIds?: string[]
              }[],
            ]
          >
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Creates a webhook
   * @description Creates a webhook
   */
  createWebhook: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** Format: uri */
          url: string
          events: (
            | 'budget.reached'
            | 'budget.reset'
            | 'domain.created'
            | 'deployment.created'
            | 'deployment.error'
            | 'deployment.canceled'
            | 'deployment.succeeded'
            | 'deployment.ready'
            | 'deployment.check-rerequested'
            | 'integration-configuration.permission-upgraded'
            | 'integration-configuration.removed'
            | 'integration-configuration.scope-change-confirmed'
            | 'project.created'
            | 'project.removed'
            | 'deployment-checks-completed'
            | 'deployment-ready'
            | 'deployment-prepared'
            | 'deployment-error'
            | 'deployment-check-rerequested'
            | 'deployment-canceled'
            | 'project-created'
            | 'project-removed'
            | 'domain-created'
            | 'deployment'
            | 'integration-configuration-permission-updated'
            | 'integration-configuration-removed'
            | 'integration-configuration-scope-change-confirmed'
            | 'test-webhook'
          )[]
          projectIds?: string[]
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            /** @description The webhook secret used to sign the payload */
            secret: string
            /**
             * @description The webhooks events
             * @example deployment.created
             */
            events: (
              | 'budget.reached'
              | 'budget.reset'
              | 'domain.created'
              | 'deployment.created'
              | 'deployment.error'
              | 'deployment.canceled'
              | 'deployment.succeeded'
              | 'deployment.ready'
              | 'deployment.check-rerequested'
              | 'integration-configuration.permission-upgraded'
              | 'integration-configuration.removed'
              | 'integration-configuration.scope-change-confirmed'
              | 'project.created'
              | 'project.removed'
              | 'deployment-checks-completed'
              | 'deployment-ready'
              | 'deployment-prepared'
              | 'deployment-error'
              | 'deployment-check-rerequested'
              | 'deployment-canceled'
              | 'project-created'
              | 'project-removed'
              | 'domain-created'
              | 'deployment'
              | 'integration-configuration-permission-updated'
              | 'integration-configuration-removed'
              | 'integration-configuration-scope-change-confirmed'
              | 'test-webhook'
            )[]
            /**
             * @description The webhook id
             * @example account_hook_GflD6EYyo7F4ViYS
             */
            id: string
            /**
             * @description A string with the URL of the webhook
             * @example https://my-webhook.com
             */
            url: string
            /**
             * @description The unique ID of the team the webhook belongs to
             * @example ZspSRT4ljIEEmMHgoDwKWDei
             */
            ownerId: string
            /**
             * @description A number containing the date when the webhook was created in in milliseconds
             * @example 1567024758130
             */
            createdAt: number
            /**
             * @description A number containing the date when the webhook was updated in in milliseconds
             * @example 1567024758130
             */
            updatedAt: number
            /**
             * @description The ID of the projects the webhook is associated with
             * @example [
             *   "prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB"
             * ]
             */
            projectIds?: string[]
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Get a webhook
   * @description Get a webhook
   */
  getWebhook: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        id: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            /**
             * @description The webhooks events
             * @example deployment.created
             */
            events: (
              | 'budget.reached'
              | 'budget.reset'
              | 'domain.created'
              | 'deployment.created'
              | 'deployment.error'
              | 'deployment.canceled'
              | 'deployment.succeeded'
              | 'deployment.ready'
              | 'deployment.check-rerequested'
              | 'integration-configuration.permission-upgraded'
              | 'integration-configuration.removed'
              | 'integration-configuration.scope-change-confirmed'
              | 'project.created'
              | 'project.removed'
              | 'deployment-checks-completed'
              | 'deployment-ready'
              | 'deployment-prepared'
              | 'deployment-error'
              | 'deployment-check-rerequested'
              | 'deployment-canceled'
              | 'project-created'
              | 'project-removed'
              | 'domain-created'
              | 'deployment'
              | 'integration-configuration-permission-updated'
              | 'integration-configuration-removed'
              | 'integration-configuration-scope-change-confirmed'
              | 'test-webhook'
            )[]
            /**
             * @description The webhook id
             * @example account_hook_GflD6EYyo7F4ViYS
             */
            id: string
            /**
             * @description A string with the URL of the webhook
             * @example https://my-webhook.com
             */
            url: string
            /**
             * @description The unique ID of the team the webhook belongs to
             * @example ZspSRT4ljIEEmMHgoDwKWDei
             */
            ownerId: string
            /**
             * @description A number containing the date when the webhook was created in in milliseconds
             * @example 1567024758130
             */
            createdAt: number
            /**
             * @description A number containing the date when the webhook was updated in in milliseconds
             * @example 1567024758130
             */
            updatedAt: number
            /**
             * @description The ID of the projects the webhook is associated with
             * @example [
             *   "prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB"
             * ]
             */
            projectIds?: string[]
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Deletes a webhook
   * @description Deletes a webhook
   */
  deleteWebhook: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        id: string
      }
    }
    responses: {
      204: {
        content: never
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * List aliases
   * @description Retrieves a list of aliases for the authenticated User or Team. When `domain` is provided, only aliases for that domain will be returned. When `projectId` is provided, it will only return the given project aliases.
   */
  listAliases: {
    parameters: {
      query?: {
        /** @description Get only aliases of the given domain name */
        domain?: unknown[] | string
        /** @description Get only aliases created after the provided timestamp */
        from?: number
        /** @description Maximum number of aliases to list from a request */
        limit?: number
        /** @description Filter aliases from the given `projectId` */
        projectId?: string
        /** @description Get aliases created after this JavaScript timestamp */
        since?: number
        /** @description Get aliases created before this JavaScript timestamp */
        until?: number
        /** @description Get aliases that would be rolled back for the given deployment */
        rollbackDeploymentId?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description The paginated list of aliases */
      200: {
        content: {
          'application/json': {
            aliases: {
              /**
               * @description The alias name, it could be a `.vercel.app` subdomain or a custom domain
               * @example my-alias.vercel.app
               */
              alias: string
              /**
               * Format: date-time
               * @description The date when the alias was created
               * @example 2017-04-26T23:00:34.232Z
               */
              created: string
              /**
               * @description The date when the alias was created in milliseconds since the UNIX epoch
               * @example 1540095775941
               */
              createdAt?: number
              /** @description Information of the user who created the alias */
              creator?: {
                /**
                 * @description ID of the user who created the alias
                 * @example 96SnxkFiMyVKsK3pnoHfx3Hz
                 */
                uid: string
                /**
                 * @description Email of the user who created the alias
                 * @example john-doe@gmail.com
                 */
                email: string
                /**
                 * @description Username of the user who created the alias
                 * @example john-doe
                 */
                username: string
              }
              /**
               * @description The date when the alias was deleted in milliseconds since the UNIX epoch
               * @example 1540095775941
               */
              deletedAt?: number
              /** @description A map with the deployment ID, URL and metadata */
              deployment?: {
                /**
                 * @description The deployment unique identifier
                 * @example dpl_5m8CQaRBm3FnWRW1od3wKTpaECPx
                 */
                id: string
                /**
                 * @description The deployment unique URL
                 * @example my-instant-deployment-3ij3cxz9qr.now.sh
                 */
                url: string
                /**
                 * @description The deployment metadata
                 * @example {}
                 */
                meta?: string
              }
              /**
               * @description The deployment ID
               * @example dpl_5m8CQaRBm3FnWRW1od3wKTpaECPx
               */
              deploymentId: string | null
              /**
               * @description The unique identifier of the project
               * @example prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
               */
              projectId: string | null
              /** @description Target destination domain for redirect when the alias is a redirect */
              redirect?: string | null
              /**
               * @description Status code to be used on redirect
               * @enum {number|null}
               */
              redirectStatusCode?: 301 | 302 | 307 | 308 | null
              /** @description The unique identifier of the alias */
              uid: string
              /**
               * @description The date when the alias was updated in milliseconds since the UNIX epoch
               * @example 1540095775941
               */
              updatedAt?: number
              /** @description The protection bypass for the alias */
              protectionBypass?: {
                [key: string]: OneOf<
                  [
                    {
                      createdAt: number
                      createdBy: string
                      /** @enum {string} */
                      scope: 'shareable-link'
                    },
                    {
                      createdAt: number
                      lastUpdatedAt: number
                      lastUpdatedBy: string
                      /** @enum {string} */
                      access: 'requested' | 'granted'
                      /** @enum {string} */
                      scope: 'user'
                    },
                    {
                      createdAt: number
                      createdBy: string
                      /** @enum {string} */
                      scope: 'alias-protection-override'
                    },
                    {
                      createdAt: number
                      lastUpdatedAt: number
                      lastUpdatedBy: string
                      /** @enum {string} */
                      scope: 'email_invite'
                    },
                  ]
                >
              }
            }[]
            pagination: components['schemas']['Pagination']
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Get an Alias
   * @description Retrieves an Alias for the given host name or alias ID.
   */
  getAlias: {
    parameters: {
      query?: {
        /** @description Get the alias only if it was created after the provided timestamp */
        from?: number
        /** @description Get the alias only if it is assigned to the provided project ID */
        projectId?: string
        /** @description Get the alias only if it was created after this JavaScript timestamp */
        since?: number
        /** @description Get the alias only if it was created before this JavaScript timestamp */
        until?: number
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The alias or alias ID to be retrieved */
        idOrAlias: string
      }
    }
    responses: {
      /** @description The alias information */
      200: {
        content: {
          'application/json': {
            /**
             * @description The alias name, it could be a `.vercel.app` subdomain or a custom domain
             * @example my-alias.vercel.app
             */
            alias: string
            /**
             * Format: date-time
             * @description The date when the alias was created
             * @example 2017-04-26T23:00:34.232Z
             */
            created: string
            /**
             * @description The date when the alias was created in milliseconds since the UNIX epoch
             * @example 1540095775941
             */
            createdAt?: number
            /** @description Information of the user who created the alias */
            creator?: {
              /**
               * @description ID of the user who created the alias
               * @example 96SnxkFiMyVKsK3pnoHfx3Hz
               */
              uid: string
              /**
               * @description Email of the user who created the alias
               * @example john-doe@gmail.com
               */
              email: string
              /**
               * @description Username of the user who created the alias
               * @example john-doe
               */
              username: string
            }
            /**
             * @description The date when the alias was deleted in milliseconds since the UNIX epoch
             * @example 1540095775941
             */
            deletedAt?: number
            /** @description A map with the deployment ID, URL and metadata */
            deployment?: {
              /**
               * @description The deployment unique identifier
               * @example dpl_5m8CQaRBm3FnWRW1od3wKTpaECPx
               */
              id: string
              /**
               * @description The deployment unique URL
               * @example my-instant-deployment-3ij3cxz9qr.now.sh
               */
              url: string
              /**
               * @description The deployment metadata
               * @example {}
               */
              meta?: string
            }
            /**
             * @description The deployment ID
             * @example dpl_5m8CQaRBm3FnWRW1od3wKTpaECPx
             */
            deploymentId: string | null
            /**
             * @description The unique identifier of the project
             * @example prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
             */
            projectId: string | null
            /** @description Target destination domain for redirect when the alias is a redirect */
            redirect?: string | null
            /**
             * @description Status code to be used on redirect
             * @enum {number|null}
             */
            redirectStatusCode?: 301 | 302 | 307 | 308 | null
            /** @description The unique identifier of the alias */
            uid: string
            /**
             * @description The date when the alias was updated in milliseconds since the UNIX epoch
             * @example 1540095775941
             */
            updatedAt?: number
            /** @description The protection bypass for the alias */
            protectionBypass?: {
              [key: string]: OneOf<
                [
                  {
                    createdAt: number
                    createdBy: string
                    /** @enum {string} */
                    scope: 'shareable-link'
                  },
                  {
                    createdAt: number
                    lastUpdatedAt: number
                    lastUpdatedBy: string
                    /** @enum {string} */
                    access: 'requested' | 'granted'
                    /** @enum {string} */
                    scope: 'user'
                  },
                  {
                    createdAt: number
                    createdBy: string
                    /** @enum {string} */
                    scope: 'alias-protection-override'
                  },
                  {
                    createdAt: number
                    lastUpdatedAt: number
                    lastUpdatedBy: string
                    /** @enum {string} */
                    scope: 'email_invite'
                  },
                ]
              >
            }
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The alias was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Delete an Alias
   * @description Delete an Alias with the specified ID.
   */
  deleteAlias: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID or alias that will be removed */
        aliasId: string
      }
    }
    responses: {
      /** @description The alias was successfully removed */
      200: {
        content: {
          'application/json': {
            /** @enum {string} */
            status: 'SUCCESS'
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The alias was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * List Deployment Aliases
   * @description Retrieves all Aliases for the Deployment with the given ID. The authenticated user or team must own the deployment.
   */
  listDeploymentAliases: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID of the deployment the aliases should be listed for */
        id: string
      }
    }
    responses: {
      /** @description The list of aliases assigned to the deployment */
      200: {
        content: {
          'application/json': {
            /** @description A list of the aliases assigned to the deployment */
            aliases: {
              /**
               * @description The unique identifier of the alias
               * @example 2WjyKQmM8ZnGcJsPWMrHRHrE
               */
              uid: string
              /**
               * @description The alias name, it could be a `.vercel.app` subdomain or a custom domain
               * @example my-alias.vercel.app
               */
              alias: string
              /**
               * Format: date-time
               * @description The date when the alias was created
               * @example 2017-04-26T23:00:34.232Z
               */
              created: string
              /** @description Target destination domain for redirect when the alias is a redirect */
              redirect?: string | null
              /** @description The protection bypass for the alias */
              protectionBypass?: {
                [key: string]: OneOf<
                  [
                    {
                      createdAt: number
                      createdBy: string
                      /** @enum {string} */
                      scope: 'shareable-link'
                    },
                    {
                      createdAt: number
                      lastUpdatedAt: number
                      lastUpdatedBy: string
                      /** @enum {string} */
                      access: 'requested' | 'granted'
                      /** @enum {string} */
                      scope: 'user'
                    },
                    {
                      createdAt: number
                      createdBy: string
                      /** @enum {string} */
                      scope: 'alias-protection-override'
                    },
                    {
                      createdAt: number
                      lastUpdatedAt: number
                      lastUpdatedBy: string
                      /** @enum {string} */
                      scope: 'email_invite'
                    },
                  ]
                >
              }
            }[]
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The deployment was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * Assign an Alias
   * @description Creates a new alias for the deployment with the given deployment ID. The authenticated user or team must own this deployment. If the desired alias is already assigned to another deployment, then it will be removed from the old deployment and assigned to the new one.
   */
  assignAlias: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID of the deployment the aliases should be listed for */
        id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The alias we want to assign to the deployment defined in the URL
           * @example my-alias.vercel.app
           */
          alias?: string
          /**
           * @description The redirect property will take precedence over the deployment id from the URL and consists of a hostname (like test.com) to which the alias should redirect using status code 307
           * @example null
           */
          redirect?: string | null
        }
      }
    }
    responses: {
      /** @description The alias was successfully assigned to the deployment */
      200: {
        content: {
          'application/json': {
            /**
             * @description The unique identifier of the alias
             * @example 2WjyKQmM8ZnGcJsPWMrHRHrE
             */
            uid: string
            /**
             * @description The assigned alias name
             * @example my-alias.vercel.app
             */
            alias: string
            /**
             * Format: date-time
             * @description The date when the alias was created
             * @example 2017-04-26T23:00:34.232Z
             */
            created: string
            /**
             * @description The unique identifier of the previously aliased deployment, only received when the alias was used before
             * @example dpl_FjvFJncQHQcZMznrUm9EoB8sFuPa
             */
            oldDeploymentId?: string | null
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       * The cert for the provided alias is not ready
       * The deployment is not READY and can not be aliased
       * The supplied alias is invalid
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * If no .vercel.app alias exists then we fail (nothing to mirror)
       */
      403: {
        content: never
      }
      /**
       * @description The domain used for the alias was not found
       * The deployment was not found
       */
      404: {
        content: never
      }
      /**
       * @description The provided alias is already assigned to the given deployment
       * The domain is not allowed to be used
       */
      409: {
        content: never
      }
    }
  }
  /**
   * Get cert by id
   * @description Get cert by id
   */
  getCertById: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The cert id */
        id: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
            createdAt: number
            expiresAt: number
            autoRenew: boolean
            cns: string[]
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Remove cert
   * @description Remove cert
   */
  removeCert: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The cert id to remove */
        id: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
    }
  }
  /**
   * Upload a cert
   * @description Upload a cert
   */
  uploadCert: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description The certificate authority */
          ca: string
          /** @description The certificate key */
          key: string
          /** @description The certificate */
          cert: string
          /** @description Skip validation of the certificate */
          skipValidation?: boolean
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
            createdAt: number
            expiresAt: number
            autoRenew: boolean
            cns: string[]
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description This feature is only available for Enterprise customers. */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
    }
  }
  /**
   * Issue a new cert
   * @description Issue a new cert
   */
  issueCert: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description The common names the cert should be issued for */
          cns?: string[]
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            id: string
            createdAt: number
            expiresAt: number
            autoRenew: boolean
            cns: string[]
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      449: {
        content: never
      }
      500: {
        content: never
      }
    }
  }
  /**
   * List Deployment Files
   * @description Allows to retrieve the file structure of a deployment by supplying the deployment unique identifier.
   */
  listDeploymentFiles: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique deployment identifier */
        id: string
      }
    }
    responses: {
      /** @description Retrieved the file tree successfully */
      200: {
        content: {
          'application/json': components['schemas']['FileTree'][]
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /**
       * @description File tree not found
       * Deployment not found
       */
      404: {
        content: never
      }
    }
  }
  /**
   * Get Deployment File Contents
   * @description Allows to retrieve the content of a file by supplying the file identifier and the deployment unique identifier. The response body will contain a JSON response containing the contents of the file encoded as base64.
   */
  getDeploymentFileContents: {
    parameters: {
      query?: {
        /** @description Path to the file to fetch (only for Git deployments) */
        path?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The unique deployment identifier */
        id: string
        /** @description The unique file identifier */
        fileId: string
      }
    }
    responses: {
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /**
       * @description File not found
       * Deployment not found
       */
      404: {
        content: never
      }
      /** @description Invalid API version. */
      410: {
        content: never
      }
    }
  }
  /**
   * List deployments
   * @description List deployments under the authenticated user or team. If a deployment hasn't finished uploading (is incomplete), the `url` property will have a value of `null`.
   */
  getDeployments: {
    parameters: {
      query?: {
        /** @description Name of the deployment. */
        app?: string
        /** @description Gets the deployment created after this Date timestamp. (default: current time) */
        from?: number
        /** @description Maximum number of deployments to list from a request. */
        limit?: number
        /** @description Filter deployments from the given `projectId`. */
        projectId?: string
        /** @description Filter deployments based on the environment. */
        target?: 'production' | 'preview'
        /** @description Gets the deployment created before this Date timestamp. (default: current time) */
        to?: number
        /** @description Filter out deployments based on users who have created the deployment. */
        users?: string
        /** @description Get Deployments created after this JavaScript timestamp. */
        since?: number
        /** @description Get Deployments created before this JavaScript timestamp. */
        until?: number
        /** @description Filter deployments based on their state (`BUILDING`, `ERROR`, `INITIALIZING`, `QUEUED`, `READY`, `CANCELED`) */
        state?: string
        /** @description Filter deployments based on their rollback candidacy */
        rollbackCandidate?: boolean
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            pagination: components['schemas']['Pagination']
            deployments: {
              /**
               * @description The unique identifier of the deployment.
               * @example dpl_2euZBFqxYdDMDG1jTrHFnNZ2eUVa
               */
              uid: string
              /**
               * @description The name of the deployment.
               * @example docs
               */
              name: string
              /**
               * @description The URL of the deployment.
               * @example docs-9jaeg38me.vercel.app
               */
              url: string
              /**
               * @description Timestamp of when the deployment got created.
               * @example 1609492210000
               */
              created: number
              /**
               * @description Timestamp of when the deployment got deleted.
               * @example 1609492210000
               */
              deleted?: number
              /**
               * @description Timestamp of when the deployment was undeleted.
               * @example 1609492210000
               */
              undeleted?: number
              /**
               * @description The source of the deployment.
               * @example cli
               * @enum {string}
               */
              source?:
                | 'api-trigger-git-deploy'
                | 'cli'
                | 'clone/repo'
                | 'git'
                | 'import'
                | 'import/repo'
              /**
               * @description In which state is the deployment.
               * @example READY
               * @enum {string}
               */
              state?:
                | 'BUILDING'
                | 'ERROR'
                | 'INITIALIZING'
                | 'QUEUED'
                | 'READY'
                | 'CANCELED'
                | 'DELETED'
              /**
               * @description In which state is the deployment.
               * @example READY
               * @enum {string}
               */
              readyState?:
                | 'BUILDING'
                | 'ERROR'
                | 'INITIALIZING'
                | 'QUEUED'
                | 'READY'
                | 'CANCELED'
              /**
               * @description The type of the deployment.
               * @example LAMBDAS
               * @enum {string}
               */
              type: 'LAMBDAS'
              /** @description Metadata information of the user who created the deployment. */
              creator: {
                /**
                 * @description The unique identifier of the user.
                 * @example eLrCnEgbKhsHyfbiNR7E8496
                 */
                uid: string
                /**
                 * @description The email address of the user.
                 * @example example@example.com
                 */
                email?: string
                /**
                 * @description The username of the user.
                 * @example johndoe
                 */
                username?: string
                /**
                 * @description The GitHub login of the user.
                 * @example johndoe
                 */
                githubLogin?: string
                /**
                 * @description The GitLab login of the user.
                 * @example johndoe
                 */
                gitlabLogin?: string
              }
              /** @description Metadata information from the Git provider. */
              meta?: {
                [key: string]: string
              }
              /**
               * @description On which environment has the deployment been deployed to.
               * @example production
               * @enum {string|null}
               */
              target?: 'production' | 'staging' | null
              /** @description An error object in case aliasing of the deployment failed. */
              aliasError?: {
                code: string
                message: string
              } | null
              aliasAssigned?: number | boolean | null
              /**
               * @description Timestamp of when the deployment got created.
               * @example 1609492210000
               */
              createdAt?: number
              /**
               * @description Timestamp of when the deployment started building at.
               * @example 1609492210000
               */
              buildingAt?: number
              /**
               * @description Timestamp of when the deployment got ready.
               * @example 1609492210000
               */
              ready?: number
              /**
               * @description Since June 2023 Substate of deployment when readyState is 'READY' Tracks whether or not deployment has seen production traffic: - STAGED: never seen production traffic - PROMOTED: has seen production traffic
               * @enum {string}
               */
              readySubstate?: 'STAGED' | 'PROMOTED'
              /**
               * @description State of all registered checks
               * @enum {string}
               */
              checksState?: 'registered' | 'running' | 'completed'
              /**
               * @description Conclusion for checks
               * @enum {string}
               */
              checksConclusion?: 'succeeded' | 'failed' | 'skipped' | 'canceled'
              /**
               * @description Vercel URL to inspect the deployment.
               * @example https://vercel.com/acme/nextjs/J1hXN00qjUeoYfpEEf7dnDtpSiVq
               */
              inspectorUrl: string | null
              /** @description Deployment can be used for instant rollback */
              isRollbackCandidate?: boolean | null
              /** @description The project settings which was used for this deployment */
              projectSettings?: {
                /** @enum {string|null} */
                framework?:
                  | 'blitzjs'
                  | 'nextjs'
                  | 'gatsby'
                  | 'remix'
                  | 'astro'
                  | 'hexo'
                  | 'eleventy'
                  | 'docusaurus-2'
                  | 'docusaurus'
                  | 'preact'
                  | 'solidstart-1'
                  | 'solidstart'
                  | 'dojo'
                  | 'ember'
                  | 'vue'
                  | 'scully'
                  | 'ionic-angular'
                  | 'angular'
                  | 'polymer'
                  | 'svelte'
                  | 'sveltekit'
                  | 'sveltekit-1'
                  | 'ionic-react'
                  | 'create-react-app'
                  | 'gridsome'
                  | 'umijs'
                  | 'sapper'
                  | 'saber'
                  | 'stencil'
                  | 'nuxtjs'
                  | 'redwoodjs'
                  | 'hugo'
                  | 'jekyll'
                  | 'brunch'
                  | 'middleman'
                  | 'zola'
                  | 'hydrogen'
                  | 'vite'
                  | 'vitepress'
                  | 'vuepress'
                  | 'parcel'
                  | 'sanity'
                  | 'storybook'
                  | null
                gitForkProtection?: boolean
                customerSupportCodeVisibility?: boolean
                gitLFS?: boolean
                devCommand?: string | null
                installCommand?: string | null
                buildCommand?: string | null
                /** @enum {string} */
                nodeVersion?:
                  | '20.x'
                  | '18.x'
                  | '16.x'
                  | '14.x'
                  | '12.x'
                  | '10.x'
                  | '8.10.x'
                outputDirectory?: string | null
                publicSource?: boolean | null
                rootDirectory?: string | null
                serverlessFunctionRegion?: string | null
                sourceFilesOutsideRootDirectory?: boolean
                commandForIgnoringBuildStep?: string | null
                createdAt?: number
                speedInsights?: {
                  id: string
                  enabledAt?: number
                  disabledAt?: number
                  canceledAt?: number
                  hasData?: boolean
                  paidAt?: number
                }
                webAnalytics?: {
                  id: string
                  disabledAt?: number
                  canceledAt?: number
                  enabledAt?: number
                  hasData?: boolean
                }
                skipGitConnectDuringLink?: boolean
                /** @description Since June '23 */
                gitComments?: {
                  /** @description Whether the Vercel bot should comment on PRs */
                  onPullRequest: boolean
                  /** @description Whether the Vercel bot should comment on commits */
                  onCommit: boolean
                }
              }
              /** @description The flag saying if Vercel Connect configuration is used for builds */
              connectBuildsEnabled?: boolean
              /** @description The ID of Vercel Connect configuration used for this deployment */
              connectConfigurationId?: string
              /** @description The ID of Vercel Connect configuration used for this deployment's passive functions */
              passiveConnectConfigurationId?: string
              /** @description The expiration configured by the project retention policy */
              expiration?: number
              /** @description The expiration proposed to replace the existing expiration */
              proposedExpiration?: number
            }[]
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      422: {
        content: never
      }
    }
  }
  /**
   * Verify a login request to get an authentication token
   * @description Verify the user accepted the login request and get a authentication token. The user email address and the token received after requesting the login must be added to the URL as a query string with the names `email` and `token`.
   */
  verifyToken: {
    parameters: {
      query: {
        /** @description Email to verify the login. */
        email?: string
        /** @description The token returned when the login was requested. */
        token: string
        /** @description The desired name for the token. It will be displayed on the user account details. */
        tokenName?: string
        /** @description The SAML Profile ID, when connecting a SAML Profile to a Team member for the first time. */
        ssoUserId?: string
        /** @description The name of this user's team. */
        teamName?: string
        /** @description The slug for this user's team. */
        teamSlug?: string
        /** @description The plan for this user's team (pro or hobby). */
        teamPlan?: 'pro' | 'hobby'
        /** @description Referrer to the session. */
        sessionReferrer?: string
        /** @description The page on which the user started their session. */
        landingPage?: string
        /** @description The page that sent the user to the signup page. */
        pageBeforeConversionPage?: string
        utmSource?: string
        utmMedium?: string
        utmCampaign?: string
        utmTerm?: string
        oppId?: string
      }
    }
    responses: {
      /** @description The verification was successful. */
      200: {
        content: {
          'application/json': {
            /**
             * @description The user authentication token that can be used to perform API requests.
             * @example 1ioXyz9Ue4xdCYGROet1dlKd
             */
            token: string
            /**
             * @description Email address of the authenticated user.
             * @example amy@example.com
             */
            email: string
            /**
             * @description When completing SAML Single Sign-On authentication, this will be the ID of the Team that was authenticated for.
             * @example team_LLHUOMOoDlqOp8wPE4kFo9pE
             */
            teamId?: string
          }
        }
      }
      /**
       * @description One of the provided values in the request query is invalid.
       * The slug is already in use
       * The provided token exists but is not yet confirmed
       */
      400: {
        content: never
      }
      /**
       * @description You do not have permission to access this resource.
       * The verification sso token is invalid or not found
       * The verification token is invalid or not found
       */
      403: {
        content: never
      }
      404: {
        content: never
      }
      503: {
        content: never
      }
    }
  }
  /**
   * Login with email
   * @description Request a new login for a user to get a token. This will respond with a verification token and send an email to confirm the request. Once confirmed you can use the verification token to get an authentication token.
   */
  emailLogin: {
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The user email.
           * @example user@mail.com
           */
          email: string
          /**
           * @description The desired name for the token. It will be displayed on the user account details.
           * @example Your Client App Name
           */
          tokenName?: string
        }
      }
    }
    responses: {
      /** @description The request was successful and an email was sent */
      200: {
        content: {
          'application/json': OneOf<
            [
              {
                token: string
                securityCode: string
              },
              {
                /**
                 * @description The token used to verify the user accepted the login request
                 * @example T1dmvPu36nmyYisXAs7IRzcR
                 */
                token: string
                /**
                 * @description The code the user is going to receive on the email. **Must** be displayed to the user so they can verify the request is the correct.
                 * @example Practical Saola
                 */
                securityCode: string
              },
            ]
          >
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * The provided email is invalid because the owner is blocked
       */
      400: {
        content: never
      }
    }
  }
  /**
   * Delete a Deployment
   * @description This API allows you to delete a deployment, either by supplying its `id` in the URL or the `url` of the deployment as a query parameter. You can obtain the ID, for example, by listing all deployments.
   */
  deleteDeployment: {
    parameters: {
      query?: {
        /** @description A Deployment or Alias URL. In case it is passed, the ID will be ignored */
        url?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The ID of the deployment to be deleted */
        id: string
      }
    }
    responses: {
      /** @description The deployment was successfully deleted */
      200: {
        content: {
          'application/json': {
            /**
             * @description The removed deployment ID.
             * @example dpl_5WJWYSyB7BpgTj3EuwF37WMRBXBtPQ2iTMJHJBJyRfd
             */
            uid: string
            /**
             * @description A constant with the final state of the deployment.
             * @enum {string}
             */
            state: 'DELETED'
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      /** @description The deployment was not found */
      404: {
        content: never
      }
    }
  }
  /**
   * List secrets
   * @description Retrieves the active Vercel secrets for the authenticated user or team. By default it returns 20 secrets. The rest can be retrieved using the pagination options. The body will contain an entry for each secret.
   */
  getSecrets: {
    parameters: {
      query?: {
        /** @description Filter out secrets based on comma separated secret ids. */
        id?: string
        /** @description Filter out secrets that belong to a project. */
        projectId?: string
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    responses: {
      /** @description Successful response retrieving a list of secrets. */
      200: {
        content: {
          'application/json': {
            secrets: {
              /**
               * Format: date-time
               * @description The date when the secret was created.
               * @example 2021-02-10T13:11:49.180Z
               */
              created: string
              /**
               * @description The name of the secret.
               * @example my-api-key
               */
              name: string
              /**
               * @description The unique identifier of the team the secret was created for.
               * @example team_LLHUOMOoDlqOp8wPE4kFo9pE
               */
              teamId?: string | null
              /**
               * @description The unique identifier of the secret.
               * @example sec_XCG7t7AIHuO2SBA8667zNUiM
               */
              uid: string
              /**
               * @description The unique identifier of the user who created the secret.
               * @example 2qDDuGFTWXBLDNnqZfWPDp1A
               */
              userId?: string
              /** @description The value of the secret. */
              value?: string
              /**
               * @description Timestamp for when the secret was created.
               * @example 1609492210000
               */
              createdAt?: number
              /**
               * @description The unique identifier of the project which the secret belongs to.
               * @example prj_2WjyKQmM8ZnGcJsPWMrHRHrE
               */
              projectId?: string
              /**
               * @description Indicates whether the secret value can be decrypted after it has been created.
               * @example true
               */
              decryptable?: boolean
            }[]
            pagination: components['schemas']['Pagination']
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      410: {
        content: never
      }
    }
  }
  /**
   * Create a new secret
   * @description Allows to create a new secret.
   */
  createSecret: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the secret (max 100 characters).
           * @example my-api-key
           */
          name: string
          /**
           * @description The value of the new secret.
           * @example some secret value
           */
          value: string
          /**
           * @description Whether the secret value can be decrypted after it has been created.
           * @example true
           */
          decryptable?: boolean
          /**
           * @deprecated
           * @description Associate a secret to a project.
           * @example prj_2WjyKQmM8ZnGcJsPWMrHRHrE
           */
          projectId?: string
        }
      }
    }
    responses: {
      /** @description Successful response showing the created secret. */
      200: {
        content: {
          'application/json': {
            value: {
              /** @enum {string} */
              type?: 'Buffer'
              data?: number[]
            }
            /**
             * Format: date-time
             * @description The date when the secret was created.
             * @example 2021-02-10T13:11:49.180Z
             */
            created: string
            /**
             * @description The name of the secret.
             * @example my-api-key
             */
            name: string
            /**
             * @description The unique identifier of the team the secret was created for.
             * @example team_LLHUOMOoDlqOp8wPE4kFo9pE
             */
            teamId?: string | null
            /**
             * @description The unique identifier of the secret.
             * @example sec_XCG7t7AIHuO2SBA8667zNUiM
             */
            uid: string
            /**
             * @description The unique identifier of the user who created the secret.
             * @example 2qDDuGFTWXBLDNnqZfWPDp1A
             */
            userId?: string
            /**
             * @description Timestamp for when the secret was created.
             * @example 1609492210000
             */
            createdAt?: number
            /**
             * @description The unique identifier of the project which the secret belongs to.
             * @example prj_2WjyKQmM8ZnGcJsPWMrHRHrE
             */
            projectId?: string
            /**
             * @description Indicates whether the secret value can be decrypted after it has been created.
             * @example true
             */
            decryptable?: boolean
          }
        }
      }
      /** @description One of the provided values in the request body is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /**
       * @description The account was soft-blocked for an unhandled reason.
       * The account is missing a payment so payment method must be updated
       */
      402: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      410: {
        content: never
      }
    }
  }
  /**
   * Change secret name
   * @description Enables to edit the name of a secret. The name has to be unique to the user or team’s secrets.
   */
  renameSecret: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The name of the secret. */
        name: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the new secret.
           * @example my-api-key
           */
          name: string
        }
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            uid: string
            name: string
            /** Format: date-time */
            created: string
            oldName: string
          }
        }
      }
      /**
       * @description One of the provided values in the request body is invalid.
       * One of the provided values in the request query is invalid.
       */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      410: {
        content: never
      }
    }
  }
  /**
   * Get a single secret
   * @description Retrieves the information for a specific secret by passing either the secret id or name in the URL.
   */
  getSecret: {
    parameters: {
      query?: {
        /** @description Whether to try to decrypt the value of the secret. Only works if `decryptable` has been set to `true` when the secret was created. */
        decrypt?: 'true' | 'false'
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The name or the unique identifier to which the secret belongs to. */
        idOrName: string
      }
    }
    responses: {
      /** @description Successful response retrieving a secret. */
      200: {
        content: {
          'application/json': {
            /**
             * Format: date-time
             * @description The date when the secret was created.
             * @example 2021-02-10T13:11:49.180Z
             */
            created: string
            /**
             * @description The name of the secret.
             * @example my-api-key
             */
            name: string
            /**
             * @description The unique identifier of the team the secret was created for.
             * @example team_LLHUOMOoDlqOp8wPE4kFo9pE
             */
            teamId?: string | null
            /**
             * @description The unique identifier of the secret.
             * @example sec_XCG7t7AIHuO2SBA8667zNUiM
             */
            uid: string
            /**
             * @description The unique identifier of the user who created the secret.
             * @example 2qDDuGFTWXBLDNnqZfWPDp1A
             */
            userId?: string
            /** @description The value of the secret. */
            value?: string
            /**
             * @description Timestamp for when the secret was created.
             * @example 1609492210000
             */
            createdAt?: number
            /**
             * @description The unique identifier of the project which the secret belongs to.
             * @example prj_2WjyKQmM8ZnGcJsPWMrHRHrE
             */
            projectId?: string
            /**
             * @description Indicates whether the secret value can be decrypted after it has been created.
             * @example true
             */
            decryptable?: boolean
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      404: {
        content: never
      }
      410: {
        content: never
      }
    }
  }
  /**
   * Delete a secret
   * @description This deletes the user or team’s secret defined in the URL.
   */
  deleteSecret: {
    parameters: {
      query?: {
        /** @description The Team identifier to perform the request on behalf of. */
        teamId?: string
        /** @description The Team slug to perform the request on behalf of. */
        slug?: string
      }
      path: {
        /** @description The name or the unique identifier to which the secret belongs to. */
        idOrName: string
      }
    }
    responses: {
      200: {
        content: {
          'application/json': {
            /**
             * @description The unique identifier of the deleted secret.
             * @example sec_XCG7t7AIHuO2SBA8667zNUiM
             */
            uid: string
            /**
             * @description The name of the deleted secret.
             * @example my-api-key
             */
            name: string
            /**
             * @description The date when the secret was created.
             * @example 2021-02-10T13:11:49.180Z
             */
            created: number
          }
        }
      }
      /** @description One of the provided values in the request query is invalid. */
      400: {
        content: never
      }
      401: {
        content: never
      }
      /** @description You do not have permission to access this resource. */
      403: {
        content: never
      }
      410: {
        content: never
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
