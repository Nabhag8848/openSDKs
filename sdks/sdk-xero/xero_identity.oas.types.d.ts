/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/Connections': {
    /**
     * Retrieves the connections for this user
     * @description Override the base server url that include version
     */
    get: operations['getConnections']
  }
  '/Connections/{id}': {
    /**
     * Deletes a connection for this user (i.e. disconnect a tenant)
     * @description Override the base server url that include version
     */
    delete: operations['deleteConnection']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    Connection: {
      /**
       * Format: uuid
       * @description Xero identifier
       */
      id?: string
      /**
       * Format: uuid
       * @description Xero identifier of organisation
       */
      tenantId?: string
      /**
       * Format: uuid
       * @description Identifier shared across connections authorised at the same time
       */
      authEventId?: string
      /** @description Xero tenant type (i.e. ORGANISATION, PRACTICE) */
      tenantType?: string
      /** @description Xero tenant name */
      tenantName?: string
      /**
       * Format: date-time
       * @description The date when the user connected this tenant to your app
       */
      createdDateUtc?: string
      /**
       * Format: date-time
       * @description The date when the user most recently connected this tenant to your app. May differ to the created date if the user has disconnected and subsequently reconnected this tenant to your app.
       */
      updatedDateUtc?: string
    }
    RefreshToken: {
      /** @description Xero grant type */
      grant_type?: string
      /** @description refresh token provided during authentication flow */
      refresh_token?: string
      /** @description client id for Xero app */
      client_id?: string
      /** @description client secret for Xero app 2 */
      client_secret?: string
    }
    AccessToken: {
      /** @description Xero unique identifier */
      id_token?: string
      /** @description access token provided during authentication flow */
      access_token?: string
      /**
       * Format: int64
       * @description time in seconds until access token expires.
       */
      expires_in?: number
      /** @description type of token i.e. Bearer */
      token_type?: string
      /** @description token used to refresh an expired access token */
      refresh_token?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Retrieves the connections for this user
   * @description Override the base server url that include version
   */
  getConnections: {
    parameters: {
      query?: {
        /**
         * @description Filter by authEventId
         * @example 00000000-0000-0000-0000-000000000000
         */
        authEventId?: string
      }
    }
    responses: {
      /** @description Success - return response of type Connections array with 0 to n Connection */
      200: {
        content: {
          'application/json': components['schemas']['Connection'][]
        }
      }
    }
  }
  /**
   * Deletes a connection for this user (i.e. disconnect a tenant)
   * @description Override the base server url that include version
   */
  deleteConnection: {
    parameters: {
      path: {
        /** @description Unique identifier for retrieving single object */
        id: string
      }
    }
    responses: {
      /** @description Success - connection has been deleted no content returned */
      204: {
        content: never
      }
      /** @description Resource not found */
      404: {
        content: never
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
