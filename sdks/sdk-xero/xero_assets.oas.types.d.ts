/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/Assets': {
    /**
     * searches fixed asset
     * @description By passing in the appropriate options, you can search for available fixed asset in the system
     */
    get: operations['getAssets']
    /**
     * adds a fixed asset
     * @description Adds an asset to the system
     */
    post: operations['createAsset']
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
      }
    }
  }
  '/Assets/{id}': {
    /**
     * Retrieves fixed asset by id
     * @description By passing in the appropriate asset id, you can search for
     * a specific fixed asset in the system
     */
    get: operations['getAssetById']
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
      }
    }
  }
  '/AssetTypes': {
    /**
     * searches fixed asset types
     * @description By passing in the appropriate options, you can search for available fixed asset types in the system
     */
    get: operations['getAssetTypes']
    /**
     * adds a fixed asset type
     * @description Adds an fixed asset type to the system
     */
    post: operations['createAssetType']
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
      }
    }
  }
  '/Settings': {
    /**
     * searches fixed asset settings
     * @description By passing in the appropriate options, you can search for available fixed asset types in the system
     */
    get: operations['getAssetSettings']
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
      }
    }
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    Assets: {
      pagination?: components['schemas']['Pagination']
      items?: components['schemas']['Asset'][]
    }
    Pagination: {
      /** @example 1 */
      page?: number
      /** @example 10 */
      pageSize?: number
      /** @example 1 */
      pageCount?: number
      /** @example 2 */
      itemCount?: number
    }
    Asset: {
      /**
       * Format: uuid
       * @description The Xero-generated Id for the asset
       * @example 3b5b3a38-5649-495f-87a1-14a4e5918634
       */
      assetId?: string
      /**
       * @description The name of the asset
       * @example Awesome Truck 3
       */
      assetName: string
      /**
       * Format: uuid
       * @description The Xero-generated Id for the asset type
       * @example 3b5b3a38-5649-495f-87a1-14a4e5918634
       */
      assetTypeId?: string
      /**
       * @description Must be unique.
       * @example FA-0013
       */
      assetNumber?: string
      /**
       * Format: date
       * @description The date the asset was purchased YYYY-MM-DD
       * @example 2015-07-01T00:00:00
       */
      purchaseDate?: string
      /**
       * Format: double
       * @description The purchase price of the asset
       * @example 1000.0000
       */
      purchasePrice?: number
      /**
       * Format: date
       * @description The date the asset was disposed
       * @example 2020-07-01T00:00:00
       */
      disposalDate?: string
      /**
       * Format: double
       * @description The price the asset was disposed at
       * @example 1.0000
       */
      disposalPrice?: number
      assetStatus?: components['schemas']['AssetStatus']
      /**
       * @description The date the asset’s warranty expires (if needed) YYYY-MM-DD
       * @example ca4c6b39-4f4f-43e8-98da-5e1f350a6694
       */
      warrantyExpiryDate?: string
      /**
       * @description The asset's serial number
       * @example ca4c6b39-4f4f-43e8-98da-5e1f350a6694
       */
      serialNumber?: string
      bookDepreciationSetting?: components['schemas']['BookDepreciationSetting']
      bookDepreciationDetail?: components['schemas']['BookDepreciationDetail']
      /**
       * @description Boolean to indicate whether depreciation can be rolled back for this asset individually. This is true if it doesn't have 'legacy' journal entries and if there is no lock period that would prevent this asset from rolling back.
       * @example true
       */
      canRollback?: boolean
      /**
       * Format: double
       * @description The accounting value of the asset
       * @example 0
       */
      accountingBookValue?: number
      /**
       * @description Boolean to indicate whether delete is enabled
       * @example true
       */
      isDeleteEnabledForDate?: boolean
    }
    /**
     * @description See Asset Status Codes.
     * @example Draft
     * @enum {string}
     */
    AssetStatus: 'Draft' | 'Registered' | 'Disposed'
    /**
     * @description See Asset Status Codes.
     * @example DRAFT
     * @enum {string}
     */
    AssetStatusQueryParam: 'DRAFT' | 'REGISTERED' | 'DISPOSED'
    AssetType: {
      /**
       * Format: uuid
       * @description Xero generated unique identifier for asset types
       * @example 5da209c5-5e19-4a43-b925-71b776c49ced
       */
      assetTypeId?: string
      /**
       * @description The name of the asset type
       * @example Computer Equipment
       */
      assetTypeName: string
      /**
       * Format: uuid
       * @description The asset account for fixed assets of this type
       * @example 24e260f1-bfc4-4766-ad7f-8a8ce01de879
       */
      fixedAssetAccountId?: string
      /**
       * Format: uuid
       * @description The expense account for the depreciation of fixed assets of this type
       * @example b23fc79b-d66b-44b0-a240-e138e086fcbc
       */
      depreciationExpenseAccountId?: string
      /**
       * Format: uuid
       * @description The account for accumulated depreciation of fixed assets of this type
       * @example ca4c6b39-4f4f-43e8-98da-5e1f350a6694
       */
      accumulatedDepreciationAccountId?: string
      bookDepreciationSetting: components['schemas']['BookDepreciationSetting']
      /**
       * @description All asset types that have accumulated depreciation for any assets that use them are deemed ‘locked’ and cannot be removed.
       * @example 33
       */
      locks?: number
    }
    BookDepreciationSetting: {
      /**
       * @description The method of depreciation applied to this asset. See Depreciation Methods
       * @example StraightLine
       * @enum {string}
       */
      depreciationMethod?:
        | 'NoDepreciation'
        | 'StraightLine'
        | 'DiminishingValue100'
        | 'DiminishingValue150'
        | 'DiminishingValue200'
        | 'FullDepreciation'
      /**
       * @description The method of averaging applied to this asset. See Averaging Methods
       * @example ActualDays
       * @enum {string}
       */
      averagingMethod?: 'FullMonth' | 'ActualDays'
      /**
       * Format: double
       * @description The rate of depreciation (e.g. 0.05)
       * @example 0.05
       */
      depreciationRate?: number
      /**
       * @description Effective life of the asset in years (e.g. 5)
       * @example 5
       */
      effectiveLifeYears?: number
      /**
       * @description See Depreciation Calculation Methods
       * @example None
       * @enum {string}
       */
      depreciationCalculationMethod?: 'Rate' | 'Life' | 'None'
      /**
       * Format: uuid
       * @description Unique Xero identifier for the depreciable object
       * @example 68f17094-af97-4f1b-b36b-013b45b6ad3c
       */
      depreciableObjectId?: string
      /**
       * @description The type of asset object
       * @example Asset
       */
      depreciableObjectType?: string
      /**
       * Format: uuid
       * @description Unique Xero identifier for the effective date change
       * @example 68f17094-af97-4f1b-b36b-013b45b6ad3c
       */
      bookEffectiveDateOfChangeId?: string
    }
    BookDepreciationDetail: {
      /**
       * Format: double
       * @description When an asset is disposed, this will be the sell price minus the purchase price if a profit was made.
       * @example 5.25
       */
      currentCapitalGain?: number
      /**
       * Format: double
       * @description When an asset is disposed, this will be the lowest one of sell price or purchase price, minus the current book value.
       * @example 10.5
       */
      currentGainLoss?: number
      /**
       * Format: date
       * @description YYYY-MM-DD
       * @example 2015-07-01T00:00:00
       */
      depreciationStartDate?: string
      /**
       * Format: double
       * @description The value of the asset you want to depreciate, if this is less than the cost of the asset.
       * @example 9000
       */
      costLimit?: number
      /**
       * Format: double
       * @description The value of the asset remaining when you've fully depreciated it.
       * @example 10000
       */
      residualValue?: number
      /**
       * Format: double
       * @description All depreciation prior to the current financial year.
       * @example 0.45
       */
      priorAccumDepreciationAmount?: number
      /**
       * Format: double
       * @description All depreciation occurring in the current financial year.
       * @example 5
       */
      currentAccumDepreciationAmount?: number
    }
    Setting: {
      /**
       * @description The prefix used for fixed asset numbers (“FA-” by default)
       * @example FA-
       */
      assetNumberPrefix?: string
      /**
       * @description The next available sequence number
       * @example 0022
       */
      assetNumberSequence?: string
      /**
       * Format: date
       * @description The date depreciation calculations started on registered fixed assets in Xero
       * @example 2015-07-31T00:00:00
       */
      assetStartDate?: string
      /**
       * Format: date
       * @description The last depreciation date
       * @example 2015-07-01T00:00:00
       */
      lastDepreciationDate?: string
      /**
       * Format: uuid
       * @description Default account that gains are posted to
       * @example 346ddb97-739a-4274-b43b-66aa3218d17c
       */
      defaultGainOnDisposalAccountId?: string
      /**
       * Format: uuid
       * @description Default account that losses are posted to
       * @example 1b798541-24e2-4855-9309-c023a0b576f3
       */
      defaultLossOnDisposalAccountId?: string
      /**
       * Format: uuid
       * @description Default account that capital gains are posted to
       * @example 6d6a0bdb-e118-45d8-a023-2ad617ec1cb7
       */
      defaultCapitalGainOnDisposalAccountId?: string
      /**
       * @description opt in for tax calculation
       * @example false
       */
      optInForTax?: boolean
    }
    Error: {
      /** @description Array of elements of resource validation errors */
      resourceValidationErrors?: components['schemas']['ResourceValidationErrorsElement'][]
      /** @description Array of elements of field validation errors */
      fieldValidationErrors?: components['schemas']['FieldValidationErrorsElement'][]
      /** @description The internal type of error, not accessible externally */
      type?: string
      /** @description Title of the error */
      title?: string
      /** @description Detail of the error */
      detail?: string
    }
    ResourceValidationErrorsElement: {
      /** @description The field name of the erroneous field */
      resourceName?: string
      /** @description Explanation of the resource validation error */
      localisedMessage?: string
      /** @description Internal type of the resource error message */
      type?: string
      /** @description Title of the resource validation error */
      title?: string
      /** @description Detail of the resource validation error */
      detail?: string
    }
    FieldValidationErrorsElement: {
      /** @description The field name of the erroneous field */
      fieldName?: string
      /** @description The provided value */
      valueProvided?: string
      /** @description Explanation of the field validation error */
      localisedMessage?: string
      /** @description Internal type of the field validation error message */
      type?: string
      /** @description Title of the field validation error */
      title?: string
      /** @description Detail of the field validation error */
      detail?: string
    }
  }
  responses: never
  parameters: {
    /**
     * @description Xero identifier for Tenant
     * @example YOUR_XERO_TENANT_ID
     */
    requiredHeader?: string
    /**
     * @description This allows you to safely retry requests without the risk of duplicate processing. 128 character max.
     * @example KEY_VALUE
     */
    idempotencyKey?: string
  }
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * searches fixed asset
   * @description By passing in the appropriate options, you can search for available fixed asset in the system
   */
  getAssets: {
    parameters: {
      query: {
        /** @description Required when retrieving a collection of assets. See Asset Status Codes */
        status: components['schemas']['AssetStatusQueryParam']
        /** @description Results are paged. This specifies which page of the results to return. The default page is 1. */
        page?: number
        /** @description The number of records returned per page. By default the number of records returned is 10. */
        pageSize?: number
        /** @description Requests can be ordered by AssetType, AssetName, AssetNumber, PurchaseDate and PurchasePrice. If the asset status is DISPOSED it also allows DisposalDate and DisposalPrice. */
        orderBy?:
          | 'AssetType'
          | 'AssetName'
          | 'AssetNumber'
          | 'PurchaseDate'
          | 'PurchasePrice'
          | 'DisposalDate'
          | 'DisposalPrice'
        /** @description ASC or DESC */
        sortDirection?: 'asc' | 'desc'
        /** @description A string that can be used to filter the list to only return assets containing the text. Checks it against the AssetName, AssetNumber, Description and AssetTypeName fields. */
        filterBy?: string
      }
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
      }
    }
    responses: {
      /** @description search results matching criteria */
      200: {
        content: {
          'application/json': components['schemas']['Assets']
        }
      }
      /** @description bad input parameter */
      400: {
        content: never
      }
    }
  }
  /**
   * adds a fixed asset
   * @description Adds an asset to the system
   */
  createAsset: {
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
        'Idempotency-Key'?: components['parameters']['idempotencyKey']
      }
    }
    /** @description Fixed asset you are creating */
    requestBody: {
      content: {
        /** @example {  "assetName":"Computer74863", "assetNumber":"123477544", "purchaseDate":"2020-01-01", "purchasePrice":100.0, "disposalPrice":23.23, "assetStatus":"Draft", "bookDepreciationSetting":{  "depreciationMethod":"StraightLine", "averagingMethod":"ActualDays", "depreciationRate":0.5, "depreciationCalculationMethod":"None" }, "bookDepreciationDetail":{  "currentCapitalGain":5.32, "currentGainLoss":3.88, "depreciationStartDate":"2020-01-02", "costLimit":100.0, "currentAccumDepreciationAmount":2.25 }, "AccountingBookValue":99.5 } */
        'application/json': components['schemas']['Asset']
      }
    }
    responses: {
      /** @description return single object - create new asset */
      200: {
        content: {
          'application/json': components['schemas']['Asset']
        }
      }
      /** @description invalid input, object invalid */
      400: {
        content: {
          'application/json': unknown
        }
      }
    }
  }
  /**
   * Retrieves fixed asset by id
   * @description By passing in the appropriate asset id, you can search for
   * a specific fixed asset in the system
   */
  getAssetById: {
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
      }
      path: {
        /** @description fixed asset id for single object */
        id: string
      }
    }
    responses: {
      /** @description search results matching criteria */
      200: {
        content: {
          'application/json': components['schemas']['Asset']
        }
      }
      /** @description bad input parameter */
      400: {
        content: never
      }
    }
  }
  /**
   * searches fixed asset types
   * @description By passing in the appropriate options, you can search for available fixed asset types in the system
   */
  getAssetTypes: {
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
      }
    }
    responses: {
      /** @description search results matching criteria */
      200: {
        content: {
          'application/json': components['schemas']['AssetType'][]
        }
      }
      /** @description bad input parameter */
      400: {
        content: never
      }
    }
  }
  /**
   * adds a fixed asset type
   * @description Adds an fixed asset type to the system
   */
  createAssetType: {
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
        'Idempotency-Key'?: components['parameters']['idempotencyKey']
      }
    }
    /** @description Asset type to add */
    requestBody: {
      content: {
        /** @example {  "assetTypeName":"Machinery11004", "fixedAssetAccountId":"3d8d063a-c148-4bb8-8b3c-a5e2ad3b1e82", "depreciationExpenseAccountId":"d1602f69-f900-4616-8d34-90af393fa368", "accumulatedDepreciationAccountId":"9195cadd-8645-41e6-9f67-7bcd421defe8", "bookDepreciationSetting":{  "depreciationMethod":"DiminishingValue100", "averagingMethod":"ActualDays", "depreciationRate":0.05, "depreciationCalculationMethod":"None" } } */
        'application/json': components['schemas']['AssetType']
      }
    }
    responses: {
      /** @description results single object -  created fixed type */
      200: {
        content: {
          'application/json': components['schemas']['AssetType']
        }
      }
      /** @description invalid input, object invalid */
      400: {
        content: {
          'application/json': unknown
        }
      }
      /** @description a type already exists */
      409: {
        content: never
      }
    }
  }
  /**
   * searches fixed asset settings
   * @description By passing in the appropriate options, you can search for available fixed asset types in the system
   */
  getAssetSettings: {
    parameters: {
      header?: {
        'xero-tenant-id'?: components['parameters']['requiredHeader']
      }
    }
    responses: {
      /** @description search results matching criteria */
      200: {
        content: {
          'application/json': components['schemas']['Setting']
        }
      }
      /** @description bad input parameter */
      400: {
        content: never
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
