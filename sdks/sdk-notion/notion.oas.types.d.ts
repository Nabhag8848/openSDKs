/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

/** OneOf type helpers */
type Without<T, U> = {[P in Exclude<keyof T, keyof U>]?: never}
type XOR<T, U> = T | U extends object
  ? (Without<T, U> & U) | (Without<U, T> & T)
  : T | U
type OneOf<T extends any[]> = T extends [infer Only]
  ? Only
  : T extends [infer A, infer B, ...infer Rest]
    ? OneOf<[XOR<A, B>, ...Rest]>
    : never

export interface paths {
  '/v1/users/{user_id}': {
    /** Retrieve a user */
    get: operations['get-user']
  }
  '/v1/users': {
    /** List all users */
    get: operations['get-users']
  }
  '/v1/databases/{database_id}/query': {
    /** Query a database */
    post: operations['post-database-query']
  }
  '/v1/search': {
    /** Search by title */
    post: operations['post-search']
  }
  '/v1/blocks/{block_id}/children': {
    /** Retrieve block children */
    get: operations['get-block-children']
    /** Append block children */
    patch: operations['patch-block-children']
  }
  '/v1/blocks/{block_id}': {
    /** Retrieve a block */
    get: operations['retrieve-a-block']
    /** Delete a block */
    delete: operations['delete-a-block']
    /** Update a block */
    patch: operations['update-a-block']
  }
  '/v1/pages/{page_id}': {
    /** Retrieve a page */
    get: operations['retrieve-a-page']
    /** Update page properties */
    patch: operations['patch-page']
  }
  '/v1/pages': {
    /** Create a page */
    post: operations['post-page']
  }
  '/v1/databases': {
    /** Create a database */
    post: operations['create-a-database']
  }
  '/v1/databases/{database_id}': {
    /** Retrieve a database */
    get: operations['retrieve-a-database']
    /** Update a database */
    patch: operations['update-a-database']
  }
  '/v1/pages/{page_id}/properties/{property_id}': {
    /** Retrieve a page property item */
    get: operations['retrieve-a-page-property']
  }
  '/v1/users/me': {
    /** Retrieve your token's bot user */
    get: operations['get-self']
  }
  '/v1/comments': {
    /**
     * Retrieve comments
     * @description Retrieves a list of un-resolved [Comment objects](ref:comment-object) from a page or block.
     */
    get: operations['retrieve-a-comment']
    /**
     * Create comment
     * @description Creates a comment in a page or existing discussion thread.
     */
    post: operations['create-a-comment']
  }
  '/v1/oauth/token': {
    /**
     * Create a token
     * @description Creates an access token that a third-party service can use to authenticate with Notion.
     */
    post: operations['create-a-token']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: never
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /** Retrieve a user */
  'get-user': {
    parameters: {
      header: {
        'Notion-Version': string
      }
      path: {
        /** @description Identifier for a Notion user */
        user_id: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** List all users */
  'get-users': {
    parameters: {
      query?: {
        /** @description If supplied, this endpoint will return a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results. */
        start_cursor?: string
        /** @description The number of items from the full list desired in the response. Maximum: 100 */
        page_size?: number
      }
      header: {
        'Notion-Version': string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Query a database */
  'post-database-query': {
    parameters: {
      query?: {
        /** @description A list of page property value IDs associated with the database. Use this param to limit the response to a specific page property value or values for pages that meet the `filter` criteria. */
        filter_properties?: string
      }
      header: {
        'Notion-Version': string
      }
      path: {
        /** @description Identifier for a Notion database. */
        database_id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * Format: json
           * @description When supplied, limits which pages are returned based on the [filter conditions](ref:post-database-query-filter).
           */
          filter?: string
          /** @description When supplied, orders the results based on the provided [sort criteria](ref:post-database-query-sort). */
          sorts?: unknown[]
          /** @description When supplied, returns a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results. */
          start_cursor?: string
          /**
           * Format: int32
           * @description The number of items from the full list desired in the response. Maximum: 100
           * @default 100
           */
          page_size?: number
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example list */
            object?: string
            results?: {
              /** @example page */
              object?: string
              /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
              id?: string
              /** @example 2022-03-01T19:05:00.000Z */
              created_time?: string
              /** @example 2022-07-06T20:25:00.000Z */
              last_edited_time?: string
              created_by?: {
                /** @example user */
                object?: string
                /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
                id?: string
              }
              last_edited_by?: {
                /** @example user */
                object?: string
                /** @example 0c3e9826-b8f7-4f73-927d-2caaf86f1103 */
                id?: string
              }
              cover?: {
                /** @example external */
                type?: string
                external?: {
                  /** @example https://upload.wikimedia.org/wikipedia/commons/6/62/Tuscankale.jpg */
                  url?: string
                }
              }
              icon?: {
                /** @example emoji */
                type?: string
                /** @example ðŸ¥¬ */
                emoji?: string
              }
              parent?: {
                /** @example database_id */
                type?: string
                /** @example d9824bdc-8445-4327-be8b-5b47500af6ce */
                database_id?: string
              }
              /**
               * @default true
               * @example false
               */
              archived?: boolean
              properties?: {
                'Store availability'?: {
                  /** @example %3AUPp */
                  id?: string
                  /** @example multi_select */
                  type?: string
                  multi_select?: {
                    /** @example t|O@ */
                    id?: string
                    /** @example Gus's Community Market */
                    name?: string
                    /** @example yellow */
                    color?: string
                  }[]
                }
                'Food group'?: {
                  /** @example A%40Hk */
                  id?: string
                  /** @example select */
                  type?: string
                  select?: {
                    /** @example 5e8e7e8f-432e-4d8a-8166-1821e10225fc */
                    id?: string
                    /** @example ðŸ¥¬ Vegetable */
                    name?: string
                    /** @example pink */
                    color?: string
                  }
                }
                Price?: {
                  /** @example BJXS */
                  id?: string
                  /** @example number */
                  type?: string
                  /**
                   * @default 0
                   * @example 2.5
                   */
                  number?: number
                }
                'Responsible Person'?: {
                  /** @example Iowm */
                  id?: string
                  /** @example people */
                  type?: string
                  people?: {
                    /** @example user */
                    object?: string
                    /** @example cbfe3c6e-71cf-4cd3-b6e7-02f38f371bcc */
                    id?: string
                    /** @example Cristina Cordova */
                    name?: string
                    /** @example https://lh6.googleusercontent.com/-rapvfCoTq5A/AAAAAAAAAAI/AAAAAAAAAAA/AKF05nDKmmUpkpFvWNBzvu9rnZEy7cbl8Q/photo.jpg */
                    avatar_url?: string
                    /** @example person */
                    type?: string
                    person?: {
                      /** @example cristina@makenotion.com */
                      email?: string
                    }
                  }[]
                }
                'Last ordered'?: {
                  /** @example Jsfb */
                  id?: string
                  /** @example date */
                  type?: string
                  date?: {
                    /** @example 2022-02-22 */
                    start?: string
                    end?: unknown
                    time_zone?: unknown
                  }
                }
                'Cost of next trip'?: {
                  /** @example WOd%3B */
                  id?: string
                  /** @example formula */
                  type?: string
                  formula?: {
                    /** @example number */
                    type?: string
                    /**
                     * @default 0
                     * @example 0
                     */
                    number?: number
                  }
                }
                Recipes?: {
                  /** @example YfIu */
                  id?: string
                  /** @example relation */
                  type?: string
                  relation?: {
                    /** @example 90eeeed8-2cdd-4af4-9cc1-3d24aff5f63c */
                    id?: string
                  }[]
                  /**
                   * @default true
                   * @example false
                   */
                  has_more?: boolean
                }
                Description?: {
                  /** @example _Tc_ */
                  id?: string
                  /** @example rich_text */
                  type?: string
                  rich_text?: {
                    /** @example text */
                    type?: string
                    text?: {
                      /** @example A dark */
                      content?: string
                      link?: unknown
                    }
                    annotations?: {
                      /**
                       * @default true
                       * @example false
                       */
                      bold?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      italic?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      strikethrough?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      underline?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      code?: boolean
                      /** @example default */
                      color?: string
                    }
                    /** @example A dark */
                    plain_text?: string
                    href?: unknown
                  }[]
                }
                'In stock'?: {
                  /** @example %60%5Bq%3F */
                  id?: string
                  /** @example checkbox */
                  type?: string
                  /**
                   * @default true
                   * @example true
                   */
                  checkbox?: boolean
                }
                'Number of meals'?: {
                  /** @example zag~ */
                  id?: string
                  /** @example rollup */
                  type?: string
                  rollup?: {
                    /** @example number */
                    type?: string
                    /**
                     * @default 0
                     * @example 2
                     */
                    number?: number
                    /** @example count */
                    function?: string
                  }
                }
                Photo?: {
                  /** @example %7DF_L */
                  id?: string
                  /** @example url */
                  type?: string
                  /** @example https://i.insider.com/612fb23c9ef1e50018f93198?width=1136&format=jpeg */
                  url?: string
                }
                Name?: {
                  /** @example title */
                  id?: string
                  /** @example title */
                  type?: string
                  title?: {
                    /** @example text */
                    type?: string
                    text?: {
                      /** @example Tuscan kale */
                      content?: string
                      link?: unknown
                    }
                    annotations?: {
                      /**
                       * @default true
                       * @example false
                       */
                      bold?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      italic?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      strikethrough?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      underline?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      code?: boolean
                      /** @example default */
                      color?: string
                    }
                    /** @example Tuscan kale */
                    plain_text?: string
                    href?: unknown
                  }[]
                }
              }
              /** @example https://www.notion.so/Tuscan-kale-598337872cf94fdf8782e53db20768a5 */
              url?: string
            }[]
            next_cursor?: unknown
            /**
             * @default true
             * @example false
             */
            has_more?: boolean
            /** @example page_or_database */
            type?: string
            page_or_database?: Record<string, never>
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Search by title */
  'post-search': {
    parameters: {
      header: {
        'Notion-Version': string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description The text that the API compares page and database titles against. */
          query?: string
          /** @description A set of criteria, `direction` and `timestamp` keys, that orders the results. The **only** supported timestamp value is `"last_edited_time"`. Supported `direction` values are `"ascending"` and `"descending"`. If `sort` is not provided, then the most recently edited results are returned first. */
          sort?: {
            /** @description The direction to sort. Possible values include `ascending` and `descending`. */
            direction?: string
            /** @description The name of the timestamp to sort against. Possible values include `last_edited_time`. */
            timestamp?: string
          }
          /** @description A set of criteria, `value` and `property` keys, that limits the results to either only pages or only databases. Possible `value` values are `"page"` or `"database"`. The only supported `property` value is `"object"`. */
          filter?: {
            /** @description The value of the property to filter the results by.  Possible values for object type include `page` or `database`.  **Limitation**: Currently the only filter allowed is `object` which will filter by type of object (either `page` or `database`) */
            value?: string
            /** @description The name of the property to filter by. Currently the only property you can filter by is the object type.  Possible values include `object`.   Limitation: Currently the only filter allowed is `object` which will filter by type of object (either `page` or `database`) */
            property?: string
          }
          /** @description A `cursor` value returned in a previous response that If supplied, limits the response to results starting after the `cursor`. If not supplied, then the first page of results is returned. Refer to [pagination](https://developers.notion.com/reference/intro#pagination) for more details. */
          start_cursor?: string
          /**
           * Format: int32
           * @description The number of items from the full list to include in the response. Maximum: `100`.
           * @default 100
           */
          page_size?: number
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example list */
            object?: string
            results?: {
              /** @example page */
              object?: string
              /** @example 954b67f9-3f87-41db-8874-23b92bbd31ee */
              id?: string
              /** @example 2022-07-06T19:30:00.000Z */
              created_time?: string
              /** @example 2022-07-06T19:30:00.000Z */
              last_edited_time?: string
              created_by?: {
                /** @example user */
                object?: string
                /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
                id?: string
              }
              last_edited_by?: {
                /** @example user */
                object?: string
                /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
                id?: string
              }
              cover?: {
                /** @example external */
                type?: string
                external?: {
                  /** @example https://upload.wikimedia.org/wikipedia/commons/6/62/Tuscankale.jpg */
                  url?: string
                }
              }
              icon?: {
                /** @example emoji */
                type?: string
                /** @example ðŸ¥¬ */
                emoji?: string
              }
              parent?: {
                /** @example database_id */
                type?: string
                /** @example d9824bdc-8445-4327-be8b-5b47500af6ce */
                database_id?: string
              }
              /**
               * @default true
               * @example false
               */
              archived?: boolean
              properties?: {
                'Store availability'?: {
                  /** @example %3AUPp */
                  id?: string
                  /** @example multi_select */
                  type?: string
                  multi_select?: unknown[]
                }
                'Food group'?: {
                  /** @example A%40Hk */
                  id?: string
                  /** @example select */
                  type?: string
                  select?: {
                    /** @example 5e8e7e8f-432e-4d8a-8166-1821e10225fc */
                    id?: string
                    /** @example ðŸ¥¬ Vegetable */
                    name?: string
                    /** @example pink */
                    color?: string
                  }
                }
                Price?: {
                  /** @example BJXS */
                  id?: string
                  /** @example number */
                  type?: string
                  number?: unknown
                }
                'Responsible Person'?: {
                  /** @example Iowm */
                  id?: string
                  /** @example people */
                  type?: string
                  people?: unknown[]
                }
                'Last ordered'?: {
                  /** @example Jsfb */
                  id?: string
                  /** @example date */
                  type?: string
                  date?: unknown
                }
                'Cost of next trip'?: {
                  /** @example WOd%3B */
                  id?: string
                  /** @example formula */
                  type?: string
                  formula?: {
                    /** @example number */
                    type?: string
                    number?: unknown
                  }
                }
                Recipes?: {
                  /** @example YfIu */
                  id?: string
                  /** @example relation */
                  type?: string
                  relation?: unknown[]
                }
                Description?: {
                  /** @example _Tc_ */
                  id?: string
                  /** @example rich_text */
                  type?: string
                  rich_text?: {
                    /** @example text */
                    type?: string
                    text?: {
                      /** @example A dark green leafy vegetable */
                      content?: string
                      link?: unknown
                    }
                    annotations?: {
                      /**
                       * @default true
                       * @example false
                       */
                      bold?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      italic?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      strikethrough?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      underline?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      code?: boolean
                      /** @example default */
                      color?: string
                    }
                    /** @example A dark green leafy vegetable */
                    plain_text?: string
                    href?: unknown
                  }[]
                }
                'In stock'?: {
                  /** @example %60%5Bq%3F */
                  id?: string
                  /** @example checkbox */
                  type?: string
                  /**
                   * @default true
                   * @example false
                   */
                  checkbox?: boolean
                }
                'Number of meals'?: {
                  /** @example zag~ */
                  id?: string
                  /** @example rollup */
                  type?: string
                  rollup?: {
                    /** @example number */
                    type?: string
                    /**
                     * @default 0
                     * @example 0
                     */
                    number?: number
                    /** @example count */
                    function?: string
                  }
                }
                Photo?: {
                  /** @example %7DF_L */
                  id?: string
                  /** @example url */
                  type?: string
                  url?: unknown
                }
                Name?: {
                  /** @example title */
                  id?: string
                  /** @example title */
                  type?: string
                  title?: {
                    /** @example text */
                    type?: string
                    text?: {
                      /** @example Tuscan kale */
                      content?: string
                      link?: unknown
                    }
                    annotations?: {
                      /**
                       * @default true
                       * @example false
                       */
                      bold?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      italic?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      strikethrough?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      underline?: boolean
                      /**
                       * @default true
                       * @example false
                       */
                      code?: boolean
                      /** @example default */
                      color?: string
                    }
                    /** @example Tuscan kale */
                    plain_text?: string
                    href?: unknown
                  }[]
                }
              }
              /** @example https://www.notion.so/Tuscan-kale-954b67f93f8741db887423b92bbd31ee */
              url?: string
            }[]
            next_cursor?: unknown
            /**
             * @default true
             * @example false
             */
            has_more?: boolean
            /** @example page_or_database */
            type?: string
            page_or_database?: Record<string, never>
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 400
             */
            status?: number
            /** @example invalid_json */
            code?: string
            /** @example Error parsing JSON body. */
            message?: string
          }
        }
      }
      /** @description 429 */
      429: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 429
             */
            status?: number
            /** @example rate_limited */
            code?: string
            /** @example You have been rate limited. Please try again in a few minutes. */
            message?: string
          }
        }
      }
    }
  }
  /** Retrieve block children */
  'get-block-children': {
    parameters: {
      query?: {
        /** @description If supplied, this endpoint will return a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results. */
        start_cursor?: string
        /** @description The number of items from the full list desired in the response. Maximum: 100 */
        page_size?: number
      }
      header: {
        'Notion-Version': string
      }
      path: {
        /** @description Identifier for a [block](ref:block) */
        block_id: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example list */
            object?: string
            results?: {
              /** @example block */
              object?: string
              /** @example c02fc1d3-db8b-45c5-a222-27595b15aea7 */
              id?: string
              parent?: {
                /** @example page_id */
                type?: string
                /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
                page_id?: string
              }
              /** @example 2022-03-01T19:05:00.000Z */
              created_time?: string
              /** @example 2022-03-01T19:05:00.000Z */
              last_edited_time?: string
              created_by?: {
                /** @example user */
                object?: string
                /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
                id?: string
              }
              last_edited_by?: {
                /** @example user */
                object?: string
                /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
                id?: string
              }
              /**
               * @default true
               * @example false
               */
              has_children?: boolean
              /**
               * @default true
               * @example false
               */
              archived?: boolean
              /** @example heading_2 */
              type?: string
              heading_2?: {
                rich_text?: {
                  /** @example text */
                  type?: string
                  text?: {
                    /** @example Lacinato kale */
                    content?: string
                    link?: unknown
                  }
                  annotations?: {
                    /**
                     * @default true
                     * @example false
                     */
                    bold?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    italic?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    strikethrough?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    underline?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    code?: boolean
                    /** @example default */
                    color?: string
                  }
                  /** @example Lacinato kale */
                  plain_text?: string
                  href?: unknown
                }[]
                /** @example default */
                color?: string
                /**
                 * @default true
                 * @example false
                 */
                is_toggleable?: boolean
              }
            }[]
            next_cursor?: unknown
            /**
             * @default true
             * @example false
             */
            has_more?: boolean
            /** @example block */
            type?: string
            block?: Record<string, never>
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Append block children */
  'patch-block-children': {
    parameters: {
      header: {
        'Notion-Version': string
      }
      path: {
        /** @description Identifier for a [block](ref:block). Also accepts a [page](ref:page) ID. */
        block_id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description Child content to append to a container block as an array of [block objects](ref:block) */
          children: unknown[]
          /** @description The ID of the existing block that the new block should be appended after. */
          after?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example list */
            object?: string
            results?: {
              /** @example block */
              object?: string
              /** @example c02fc1d3-db8b-45c5-a222-27595b15aea7 */
              id?: string
              parent?: {
                /** @example page_id */
                type?: string
                /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
                page_id?: string
              }
              /** @example 2022-03-01T19:05:00.000Z */
              created_time?: string
              /** @example 2022-07-06T19:41:00.000Z */
              last_edited_time?: string
              created_by?: {
                /** @example user */
                object?: string
                /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
                id?: string
              }
              last_edited_by?: {
                /** @example user */
                object?: string
                /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
                id?: string
              }
              /**
               * @default true
               * @example false
               */
              has_children?: boolean
              /**
               * @default true
               * @example false
               */
              archived?: boolean
              /** @example heading_2 */
              type?: string
              heading_2?: {
                rich_text?: {
                  /** @example text */
                  type?: string
                  text?: {
                    /** @example Lacinato kale */
                    content?: string
                    link?: unknown
                  }
                  annotations?: {
                    /**
                     * @default true
                     * @example false
                     */
                    bold?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    italic?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    strikethrough?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    underline?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    code?: boolean
                    /** @example default */
                    color?: string
                  }
                  /** @example Lacinato kale */
                  plain_text?: string
                  href?: unknown
                }[]
                /** @example default */
                color?: string
                /**
                 * @default true
                 * @example false
                 */
                is_toggleable?: boolean
              }
            }[]
            next_cursor?: unknown
            /**
             * @default true
             * @example false
             */
            has_more?: boolean
            /** @example block */
            type?: string
            block?: Record<string, never>
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Retrieve a block */
  'retrieve-a-block': {
    parameters: {
      header?: {
        'Notion-Version'?: string
      }
      path: {
        /** @description Identifier for a Notion block */
        block_id: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example block */
            object?: string
            /** @example c02fc1d3-db8b-45c5-a222-27595b15aea7 */
            id?: string
            parent?: {
              /** @example page_id */
              type?: string
              /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
              page_id?: string
            }
            /** @example 2022-03-01T19:05:00.000Z */
            created_time?: string
            /** @example 2022-03-01T19:05:00.000Z */
            last_edited_time?: string
            created_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            last_edited_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            /**
             * @default true
             * @example false
             */
            has_children?: boolean
            /**
             * @default true
             * @example false
             */
            archived?: boolean
            /** @example heading_2 */
            type?: string
            heading_2?: {
              rich_text?: {
                /** @example text */
                type?: string
                text?: {
                  /** @example Lacinato kale */
                  content?: string
                  link?: unknown
                }
                annotations?: {
                  /**
                   * @default true
                   * @example false
                   */
                  bold?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  italic?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  strikethrough?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  underline?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  code?: boolean
                  /** @example default */
                  color?: string
                }
                /** @example Lacinato kale */
                plain_text?: string
                href?: unknown
              }[]
              /** @example default */
              color?: string
              /**
               * @default true
               * @example false
               */
              is_toggleable?: boolean
            }
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Delete a block */
  'delete-a-block': {
    parameters: {
      header?: {
        'Notion-Version'?: string
      }
      path: {
        /** @description Identifier for a Notion block */
        block_id: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example block */
            object?: string
            /** @example 7985540b-2e77-4ac6-8615-c3047e36f872 */
            id?: string
            parent?: {
              /** @example page_id */
              type?: string
              /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
              page_id?: string
            }
            /** @example 2022-07-06T19:52:00.000Z */
            created_time?: string
            /** @example 2022-07-06T19:52:00.000Z */
            last_edited_time?: string
            created_by?: {
              /** @example user */
              object?: string
              /** @example 0c3e9826-b8f7-4f73-927d-2caaf86f1103 */
              id?: string
            }
            last_edited_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            /**
             * @default true
             * @example false
             */
            has_children?: boolean
            /**
             * @default true
             * @example true
             */
            archived?: boolean
            /** @example paragraph */
            type?: string
            paragraph?: {
              rich_text?: unknown[]
              /** @example default */
              color?: string
            }
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Update a block */
  'update-a-block': {
    parameters: {
      header?: {
        'Notion-Version'?: string
      }
      path: {
        /** @description Identifier for a Notion block */
        block_id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description The [block object `type`](ref:block#block-object-keys) value with the properties to be updated. Currently only `text` (for supported block types) and `checked` (for `to_do` blocks) fields can be updated. */
          '{type}'?: Record<string, never>
          /**
           * @description Set to true to archive (delete) a block. Set to false to un-archive (restore) a block.
           * @default true
           */
          archived?: boolean
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example block */
            object?: string
            /** @example c02fc1d3-db8b-45c5-a222-27595b15aea7 */
            id?: string
            parent?: {
              /** @example page_id */
              type?: string
              /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
              page_id?: string
            }
            /** @example 2022-03-01T19:05:00.000Z */
            created_time?: string
            /** @example 2022-07-06T19:41:00.000Z */
            last_edited_time?: string
            created_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            last_edited_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            /**
             * @default true
             * @example false
             */
            has_children?: boolean
            /**
             * @default true
             * @example false
             */
            archived?: boolean
            /** @example heading_2 */
            type?: string
            heading_2?: {
              rich_text?: {
                /** @example text */
                type?: string
                text?: {
                  /** @example Lacinato kale */
                  content?: string
                  link?: unknown
                }
                annotations?: {
                  /**
                   * @default true
                   * @example false
                   */
                  bold?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  italic?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  strikethrough?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  underline?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  code?: boolean
                  /** @example green */
                  color?: string
                }
                /** @example Lacinato kale */
                plain_text?: string
                href?: unknown
              }[]
              /** @example default */
              color?: string
              /**
               * @default true
               * @example false
               */
              is_toggleable?: boolean
            }
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Retrieve a page */
  'retrieve-a-page': {
    parameters: {
      query?: {
        /** @description A list of page property value IDs associated with the page. Use this param to limit the response to a specific page property value or values. To retrieve multiple properties, specify each page property ID. For example: `?filter_properties=iAk8&filter_properties=b7dh`. */
        filter_properties?: string
      }
      header: {
        'Notion-Version': string
      }
      path: {
        /** @description Identifier for a Notion page */
        page_id: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example page */
            object?: string
            /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
            id?: string
            /** @example 2022-03-01T19:05:00.000Z */
            created_time?: string
            /** @example 2022-07-06T20:25:00.000Z */
            last_edited_time?: string
            created_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            last_edited_by?: {
              /** @example user */
              object?: string
              /** @example 0c3e9826-b8f7-4f73-927d-2caaf86f1103 */
              id?: string
            }
            cover?: {
              /** @example external */
              type?: string
              external?: {
                /** @example https://upload.wikimedia.org/wikipedia/commons/6/62/Tuscankale.jpg */
                url?: string
              }
            }
            icon?: {
              /** @example emoji */
              type?: string
              /** @example ðŸ¥¬ */
              emoji?: string
            }
            parent?: {
              /** @example database_id */
              type?: string
              /** @example d9824bdc-8445-4327-be8b-5b47500af6ce */
              database_id?: string
            }
            /**
             * @default true
             * @example false
             */
            archived?: boolean
            properties?: {
              'Store availability'?: {
                /** @example %3AUPp */
                id?: string
                /** @example multi_select */
                type?: string
                multi_select?: {
                  /** @example t|O@ */
                  id?: string
                  /** @example Gus's Community Market */
                  name?: string
                  /** @example yellow */
                  color?: string
                }[]
              }
              'Food group'?: {
                /** @example A%40Hk */
                id?: string
                /** @example select */
                type?: string
                select?: {
                  /** @example 5e8e7e8f-432e-4d8a-8166-1821e10225fc */
                  id?: string
                  /** @example ðŸ¥¬ Vegetable */
                  name?: string
                  /** @example pink */
                  color?: string
                }
              }
              Price?: {
                /** @example BJXS */
                id?: string
                /** @example number */
                type?: string
                /**
                 * @default 0
                 * @example 2.5
                 */
                number?: number
              }
              'Responsible Person'?: {
                /** @example Iowm */
                id?: string
                /** @example people */
                type?: string
                people?: {
                  /** @example user */
                  object?: string
                  /** @example cbfe3c6e-71cf-4cd3-b6e7-02f38f371bcc */
                  id?: string
                  /** @example Cristina Cordova */
                  name?: string
                  /** @example https://lh6.googleusercontent.com/-rapvfCoTq5A/AAAAAAAAAAI/AAAAAAAAAAA/AKF05nDKmmUpkpFvWNBzvu9rnZEy7cbl8Q/photo.jpg */
                  avatar_url?: string
                  /** @example person */
                  type?: string
                  person?: {
                    /** @example cristina@makenotion.com */
                    email?: string
                  }
                }[]
              }
              'Last ordered'?: {
                /** @example Jsfb */
                id?: string
                /** @example date */
                type?: string
                date?: {
                  /** @example 2022-02-22 */
                  start?: string
                  end?: unknown
                  time_zone?: unknown
                }
              }
              'Cost of next trip'?: {
                /** @example WOd%3B */
                id?: string
                /** @example formula */
                type?: string
                formula?: {
                  /** @example number */
                  type?: string
                  /**
                   * @default 0
                   * @example 0
                   */
                  number?: number
                }
              }
              Recipes?: {
                /** @example YfIu */
                id?: string
                /** @example relation */
                type?: string
                relation?: {
                  /** @example 90eeeed8-2cdd-4af4-9cc1-3d24aff5f63c */
                  id?: string
                }[]
                /**
                 * @default true
                 * @example false
                 */
                has_more?: boolean
              }
              Description?: {
                /** @example _Tc_ */
                id?: string
                /** @example rich_text */
                type?: string
                rich_text?: {
                  /** @example text */
                  type?: string
                  text?: {
                    /** @example A dark */
                    content?: string
                    link?: unknown
                  }
                  annotations?: {
                    /**
                     * @default true
                     * @example false
                     */
                    bold?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    italic?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    strikethrough?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    underline?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    code?: boolean
                    /** @example default */
                    color?: string
                  }
                  /** @example A dark */
                  plain_text?: string
                  href?: unknown
                }[]
              }
              'In stock'?: {
                /** @example %60%5Bq%3F */
                id?: string
                /** @example checkbox */
                type?: string
                /**
                 * @default true
                 * @example true
                 */
                checkbox?: boolean
              }
              'Number of meals'?: {
                /** @example zag~ */
                id?: string
                /** @example rollup */
                type?: string
                rollup?: {
                  /** @example number */
                  type?: string
                  /**
                   * @default 0
                   * @example 2
                   */
                  number?: number
                  /** @example count */
                  function?: string
                }
              }
              Photo?: {
                /** @example %7DF_L */
                id?: string
                /** @example url */
                type?: string
                /** @example https://i.insider.com/612fb23c9ef1e50018f93198?width=1136&format=jpeg */
                url?: string
              }
              Name?: {
                /** @example title */
                id?: string
                /** @example title */
                type?: string
                title?: {
                  /** @example text */
                  type?: string
                  text?: {
                    /** @example Tuscan kale */
                    content?: string
                    link?: unknown
                  }
                  annotations?: {
                    /**
                     * @default true
                     * @example false
                     */
                    bold?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    italic?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    strikethrough?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    underline?: boolean
                    /**
                     * @default true
                     * @example false
                     */
                    code?: boolean
                    /** @example default */
                    color?: string
                  }
                  /** @example Tuscan kale */
                  plain_text?: string
                  href?: unknown
                }[]
              }
            }
            /** @example https://www.notion.so/Tuscan-kale-598337872cf94fdf8782e53db20768a5 */
            url?: string
            public_url?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Update page properties */
  'patch-page': {
    parameters: {
      header?: {
        'Notion-Version'?: string
      }
      path: {
        /** @description The identifier for the Notion page to be updated. */
        page_id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * Format: json
           * @description The property values to update for the page. The keys are the names or IDs of the property and the values are property values. If a page property ID is not included, then it is not changed.
           */
          properties?: string
          /**
           * @description Set to true to delete a block. Set to false to restore a block.
           * @default false
           */
          in_trash?: boolean
          /**
           * Format: json
           * @description A page icon for the page. Supported types are [external file object](https://developers.notion.com/reference/file-object) or [emoji object](https://developers.notion.com/reference/emoji-object).
           */
          icon?: string
          /**
           * Format: json
           * @description A cover image for the page. Only [external file objects](https://developers.notion.com/reference/file-object) are supported.
           */
          cover?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example page */
            object?: string
            /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
            id?: string
            /** @example 2022-03-01T19:05:00.000Z */
            created_time?: string
            /** @example 2022-07-06T19:16:00.000Z */
            last_edited_time?: string
            created_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            last_edited_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            cover?: {
              /** @example external */
              type?: string
              external?: {
                /** @example https://upload.wikimedia.org/wikipedia/commons/6/62/Tuscankale.jpg */
                url?: string
              }
            }
            icon?: {
              /** @example emoji */
              type?: string
              /** @example ðŸ¥¬ */
              emoji?: string
            }
            parent?: {
              /** @example database_id */
              type?: string
              /** @example d9824bdc-8445-4327-be8b-5b47500af6ce */
              database_id?: string
            }
            /**
             * @default true
             * @example false
             */
            archived?: boolean
            properties?: {
              'Store availability'?: {
                /** @example %3AUPp */
                id?: string
              }
              'Food group'?: {
                /** @example A%40Hk */
                id?: string
              }
              Price?: {
                /** @example BJXS */
                id?: string
              }
              'Responsible Person'?: {
                /** @example Iowm */
                id?: string
              }
              'Last ordered'?: {
                /** @example Jsfb */
                id?: string
              }
              'Cost of next trip'?: {
                /** @example WOd%3B */
                id?: string
              }
              Recipes?: {
                /** @example YfIu */
                id?: string
              }
              Description?: {
                /** @example _Tc_ */
                id?: string
              }
              'In stock'?: {
                /** @example %60%5Bq%3F */
                id?: string
              }
              'Number of meals'?: {
                /** @example zag~ */
                id?: string
              }
              Photo?: {
                /** @example %7DF_L */
                id?: string
              }
              Name?: {
                /** @example title */
                id?: string
              }
            }
            /** @example https://www.notion.so/Tuscan-Kale-598337872cf94fdf8782e53db20768a5 */
            url?: string
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description 404 */
      404: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 404
             */
            status?: number
            /** @example object_not_found */
            code?: string
            /** @example Could not find page with ID: 4cc3b486-0b48-4cfe-8ce9-67c47100eb6a. Make sure the relevant pages and databases are shared with your integration. */
            message?: string
          }
        }
      }
      /** @description 429 */
      429: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 429
             */
            status?: number
            /** @example rate_limited */
            code?: string
            /** @example You have been rate limited. Please try again in a few minutes. */
            message?: string
          }
        }
      }
    }
  }
  /** Create a page */
  'post-page': {
    parameters: {
      header: {
        'Notion-Version': string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * Format: json
           * @description The parent page or database where the new page is inserted, represented as a JSON object with a `page_id` or `database_id` key, and the corresponding ID.
           */
          parent: string
          /**
           * Format: json
           * @description The values of the pageâ€™s properties. If the `parent` is a database, then the schema must match the parent databaseâ€™s properties. If the `parent` is a page, then the only valid object key is `title`.
           */
          properties: string
          /** @description The content to be rendered on the new page, represented as an array of [block objects](https://developers.notion.com/reference/block). */
          children?: string[]
          /**
           * Format: json
           * @description The icon of the new page. Either an [emoji object](https://developers.notion.com/reference/emoji-object) or an [external file object](https://developers.notion.com/reference/file-object)..
           */
          icon?: string
          /**
           * Format: json
           * @description The cover image of the new page, represented as a [file object](https://developers.notion.com/reference/file-object).
           */
          cover?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example page */
            object?: string
            /** @example 59833787-2cf9-4fdf-8782-e53db20768a5 */
            id?: string
            /** @example 2022-03-01T19:05:00.000Z */
            created_time?: string
            /** @example 2022-07-06T19:16:00.000Z */
            last_edited_time?: string
            created_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            last_edited_by?: {
              /** @example user */
              object?: string
              /** @example ee5f0f84-409a-440f-983a-a5315961c6e4 */
              id?: string
            }
            cover?: {
              /** @example external */
              type?: string
              external?: {
                /** @example https://upload.wikimedia.org/wikipedia/commons/6/62/Tuscankale.jpg */
                url?: string
              }
            }
            icon?: {
              /** @example emoji */
              type?: string
              /** @example ðŸ¥¬ */
              emoji?: string
            }
            parent?: {
              /** @example database_id */
              type?: string
              /** @example d9824bdc-8445-4327-be8b-5b47500af6ce */
              database_id?: string
            }
            /**
             * @default true
             * @example false
             */
            archived?: boolean
            properties?: {
              'Store availability'?: {
                /** @example %3AUPp */
                id?: string
              }
              'Food group'?: {
                /** @example A%40Hk */
                id?: string
              }
              Price?: {
                /** @example BJXS */
                id?: string
              }
              'Responsible Person'?: {
                /** @example Iowm */
                id?: string
              }
              'Last ordered'?: {
                /** @example Jsfb */
                id?: string
              }
              'Cost of next trip'?: {
                /** @example WOd%3B */
                id?: string
              }
              Recipes?: {
                /** @example YfIu */
                id?: string
              }
              Description?: {
                /** @example _Tc_ */
                id?: string
              }
              'In stock'?: {
                /** @example %60%5Bq%3F */
                id?: string
              }
              'Number of meals'?: {
                /** @example zag~ */
                id?: string
              }
              Photo?: {
                /** @example %7DF_L */
                id?: string
              }
              Name?: {
                /** @example title */
                id?: string
              }
            }
            /** @example https://www.notion.so/Tuscan-Kale-598337872cf94fdf8782e53db20768a5 */
            url?: string
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description 404 */
      404: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 404
             */
            status?: number
            /** @example object_not_found */
            code?: string
            /** @example Could not find page with ID: 4cc3b486-0b48-4cfe-8ce9-67c47100eb6a. Make sure the relevant pages and databases are shared with your integration. */
            message?: string
          }
        }
      }
      /** @description 429 */
      429: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 429
             */
            status?: number
            /** @example rate_limited */
            code?: string
            /** @example You have been rate limited. Please try again in a few minutes. */
            message?: string
          }
        }
      }
    }
  }
  /** Create a database */
  'create-a-database': {
    parameters: {
      header: {
        'Notion-Version': string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * Format: json
           * @description A [page parent](/reference/database#page-parent)
           */
          parent: string
          /** @description Title of database as it appears in Notion. An array of [rich text objects](ref:rich-text). */
          title?: unknown[]
          /**
           * Format: json
           * @description Property schema of database. The keys are the names of properties as they appear in Notion and the values are [property schema objects](https://developers.notion.com/reference/property-schema-object).
           */
          properties: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /** Retrieve a database */
  'retrieve-a-database': {
    parameters: {
      header: {
        'Notion-Version': string
      }
      path: {
        /** @description An identifier for the Notion database. */
        database_id: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example database */
            object?: string
            /** @example bc1211ca-e3f1-4939-ae34-5260b16f627c */
            id?: string
            /** @example 2021-07-08T23:50:00.000Z */
            created_time?: string
            /** @example 2021-07-08T23:50:00.000Z */
            last_edited_time?: string
            icon?: {
              /** @example emoji */
              type?: string
              /** @example ðŸŽ‰ */
              emoji?: string
            }
            cover?: {
              /** @example external */
              type?: string
              external?: {
                /** @example https://website.domain/images/image.png */
                url?: string
              }
            }
            /** @example https://www.notion.so/bc1211cae3f14939ae34260b16f627c */
            url?: string
            title?: {
              /** @example text */
              type?: string
              text?: {
                /** @example Grocery List */
                content?: string
                link?: unknown
              }
              annotations?: {
                /**
                 * @default true
                 * @example false
                 */
                bold?: boolean
                /**
                 * @default true
                 * @example false
                 */
                italic?: boolean
                /**
                 * @default true
                 * @example false
                 */
                strikethrough?: boolean
                /**
                 * @default true
                 * @example false
                 */
                underline?: boolean
                /**
                 * @default true
                 * @example false
                 */
                code?: boolean
                /** @example default */
                color?: string
              }
              /** @example Grocery List */
              plain_text?: string
              href?: unknown
            }[]
            description?: {
              /** @example text */
              type?: string
              text?: {
                /** @example Grocery list for just kale ðŸ¥¬ */
                content?: string
                link?: unknown
              }
              annotations?: {
                /**
                 * @default true
                 * @example false
                 */
                bold?: boolean
                /**
                 * @default true
                 * @example false
                 */
                italic?: boolean
                /**
                 * @default true
                 * @example false
                 */
                strikethrough?: boolean
                /**
                 * @default true
                 * @example false
                 */
                underline?: boolean
                /**
                 * @default true
                 * @example false
                 */
                code?: boolean
                /** @example default */
                color?: string
              }
              /** @example Grocery list for just kale ðŸ¥¬ */
              plain_text?: string
              href?: unknown
            }[]
            properties?: {
              '+1'?: {
                /** @example Wp%3DC */
                id?: string
                /** @example +1 */
                name?: string
                /** @example people */
                type?: string
                people?: Record<string, never>
              }
              'In stock'?: {
                /** @example fk%5EY */
                id?: string
                /** @example In stock */
                name?: string
                /** @example checkbox */
                type?: string
                checkbox?: Record<string, never>
              }
              Price?: {
                /** @example evWq */
                id?: string
                /** @example Price */
                name?: string
                /** @example number */
                type?: string
                number?: {
                  /** @example dollar */
                  format?: string
                }
              }
              Description?: {
                /** @example V}lX */
                id?: string
                /** @example Description */
                name?: string
                /** @example rich_text */
                type?: string
                rich_text?: Record<string, never>
              }
              'Last ordered'?: {
                /** @example eVnV */
                id?: string
                /** @example Last ordered */
                name?: string
                /** @example date */
                type?: string
                date?: Record<string, never>
              }
              Meals?: {
                /** @example %7DWA~ */
                id?: string
                /** @example Meals */
                name?: string
                /** @example relation */
                type?: string
                relation?: {
                  /** @example 668d797c-76fa-4934-9b05-ad288df2d136 */
                  database_id?: string
                  /** @example Related to Grocery List (Meals) */
                  synced_property_name?: string
                }
              }
              'Number of meals'?: {
                /** @example Z\Eh */
                id?: string
                /** @example Number of meals */
                name?: string
                /** @example rollup */
                type?: string
                rollup?: {
                  /** @example Name */
                  rollup_property_name?: string
                  /** @example Meals */
                  relation_property_name?: string
                  /** @example title */
                  rollup_property_id?: string
                  /** @example mxp^ */
                  relation_property_id?: string
                  /** @example count */
                  function?: string
                }
              }
              'Store availability'?: {
                /** @example s}Kq */
                id?: string
                /** @example Store availability */
                name?: string
                /** @example multi_select */
                type?: string
                multi_select?: {
                  options?: {
                    /** @example cb79b393-d1c1-4528-b517-c450859de766 */
                    id?: string
                    /** @example Duc Loi Market */
                    name?: string
                    /** @example blue */
                    color?: string
                  }[]
                }
              }
              Photo?: {
                /** @example yfiK */
                id?: string
                /** @example Photo */
                name?: string
                /** @example files */
                type?: string
                files?: Record<string, never>
              }
              'Food group'?: {
                /** @example CM%3EH */
                id?: string
                /** @example Food group */
                name?: string
                /** @example select */
                type?: string
                select?: {
                  options?: {
                    /** @example 6d4523fa-88cb-4ffd-9364-1e39d0f4e566 */
                    id?: string
                    /** @example ðŸ¥¦Vegetable */
                    name?: string
                    /** @example green */
                    color?: string
                  }[]
                }
              }
              Name?: {
                /** @example title */
                id?: string
                /** @example Name */
                name?: string
                /** @example title */
                type?: string
                title?: Record<string, never>
              }
            }
            parent?: {
              /** @example page_id */
              type?: string
              /** @example 98ad959b-2b6a-4774-80ee-00246fb0ea9b */
              page_id?: string
            }
            /**
             * @default true
             * @example false
             */
            archived?: boolean
            /**
             * @default true
             * @example false
             */
            is_inline?: boolean
            public_url?: unknown
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description 404 */
      404: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 404
             */
            status?: number
            /** @example object_not_found */
            code?: string
            /** @example Could not find database with ID: a1d8501e-1ac1-43e9-a6bd-ea9fe6c8822c. Make sure the relevant pages and databases are shared with your integration. */
            message?: string
          }
        }
      }
      /** @description 429 */
      429: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 429
             */
            status?: number
            /** @example rate_limited */
            code?: string
            /** @example You have been rate limited. Please try again in a few minutes. */
            message?: string
          }
        }
      }
    }
  }
  /** Update a database */
  'update-a-database': {
    parameters: {
      header?: {
        'Notion-Version'?: string
      }
      path: {
        /** @description identifier for a Notion database */
        database_id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /** @description An array of [rich text objects](https://developers.notion.com/reference/rich-text) that represents the title of the database that is displayed in the Notion UI. If omitted, then the database title remains unchanged. */
          title?: unknown[]
          /** @description An array of [rich text objects](https://developers.notion.com/reference/rich-text) that represents the description of the database that is displayed in the Notion UI. If omitted, then the database description remains unchanged. */
          description?: unknown[]
          /**
           * Format: json
           * @description The properties of a database to be changed in the request, in the form of a JSON object. If updating an existing property, then the keys are the names or IDs of the properties as they appear in Notion, and the values are [property schema objects](ref:property-schema-object). If adding a new property, then the key is the name of the new database property and the value is a [property schema object](ref:property-schema-object).
           */
          properties?: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': OneOf<
            [
              {
                /** @example error */
                object?: string
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                /** @example invalid_json */
                code?: string
                /** @example Error parsing JSON body. */
                message?: string
              },
              {
                /** @example error */
                object?: string
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number
                /** @example validation_error */
                code?: string
                /** @example body failed validation: body.title[0].text.content.length should be â‰¤ `2000`, instead was `2022`. */
                message?: string
              },
            ]
          >
        }
      }
      /** @description 404 */
      404: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 404
             */
            status?: number
            /** @example object_not_found */
            code?: string
            /** @example Could not find database with ID: a1d8501e-1ac1-43e9-a6bd-ea9fe6c8822c. Make sure the relevant pages and databases are shared with your integration. */
            message?: string
          }
        }
      }
      /** @description 429 */
      429: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 429
             */
            status?: number
            /** @example rate_limited */
            code?: string
            /** @example You have been rate limited. Please try again in a few minutes. */
            message?: string
          }
        }
      }
    }
  }
  /** Retrieve a page property item */
  'retrieve-a-page-property': {
    parameters: {
      query?: {
        /** @description For paginated properties. The max number of property item objects on a page. The default size is 100 */
        page_size?: number
        /** @description For paginated properties. */
        start_cursor?: string
      }
      header?: {
        'Notion-Version'?: string
      }
      path: {
        /** @description Identifier for a Notion page */
        page_id: string
        /** @description Identifier for a page [property](https://developers.notion.com/reference/page#all-property-values) */
        property_id: string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': unknown
        }
      }
    }
  }
  /** Retrieve your token's bot user */
  'get-self': {
    parameters: {
      header: {
        'Notion-Version': string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example user */
            object?: string
            /** @example 16d84278-ab0e-484c-9bdd-b35da3bd8905 */
            id?: string
            /** @example pied piper */
            name?: string
            avatar_url?: unknown
            /** @example bot */
            type?: string
            bot?: {
              owner?: {
                /** @example user */
                type?: string
                user?: {
                  /** @example user */
                  object?: string
                  /** @example 5389a034-eb5c-47b5-8a9e-f79c99ef166c */
                  id?: string
                  /** @example christine makenotion */
                  name?: string
                  avatar_url?: unknown
                  /** @example person */
                  type?: string
                  person?: {
                    /** @example christine@makenotion.com */
                    email?: string
                  }
                }
              }
            }
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  /**
   * Retrieve comments
   * @description Retrieves a list of un-resolved [Comment objects](ref:comment-object) from a page or block.
   */
  'retrieve-a-comment': {
    parameters: {
      query: {
        /** @description Identifier for a Notion block or page */
        block_id: string
        /** @description If supplied, this endpoint will return a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results. */
        start_cursor?: string
        /** @description The number of items from the full list desired in the response. Maximum: 100 */
        page_size?: number
      }
      header: {
        'Notion-Version': string
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example list */
            object?: string
            results?: {
              /** @example comment */
              object?: string
              /** @example 94cc56ab-9f02-409d-9f99-1037e9fe502f */
              id?: string
              parent?: {
                /** @example page_id */
                type?: string
                /** @example 5c6a2821-6bb1-4a7e-b6e1-c50111515c3d */
                page_id?: string
              }
              /** @example f1407351-36f5-4c49-a13c-49f8ba11776d */
              discussion_id?: string
              /** @example 2022-07-15T16:52:00.000Z */
              created_time?: string
              /** @example 2022-07-15T19:16:00.000Z */
              last_edited_time?: string
              created_by?: {
                /** @example user */
                object?: string
                /** @example 9b15170a-9941-4297-8ee6-83fa7649a87a */
                id?: string
              }
              rich_text?: {
                /** @example text */
                type?: string
                text?: {
                  /** @example Single comment */
                  content?: string
                  link?: unknown
                }
                annotations?: {
                  /**
                   * @default true
                   * @example false
                   */
                  bold?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  italic?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  strikethrough?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  underline?: boolean
                  /**
                   * @default true
                   * @example false
                   */
                  code?: boolean
                  /** @example default */
                  color?: string
                }
                /** @example Single comment */
                plain_text?: string
                href?: unknown
              }[]
            }[]
            next_cursor?: unknown
            /**
             * @default true
             * @example false
             */
            has_more?: boolean
            /** @example comment */
            type?: string
            comment?: Record<string, never>
          }
        }
      }
      /** @description 403 */
      403: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 403
             */
            status?: number
            /** @example restricted_resource */
            code?: string
            /** @example Insufficient permissions for this endpoint. */
            message?: string
          }
        }
      }
    }
  }
  /**
   * Create comment
   * @description Creates a comment in a page or existing discussion thread.
   */
  'create-a-comment': {
    parameters: {
      header: {
        'Notion-Version': string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * Format: json
           * @description A [page parent](/reference/database#page-parent). Either this or a discussion_id is required (not both)
           */
          parent?: string
          /** @description A UUID identifier for a discussion thread. Either this or a parent object is required (not both) */
          discussion_id?: string
          /**
           * Format: json
           * @description A [rich text object](ref:rich-text)
           */
          rich_text: string
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example comment */
            object?: string
            /** @example b52b8ed6-e029-4707-a671-832549c09de3 */
            id?: string
            parent?: {
              /** @example page_id */
              type?: string
              /** @example 5c6a2821-6bb1-4a7e-b6e1-c50111515c3d */
              page_id?: string
            }
            /** @example f1407351-36f5-4c49-a13c-49f8ba11776d */
            discussion_id?: string
            /** @example 2022-07-15T20:53:00.000Z */
            created_time?: string
            /** @example 2022-07-15T20:53:00.000Z */
            last_edited_time?: string
            created_by?: {
              /** @example user */
              object?: string
              /** @example 067dee40-6ebd-496f-b446-093c715fb5ec */
              id?: string
            }
            rich_text?: {
              /** @example text */
              type?: string
              text?: {
                /** @example Hello world */
                content?: string
                link?: unknown
              }
              annotations?: {
                /**
                 * @default true
                 * @example false
                 */
                bold?: boolean
                /**
                 * @default true
                 * @example false
                 */
                italic?: boolean
                /**
                 * @default true
                 * @example false
                 */
                strikethrough?: boolean
                /**
                 * @default true
                 * @example false
                 */
                underline?: boolean
                /**
                 * @default true
                 * @example false
                 */
                code?: boolean
                /** @example default */
                color?: string
              }
              /** @example Hello world */
              plain_text?: string
              href?: unknown
            }[]
          }
        }
      }
      /** @description 403 */
      403: {
        content: {
          'application/json': {
            /** @example error */
            object?: string
            /**
             * @default 0
             * @example 403
             */
            status?: number
            /** @example restricted_resource */
            code?: string
            /** @example Insufficient permissions for this endpoint. */
            message?: string
          }
        }
      }
    }
  }
  /**
   * Create a token
   * @description Creates an access token that a third-party service can use to authenticate with Notion.
   */
  'create-a-token': {
    requestBody?: {
      content: {
        'application/json': {
          /** @description A unique random code that Notion generates to authenticate with your service, generated when a user initiates the OAuth flow. */
          code: string
          /**
           * @description A constant string: "authorization_code".
           * @default "authorization_code"
           */
          grant_type: string
          /** @description The `"redirect_uri"` that was provided in the OAuth Domain & URI section of the integration's Authorization settings. Do not include this field if a `"redirect_uri"` query param was not included in the Authorization URL provided to users. In most cases, this field is required. */
          redirect_uri: string
          /** @description Required if and only when building [Link Preview](https://developers.notion.com/docs/link-previews) integrations (otherwise ignored). An object with `key` and `name` properties. `key` should be a unique identifier for the account. Notion uses the `key` to determine whether or not the user is re-connecting the same account. `name` should be some way for the user to know which account they used to authenticate with your service. If a user has authenticated Notion with your integration before and `key` is the same but `name` is different, then Notion updates the `name` associated with your integration. */
          external_account?: Record<string, never>
        }
      }
    }
    responses: {
      /** @description 200 */
      200: {
        content: {
          'application/json': {
            /** @example e202e8c9-0990-40af-855f-ff8f872b1ec6c */
            access_token?: string
            /** @example b3414d659-1224-5ty7-6ffr-cc9d8773drt601288f */
            bot_id?: string
            duplicated_template_id?: unknown
            owner?: {
              /**
               * @default true
               * @example true
               */
              workspace?: boolean
            }
            /** @example https://website.domain/images/image.png */
            workspace_icon?: string
            /** @example j565j4d7x3-2882-61bs-564a-jj9d9ui-c36hxfr7x */
            workspace_id?: string
            /** @example Ada's Notion Workspace */
            workspace_name?: string
          }
        }
      }
      /** @description 400 */
      400: {
        content: {
          'application/json': {
            /** @example invalid_request */
            error?: string
            /** @example body failed validation: body.redirect_uri should be defined, instead was `undefined`. */
            error_description?: string
          }
        }
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
