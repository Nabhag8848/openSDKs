/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/crm/v3/objects/feedback_submissions/batch/read': {
    /** Read a batch of feedback submissions by internal ID, or unique property values */
    post: operations['post-/crm/v3/objects/feedback_submissions/batch/read_read']
  }
  '/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}': {
    /**
     * Read
     * @description Read an Object identified by `{feedbackSubmissionId}`. `{feedbackSubmissionId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.
     */
    get: operations['get-/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}_getById']
  }
  '/crm/v3/objects/feedback_submissions': {
    /**
     * List
     * @description Read a page of feedback submissions. Control what is returned via the `properties` query param.
     */
    get: operations['get-/crm/v3/objects/feedback_submissions_getPage']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    StandardError: {
      subCategory?: Record<string, never>
      context: {
        [key: string]: string[]
      }
      links: {
        [key: string]: string
      }
      id?: string
      category: string
      message: string
      errors: components['schemas']['ErrorDetail'][]
      status: string
    }
    CollectionResponseAssociatedId: {
      paging?: components['schemas']['Paging']
      results: components['schemas']['AssociatedId'][]
    }
    Paging: {
      next?: components['schemas']['NextPage']
      prev?: components['schemas']['PreviousPage']
    }
    /**
     * @example {
     *   "message": "Invalid input (details will vary based on the error)",
     *   "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
     *   "category": "VALIDATION_ERROR",
     *   "links": {
     *     "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
     *   }
     * }
     */
    Error: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ],
       *   "invalidPropertyName": [
       *     "propertyValue"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /**
       * Format: uuid
       * @description A unique identifier for the request. Include this value with any error reports or support tickets
       * @example aeb5f871-7f07-4993-9211-075dc63e7cbf
       */
      correlationId: string
      /**
       * @description A map of link names to associated URIs containing documentation about the error or recommended remediation steps
       * @example {
       *   "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
       * }
       */
      links?: {
        [key: string]: string
      }
      /**
       * @description A human readable message describing the error along with remediation steps where appropriate
       * @example Invalid input (details will vary based on the error)
       */
      message: string
      /**
       * @description The error category
       * @example VALIDATION_ERROR
       */
      category: string
      /** @description further information about the error */
      errors?: components['schemas']['ErrorDetail'][]
    }
    BatchResponseSimplePublicObject: {
      /** Format: date-time */
      completedAt: string
      /** Format: date-time */
      requestedAt?: string
      /** Format: date-time */
      startedAt: string
      links?: {
        [key: string]: string
      }
      results: components['schemas']['SimplePublicObject'][]
      /** @enum {string} */
      status: 'PENDING' | 'PROCESSING' | 'CANCELED' | 'COMPLETE'
    }
    BatchResponseSimplePublicObjectWithErrors: {
      /** Format: date-time */
      completedAt: string
      /** Format: int32 */
      numErrors?: number
      /** Format: date-time */
      requestedAt?: string
      /** Format: date-time */
      startedAt: string
      links?: {
        [key: string]: string
      }
      results: components['schemas']['SimplePublicObject'][]
      errors?: components['schemas']['StandardError'][]
      /** @enum {string} */
      status: 'PENDING' | 'PROCESSING' | 'CANCELED' | 'COMPLETE'
    }
    ErrorDetail: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /** @description The status code associated with the error detail */
      code?: string
      /** @description The name of the field or parameter in which the error was found. */
      in?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /** @description A human readable message describing the error along with remediation steps where appropriate */
      message: string
    }
    CollectionResponseSimplePublicObjectWithAssociationsForwardPaging: {
      paging?: components['schemas']['ForwardPaging']
      results: components['schemas']['SimplePublicObjectWithAssociations'][]
    }
    ForwardPaging: {
      next?: components['schemas']['NextPage']
    }
    SimplePublicObjectId: {
      id: string
    }
    /**
     * @example {
     *   "properties": {
     *     "hs_content": "What a great product!",
     *     "hs_ingestion_id": "fd61286d-102b-4fcc-b486-3486b4ceafc2",
     *     "hs_response_group": "PROMOTER",
     *     "hs_submission_name": "Customer Satisfaction Survey - bcooper@biglytics.net",
     *     "hs_survey_channel": "EMAIL",
     *     "hs_survey_id": "5",
     *     "hs_survey_name": "Customer Satisfaction Survey",
     *     "hs_survey_type": "CSAT",
     *     "hs_value": "2"
     *   }
     * }
     */
    SimplePublicObjectWithAssociations: {
      associations?: {
        [key: string]: components['schemas']['CollectionResponseAssociatedId']
      }
      /** Format: date-time */
      createdAt: string
      archived?: boolean
      /** Format: date-time */
      archivedAt?: string
      propertiesWithHistory?: {
        [key: string]: components['schemas']['ValueWithTimestamp'][]
      }
      id: string
      properties: {
        [key: string]: string | null
      }
      /** Format: date-time */
      updatedAt: string
    }
    BatchReadInputSimplePublicObjectId: {
      propertiesWithHistory: string[]
      idProperty?: string
      inputs: components['schemas']['SimplePublicObjectId'][]
      properties: string[]
    }
    PreviousPage: {
      before: string
      link?: string
    }
    ValueWithTimestamp: {
      sourceId?: string
      sourceType: string
      sourceLabel?: string
      /** Format: int32 */
      updatedByUserId?: number
      value: string
      /** Format: date-time */
      timestamp: string
    }
    AssociatedId: {
      id: string
      type: string
    }
    /**
     * @example {
     *   "after": "NTI1Cg%3D%3D",
     *   "link": "?after=NTI1Cg%3D%3D"
     * }
     */
    NextPage: {
      /** @example ?after=NTI1Cg%3D%3D */
      link?: string
      /** @example NTI1Cg%3D%3D */
      after: string
    }
    /**
     * @example {
     *   "id": "512",
     *   "properties": {
     *     "hs_content": "What a great product!",
     *     "hs_ingestion_id": "fd61286d-102b-4fcc-b486-3486b4ceafc2",
     *     "hs_response_group": "PROMOTER",
     *     "hs_submission_name": "Customer Satisfaction Survey - bcooper@biglytics.net",
     *     "hs_survey_channel": "EMAIL",
     *     "hs_survey_id": "5",
     *     "hs_survey_name": "Customer Satisfaction Survey",
     *     "hs_survey_type": "CSAT",
     *     "hs_value": "2"
     *   },
     *   "createdAt": "2019-10-30T03:30:17.883Z",
     *   "updatedAt": "2019-12-07T16:50:06.678Z",
     *   "archived": false
     * }
     */
    SimplePublicObject: {
      /** Format: date-time */
      createdAt: string
      /** @example false */
      archived?: boolean
      /** Format: date-time */
      archivedAt?: string
      propertiesWithHistory?: {
        [key: string]: components['schemas']['ValueWithTimestamp'][]
      }
      /** @example 512 */
      id: string
      /**
       * @example {
       *   "property_date": "1572480000000",
       *   "property_radio": "option_1",
       *   "property_number": "17",
       *   "property_string": "value",
       *   "property_checkbox": "false",
       *   "property_dropdown": "choice_b",
       *   "property_multiple_checkboxes": "chocolate;strawberry"
       * }
       */
      properties: {
        [key: string]: string | null
      }
      /** Format: date-time */
      updatedAt: string
    }
  }
  responses: {
    /** @description An error occurred. */
    Error: {
      content: {
        '*/*': components['schemas']['Error']
      }
    }
  }
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /** Read a batch of feedback submissions by internal ID, or unique property values */
  'post-/crm/v3/objects/feedback_submissions/batch/read_read': {
    parameters: {
      query?: {
        /** @description Whether to return only results that have been archived. */
        archived?: boolean
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BatchReadInputSimplePublicObjectId']
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['BatchResponseSimplePublicObject']
        }
      }
      /** @description multiple statuses */
      207: {
        content: {
          'application/json': components['schemas']['BatchResponseSimplePublicObjectWithErrors']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Read
   * @description Read an Object identified by `{feedbackSubmissionId}`. `{feedbackSubmissionId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.
   */
  'get-/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}_getById': {
    parameters: {
      query?: {
        /** @description A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. */
        properties?: string[]
        /** @description A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. */
        propertiesWithHistory?: string[]
        /** @description A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. */
        associations?: string[]
        /** @description Whether to return only results that have been archived. */
        archived?: boolean
        /** @description The name of a property whose values are unique for this object type */
        idProperty?: string
      }
      path: {
        feedbackSubmissionId: string
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['SimplePublicObjectWithAssociations']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * List
   * @description Read a page of feedback submissions. Control what is returned via the `properties` query param.
   */
  'get-/crm/v3/objects/feedback_submissions_getPage': {
    parameters: {
      query?: {
        /** @description The maximum number of results to display per page. */
        limit?: number
        /** @description The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results. */
        after?: string
        /** @description A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. */
        properties?: string[]
        /** @description A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. */
        propertiesWithHistory?: string[]
        /** @description A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. */
        associations?: string[]
        /** @description Whether to return only results that have been archived. */
        archived?: boolean
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['CollectionResponseSimplePublicObjectWithAssociationsForwardPaging']
        }
      }
      default: components['responses']['Error']
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
