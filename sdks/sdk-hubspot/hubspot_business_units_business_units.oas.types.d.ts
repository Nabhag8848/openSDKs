/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/business-units/v3/business-units/user/{userId}': {
    /**
     * Get Business Units for a user
     * @description Get Business Units identified by `userId`. The `userId` refers to the user’s ID.
     */
    get: operations['get-/business-units/v3/business-units/user/{userId}_getByUserID']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    ErrorDetail: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /** @description The status code associated with the error detail */
      code?: string
      /** @description The name of the field or parameter in which the error was found. */
      in?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /** @description A human readable message describing the error along with remediation steps where appropriate */
      message: string
    }
    /**
     * @example {
     *   "message": "Invalid input (details will vary based on the error)",
     *   "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
     *   "category": "VALIDATION_ERROR",
     *   "links": {
     *     "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
     *   }
     * }
     */
    Error: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ],
       *   "invalidPropertyName": [
       *     "propertyValue"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /**
       * Format: uuid
       * @description A unique identifier for the request. Include this value with any error reports or support tickets
       * @example aeb5f871-7f07-4993-9211-075dc63e7cbf
       */
      correlationId: string
      /**
       * @description A map of link names to associated URIs containing documentation about the error or recommended remediation steps
       * @example {
       *   "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
       * }
       */
      links?: {
        [key: string]: string
      }
      /**
       * @description A human readable message describing the error along with remediation steps where appropriate
       * @example Invalid input (details will vary based on the error)
       */
      message: string
      /**
       * @description The error category
       * @example VALIDATION_ERROR
       */
      category: string
      /** @description further information about the error */
      errors?: components['schemas']['ErrorDetail'][]
    }
    /**
     * @description A Business Unit
     * @example {
     *   "logoMetadata": {
     *     "logoAltText": "logo sample text",
     *     "resizedUrl": "sillystring",
     *     "logoUrl": "examplelogourl.com"
     *   },
     *   "name": "sample business unit name",
     *   "id": "101"
     * }
     */
    PublicBusinessUnit: {
      logoMetadata?: components['schemas']['PublicBusinessUnitLogoMetadata']
      /**
       * @description The Business Unit's name
       * @example sample business unit name
       */
      name: string
      /**
       * @description The Business Unit's unique ID
       * @example 101
       */
      id: string
    }
    /**
     * @description A Business Unit's logo metadata
     * @example {
     *   "logoAltText": "logo sample text",
     *   "resizedUrl": "sillystring",
     *   "logoUrl": "examplelogourl.com"
     * }
     */
    PublicBusinessUnitLogoMetadata: {
      /**
       * @description The logo's alt text
       * @example logo sample text
       */
      logoAltText?: string
      /**
       * @description The logo's resized url
       * @example sillystring
       */
      resizedUrl?: string
      /**
       * @description The logo's url
       * @example examplelogourl.com
       */
      logoUrl?: string
    }
    /** @description A response object containing a collection of Business Units */
    CollectionResponsePublicBusinessUnitNoPaging: {
      /** @description The collection of Business Units */
      results: components['schemas']['PublicBusinessUnit'][]
    }
  }
  responses: {
    /** @description An error occurred. */
    Error: {
      content: {
        '*/*': components['schemas']['Error']
      }
    }
  }
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Get Business Units for a user
   * @description Get Business Units identified by `userId`. The `userId` refers to the user’s ID.
   */
  'get-/business-units/v3/business-units/user/{userId}_getByUserID': {
    parameters: {
      query?: {
        /** @description The names of properties to optionally include in the response body. The only valid value is `logoMetadata`. */
        properties?: string[]
        /** @description The names of Business Units to retrieve. If empty or not provided, then all associated Business Units will be returned. */
        name?: string[]
      }
      path: {
        /** @description Identifier of user to retrieve. */
        userId: string
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['CollectionResponsePublicBusinessUnitNoPaging']
        }
      }
      default: components['responses']['Error']
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
