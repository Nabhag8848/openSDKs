/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/callback/customer-create/{requestId}': {
    /**
     * Endpoint for customer creation response
     * @description Call this endpoint with the response to a customer creation request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/customer-create/{requestId}']
  }
  '/callback/customer-search/{requestId}': {
    /**
     * Endpoint for customer search response
     * @description Call this endpoint with the response to a customer search request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/customer-search/{requestId}']
  }
  '/callback/exchange-rate/{requestId}': {
    /**
     * Endpoint for exchange rate response
     * @description Call this endpoint with the response to an exchange rate request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/exchange-rate/{requestId}']
  }
  '/callback/invoice-create/{requestId}': {
    /**
     * Endpoint for invoice creation response
     * @description Call this endpoint with the response to a invoice creation request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/invoice-create/{requestId}']
  }
  '/callback/invoice-pdf/{requestId}': {
    /**
     * Endpoint for PDF content of invoice
     * @description Call this endpoint with the PDF content of a requested invoice.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/invoice-pdf/{requestId}']
  }
  '/callback/invoice-search/{requestId}': {
    /**
     * Endpoint for invoice search response
     * @description Call this endpoint with the response to a invoice search request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/invoice-search/{requestId}']
  }
  '/callback/invoices/{requestId}': {
    /**
     * Endpoint for invoice get-by-id response
     * @description Call this endpoint with the response to a invoice get-by-id request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/invoices/{requestId}']
  }
  '/callback/product-search/{requestId}': {
    /**
     * Endpoint for product search response
     * @description Call this endpoint with the response to a product search request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/product-search/{requestId}']
  }
  '/callback/tax-search/{requestId}': {
    /**
     * Endpoint for taxes search response
     * @description Call this endpoint with the response to a taxes search request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/tax-search/{requestId}']
  }
  '/callback/terms/{requestId}': {
    /**
     * Endpoint for terms search response
     * @description Call this endpoint with the response to a terms search request.
     */
    post: operations['post-/crm/v3/extensions/accounting/callback/terms/{requestId}']
  }
  '/invoice/{invoiceId}': {
    /**
     * Get invoice data
     * @description Returns invoice data for an Accounting account from the specified ID
     */
    get: operations['get-/crm/v3/extensions/accounting/invoice/{invoiceId}']
    /**
     * Update an invoice
     * @description Updates an Invoice by the given ID.
     */
    patch: operations['patch-/crm/v3/extensions/accounting/invoice/{invoiceId}']
  }
  '/invoice/{invoiceId}/payment': {
    /**
     * Records an invoice payment
     * @description Records an payment against an invoice.
     */
    post: operations['post-/crm/v3/extensions/accounting/invoice/{invoiceId}/payment']
  }
  '/settings/{appId}': {
    /**
     * Get URL settings
     * @description Returns the URL settings for an accounting app with the specified ID.
     */
    get: operations['get-/crm/v3/extensions/accounting/settings/{appId}']
    /**
     * Add/Update URL Settings
     * @description Add/Update the URL settings for an accounting app with the specified ID.  All URLs must use the `https` protocol.
     */
    put: operations['put-/crm/v3/extensions/accounting/settings/{appId}']
  }
  '/sync/{appId}/contacts': {
    /**
     * Import contacts
     * @description Imports contacts' properties from an external accounting system to HubSpot. Import details, including property mappings, must be configured previously in HubSpot infrastructure.
     */
    post: operations['post-/crm/v3/extensions/accounting/sync/{appId}/contacts']
  }
  '/sync/{appId}/products': {
    /**
     * Import products
     * @description Imports products' properties from an external accounting system to HubSpot. Import details, including property mappings, must be configured previously in HubSpot infrastructure.
     */
    post: operations['post-/crm/v3/extensions/accounting/sync/{appId}/products']
  }
  '/user-accounts': {
    /**
     * Create a user account
     * @description Creates an account which contains the information about the account in the external accounting system.  This *must* be called after a user connects their HubSpot account to the external accounting system, as there is no other way for HubSpot to obtain the external account details.
     */
    put: operations['put-/crm/v3/extensions/accounting/user-accounts']
  }
  '/user-accounts/{accountId}': {
    /**
     * Delete user account
     * @description Deletes a user account from HubSpot, meaning that HubSpot will no longer send requests to the external accounting system for this user.
     */
    delete: operations['delete-/crm/v3/extensions/accounting/user-accounts/{accountId}']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    /** @description A response to a search for products. */
    ProductSearchResponse: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result'?: 'OK' | 'ERR'
      /** @description The list of products that matched the search criteria. */
      products: components['schemas']['Product'][]
    }
    /** @description Indicates if importing invoices from the external account system into HubSpot is supported for the integration. */
    ImportInvoiceFeature: {
      /** @description Indicates if importing invoices from the external account system into HubSpot. */
      enabled: boolean
    }
    /** @description Represents an address of a customer */
    Address: {
      /**
       * @description The country of the address.
       * @example United States
       */
      country?: string
      /**
       * @description A region of the county of the address.  May represent county, state etc.
       * @example NY
       */
      countrySubDivisionCode?: string
      /**
       * @description The city of the address.
       * @example New York
       */
      city?: string
      /**
       * @description The postcode/zipcode of the address.
       * @example 10001
       */
      postalCode?: string
      /**
       * @description The first line of the address.
       * @example 1 Example Way
       */
      lineOne?: string
    }
    ObjectSyncFeature: {
      /** @description Indicates if syncing the object type from the external accounting system into HubSpot is supported. */
      toHubSpot: boolean
    }
    /** @description A response to a search for payment terms. */
    TermsResponse: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result'?: 'OK' | 'ERR'
      /** @description The list of payment terms that matched the search criteria. */
      terms: components['schemas']['AccountingExtensionTerm'][]
    }
    /** @description Lists the individual aspects of creating invoices that are enabled for the integration, as part of the create invoice flow in HubSpot. */
    CreateInvoiceSubFeatures: {
      /** @description Indicates if a new customer can be created in the external accounting system. */
      createCustomer: boolean
      /** @description Indicates if taxes can be specified by the HubSpot user for line items. */
      taxes: boolean
      /** @description Indicates if the external accounting system supports fetching exchange rates when create an invoice in HubSpot for a customer billed in a different currency. */
      exchangeRates: boolean
      /** @description Indicates if the external accounting system supports fetching payment terms. */
      terms: boolean
      /** @description Indicates if a visible comment can be added to invoices. */
      invoiceComments: boolean
      /** @description Indicates if invoice-level discounts can be added to invoices. */
      invoiceDiscounts: boolean
    }
    /** @description Representation of a product in the external accounting system. */
    Product: {
      unitPrice: components['schemas']['UnitPrice']
      /** @description Identifies if the product is tax exempt or not. */
      taxExempt: boolean
      salesTaxType?: components['schemas']['TaxType']
      /**
       * @description The display name of the product.
       * @example Marketing Services
       */
      name: string
      /**
       * @description The description of the product.
       * @example Website design, Online advertising and SEO.
       */
      description?: string
      /**
       * @description The ID of the product in the external accounting system.
       * @example prod-123
       */
      id: string
    }
    /** @description Outlines the features that are supported by the external accounting system. */
    AccountingFeatures: {
      createInvoice: components['schemas']['CreateInvoiceFeature']
      importInvoice: components['schemas']['ImportInvoiceFeature']
      /**
       * @description Indicates if syncing objects from the external account system into HubSpot is supported for the integration.
       * This is a map, where the key is one of `CONTACT` or `PRODUCT`, to indicate which type of object you do or don't support syncing.
       * For example:
       * ```
       *   "sync": {
       *     "CONTACT": {
       *       "toHubSpot": true
       *     },
       *     "PRODUCT": {
       *       "toHubSpot": true
       *     }
       *   }
       * ```
       */
      sync: {
        [key: string]: components['schemas']['ObjectSyncFeature']
      }
    }
    /** @description Representation of a tax defined in the external accounting system. */
    Tax: {
      /**
       * @description The code/ID of the tax in the external accounting system.
       * @example tax-1
       */
      code: string
      /**
       * @description The tax percentage.  For example, 8.05 represents a 8.05% tax rate.
       * @example 8.05
       */
      percentage: number
      /**
       * @description The display name of the tax.
       * @example Local Sales Tax
       */
      name: string
    }
    /** @description The invoice data to update in HubSpot */
    InvoiceUpdateRequest: {
      externalInvoiceNumber?: string
      /**
       * @description The ISO 4217 currency code that represents the currency used in the invoice to bill the recipient
       * @example USD
       */
      currencyCode?: string
      /**
       * Format: date
       * @description The ISO-8601 due date of the invoice.
       */
      dueDate?: string
      /**
       * @description The ID of the invoice recipient. This is the recipient ID from the external accounting system.
       * @example 152
       */
      externalRecipientId?: string
      /** Format: int64 */
      receivedByRecipientDate?: number
      /** @description States if the invoice is voided or not. */
      isVoided?: boolean
      /**
       * @description The ISO-8601 datetime of when the customer received the invoice.
       * @example 2020-04-01T13:14:15.678Z
       */
      receivedByCustomerDate?: string
      /**
       * @description The number / name of the invoice.
       * @example Joe Bloggs #42
       */
      invoiceNumber?: string
    }
    ErrorDetail: {
      /** @description A human readable message describing the error along with remediation steps where appropriate */
      message: string
      /** @description The name of the field or parameter in which the error was found. */
      in?: string
      /** @description The status code associated with the error detail */
      code?: string
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
    }
    /** @description A response to a search for customers. */
    CustomerSearchResponseExternal: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result': 'OK' | 'ERR'
      /** @description The list of customers that matched the search criteria. */
      customers: components['schemas']['AccountingExtensionCustomer'][]
    }
    /** @description A request to import external accounting product properties in HubSpot */
    UpdatedProduct: {
      /**
       * @description The operation to be performed.
       * @enum {string}
       */
      syncAction: 'CREATE' | 'UPDATE' | 'DELETE'
      /**
       * Format: date-time
       * @description The timestamp (ISO8601 format) when the product was updated in the external accounting system.
       */
      updatedAt: string
      /** @description The price of the product. */
      price: number
      /** @description The ISO 4217 currency code that represents the currency of the product price. */
      currencyCode?: string
      /** @description The ID of the product in the external accounting system. */
      id: string
      /** @description A map of key-value product properties to be imported. */
      properties: {
        [key: string]: string
      }
    }
    /** @description A response to the creation of an entity (eg. invoice, customer). */
    ResultIdAccountingResponse: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result': 'OK' | 'ERR'
      /**
       * @description The ID of created entity.
       * @example js-1
       */
      id: string
    }
    /** @description Representation of an invoice in the external accounting system. */
    AccountingExtensionInvoice: {
      /**
       * @description The total amount due.
       * @example 100.5
       */
      amountDue: number
      /**
       * @description The remaining outstanding balance due.
       * @example 50
       */
      balance?: number
      /**
       * Format: date
       * @description The due date for payment of the invoice, in ISO-8601 date format (yyyy-MM-dd)
       */
      dueDate: string
      /**
       * @description The invoice number
       * @example INV-123
       */
      invoiceNumber?: string
      /**
       * @description The ID of the customer that this invoice is for.
       * @example cust-123
       */
      customerId?: string
      /**
       * @description The ISO 4217 currency code that represents the currency of this invoice.
       * @example USD
       */
      currency: string
      /**
       * @description A link to the invoice in the external accounting system.
       * @example https://myapp.com/invoices/1243a2
       */
      invoiceLink: string
      /**
       * @description The name of the customer that this invoice is for.
       * @example John Smith
       */
      customerName: string
      /**
       * @description The currency status of the invoice.
       * @example OVERDUE
       * @enum {string}
       */
      status: 'CREATED' | 'SENT' | 'PAID' | 'CLOSED' | 'OVERDUE' | 'VOIDED'
    }
    /** @description A response to a search for taxes. */
    TaxSearchResponse: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result'?: 'OK' | 'ERR'
      /** @description The list of taxes that matched the search criteria */
      taxes: components['schemas']['Tax'][]
    }
    InvoiceCreatePaymentRequest: {
      /** @description The amount that this payment is for. */
      amountPaid: number
      /** @description The ISO 4217 currency code that represents the currency of the payment. */
      currencyCode: string
      /**
       * Format: date-time
       * @description The datetime that this payment was received.
       */
      paymentDateTime: string
      /** @description The id of this payment in the external accounting system. */
      externalPaymentId: string
    }
    /** @description Information about the account in your external account system. */
    CreateUserAccountRequestExternal: {
      /** @description The id of the account in your system. */
      accountId: string
      /** @description The name of the account in your system. This is normally the name visible to your users. */
      accountName: string
      /** @description The default currency that this account uses. */
      currencyCode: string
    }
    /** @description Representation of payment terms that are defined in the external accounting system. One of 'dueDays' or 'dueDate' is required. */
    AccountingExtensionTerm: {
      /**
       * Format: date
       * @description The due date for payment of the invoice, in ISO-8601 date format (yyyy-MM-dd)
       */
      dueDate?: string
      /**
       * @description The display name of the payment terms.
       * @example Net 30
       */
      name: string
      /**
       * @description The ID of the payment terms in the external accounting system.
       * @example net-30
       */
      id: string
      /**
       * Format: int32
       * @description The number of days that these payment terms represent.
       * @example 30
       */
      dueDays?: number
    }
    /** @description The URL endpoints that HubSpot will send requests to an external accounting system for certain actions. */
    AccountingAppUrls: {
      /** @description A URL that specifies the endpoint where invoices can be retrieved. */
      getInvoiceUrl: string
      /** @description A URL that specifies the endpoint where a customer search can be performed. */
      searchCustomerUrl: string
      /** @description A URL that specifies the endpoint where an invoice PDF can be retrieved. */
      getInvoicePdfUrl: string
      /** @description A template URL that indicates the endpoint where a customer can be fetched by ID. Note that ${CUSTOMER_ID} in this URL will be replaced by the actual customer ID. For example: https://myapp.com/api/customers/${CUSTOMER_ID} */
      customerUrlTemplate: string
      /** @description A template URL that indicates the endpoint where a product can be fetched by ID. Note that ${PRODUCT_ID} in this URL will be replaced by the actual product ID. For example: https://myapp.com/api/products/${PRODUCT_ID} */
      productUrlTemplate: string
      /** @description A template URL that indicates the endpoint where an invoice can be fetched by ID. Note that ${INVOICE_ID} in this URL will be replaced by the actual invoice ID. For example: https://myapp.com/api/invoices/${INVOICE_ID} */
      invoiceUrlTemplate: string
      /** @description A URL that specifies the endpoint where an invoices can be created. */
      createInvoiceUrl?: string
      /** @description A URL that specifies the endpoint where an invoice search can be performed. */
      searchInvoiceUrl?: string
      /** @description A URL that specifies the endpoint where a product search can be performed. */
      searchProductUrl?: string
      /** @description A URL that specifies the endpoint where payment terms can be retrieved. */
      getTermsUrl?: string
      /** @description A URL that specifies the endpoint where a new customer can be created. */
      createCustomerUrl?: string
      /** @description A URL that specifies the endpoint where a tax search can be performed. */
      searchTaxUrl?: string
      /** @description A URL that specifies the endpoint where exchange rates can be queried. */
      exchangeRateUrl?: string
      searchUrl?: string
      searchCountUrl?: string
    }
    /** @description The invoice data stored in HubSpot */
    InvoiceReadResponse: {
      /** @description The invoice number. Note that this is _not_ the ID of the invoice, but the number that the billed customer will see. */
      externalInvoiceNumber?: string
      /** @description The total amount that this invoice is for. */
      totalAmountBilled: number
      /** @description The remaining balance due for the invoice. */
      balanceDue: number
      /** @description The ISO 4217 currency code that represents the currency of the invoice. */
      currencyCode: string
      /**
       * Format: date
       * @description The due date of the invoice
       */
      dueDate: string
      /** @description The id of the customer in the external accounting system that the invoice was sent to. */
      externalRecipientId: string
      /**
       * Format: int64
       * @description The datetime that that invoice was sent to the customer.
       */
      receivedByRecipientDate?: number
      /**
       * Format: int64
       * @description The datetime that the invoice was created in the external accounting system.
       */
      externalCreateDateTime?: number
      /** @description Indicated is the invoice has been voided or not. */
      isVoided: boolean
      /**
       * Format: date-time
       * @description The datetime that the invoice was created in HubSpot.
       */
      createdAt: string
      /**
       * Format: date-time
       * @description The datetime that the invoice was last updated in HubSpot.
       */
      updatedAt: string
      /** Format: date-time */
      archivedAt?: string
      archived: boolean
      /** @description The id of the account in the external accounting system that this invoice is related to. */
      externalAccountId: string
      /**
       * @description The status of the invoice
       * @enum {string}
       */
      invoiceStatus:
        | 'CREATED'
        | 'SENT'
        | 'PAID'
        | 'CLOSED'
        | 'OVERDUE'
        | 'VOIDED'
        | 'NONE'
        | 'UNPAID'
      /** @description The id of this invoice in the external accounting system. */
      id: string
    }
    InvoiceUpdateResponse: {
      externalInvoiceNumber?: string
      totalAmountBilled: number
      balanceDue: number
      currencyCode: string
      /** Format: date */
      dueDate: string
      externalRecipientId: string
      /** Format: int64 */
      receivedByRecipientDate?: number
      /** Format: int64 */
      externalCreateDateTime?: number
      isVoided: boolean
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt: string
      /** Format: date-time */
      archivedAt?: string
      archived: boolean
      externalAccountId: string
      /** @enum {string} */
      invoiceStatus:
        | 'CREATED'
        | 'SENT'
        | 'PAID'
        | 'CLOSED'
        | 'OVERDUE'
        | 'VOIDED'
        | 'NONE'
        | 'UNPAID'
      id: string
    }
    /** @description The URL Settings, which defines the URL endpoints that HubSpot will send requests to an external accounting application for certain actions. */
    AccountingAppSettings: {
      /**
       * Format: int32
       * @description The ID of the accounting app. This is the identifier of the application created in your HubSpot developer portal.
       */
      appId: number
      urls: components['schemas']['AccountingAppUrls']
      features?: components['schemas']['AccountingFeatures']
    }
    /** @description Representation of a customer in the external accounting system. */
    AccountingExtensionCustomer: {
      /**
       * @description The customer's email address
       * @example johnsmith@example.com
       */
      emailAddress?: string
      /**
       * @description The customer's full name
       * @example John Smith
       */
      name: string
      /**
       * @description The ID of the customer in the external accounting system.
       * @example js-1
       */
      id: string
      billingAddress?: components['schemas']['Address']
      /**
       * @description The ISO 4217 currency code that represents the currency the customer should be billed in.
       * @example USD
       */
      currencyCode?: string
    }
    /** @description A response to a request for invoices. */
    InvoicesResponseExternal: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result'?: 'OK' | 'ERR'
      /** @description The list of invoices that were found for the request. */
      invoices: components['schemas']['AccountingExtensionInvoice'][]
    }
    /** @description A response to a search for invoices. */
    InvoiceSearchResponse: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result'?: 'OK' | 'ERR'
      /** @description The list of invoices that matched the search criteria. */
      invoices: components['schemas']['AccountingExtensionInvoice'][]
    }
    /**
     * @example {
     *   "message": "Invalid input (details will vary based on the error)",
     *   "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
     *   "category": "VALIDATION_ERROR",
     *   "links": {
     *     "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
     *   }
     * }
     */
    Error: {
      /**
       * @description A human readable message describing the error along with remediation steps where appropriate
       * @example An error occurred
       */
      message: string
      /**
       * Format: uuid
       * @description A unique identifier for the request. Include this value with any error reports or support tickets
       * @example aeb5f871-7f07-4993-9211-075dc63e7cbf
       */
      correlationId: string
      /** @description The error category */
      category: string
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /** @description further information about the error */
      errors?: components['schemas']['ErrorDetail'][]
      /**
       * @description Context about the error condition
       * @example {
       *   "invalidPropertyName": [
       *     "propertyValue"
       *   ],
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /** @description A map of link names to associated URIs containing documentation about the error or recommended remediation steps */
      links?: {
        [key: string]: string
      }
    }
    /** @description A request to import external accounting contact properties in HubSpot */
    UpdatedContact: {
      /**
       * @description The operation to be performed.
       * @example UPDATE
       * @enum {string}
       */
      syncAction: 'CREATE' | 'UPDATE' | 'DELETE'
      /**
       * Format: date-time
       * @description The timestamp (ISO8601 format) when the customer was updated in the external accounting system.
       */
      updatedAt: string
      /**
       * @description The customer's email address
       * @example johndoe@company.com
       */
      emailAddress: string
      /**
       * @description The ID of the customer in the external accounting system.
       * @example acct-app-123
       */
      id: string
      /**
       * @description Designates the type of the customer object.
       * @example CONTACT
       * @enum {string}
       */
      customerType?: 'CONTACT' | 'COMPANY'
    }
    /** @description A response that contains the PDF of an invoice */
    InvoicePdfResponse: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result'?: 'OK' | 'ERR'
      /**
       * Format: byte
       * @description The bytes of the invoice PDF.
       */
      invoice: string
    }
    /** @description Indicates what elements of creating invoices in HubSpot is supported for the integration. */
    CreateInvoiceFeature: {
      /** @description Indicates if creating invoices in HubSpot is supported for the integration. */
      enabled: boolean
      subFeatures: components['schemas']['CreateInvoiceSubFeatures']
    }
    /** @description A request to import external accounting product properties in HubSpot */
    SyncProductsRequest: {
      /** @description The ID of the account in the external accounting system. This is the value that will be passed as `accountId` for all outbound calls for the user from HubSpot to the external accounting system. */
      accountId: string
      /** @description A list of products to be imported. */
      products: components['schemas']['UpdatedProduct'][]
    }
    /** @description A response to the request for an exchange rate value. It represents the exchange rate from the source currency to the target currency. */
    ExchangeRateResponse: {
      /**
       * @description Designates if the response is a success ('OK') or failure ('ERR').
       * @example OK
       * @enum {string}
       */
      '@result': 'OK' | 'ERR'
      /**
       * @description The exchange rate between the 2 currencies
       * @example 1.003
       */
      exchangeRate: number
      /**
       * @description The ISO 4217 currency code that represents the source currency of the exchange rate.
       * @example JPY
       */
      sourceCurrencyCode: string
      /**
       * @description The ISO 4217 currency code that represents the target currency of the exchange rate.
       * @example USD
       */
      targetCurrencyCode: string
    }
    ActionResponse: {
      /** @enum {string} */
      status: 'PENDING' | 'PROCESSING' | 'CANCELED' | 'COMPLETE'
      /** Format: date-time */
      requestedAt?: string
      /** Format: date-time */
      startedAt: string
      /** Format: date-time */
      completedAt: string
      links?: {
        [key: string]: string
      }
    }
    /** @description Represents a tax in the external accounting system. */
    TaxType: {
      /**
       * @description The code/ID of the tax in the external accounting system.
       * @example tax-1
       */
      code: string
      /**
       * @description The display name of the tax.
       * @example Local Sales Tax
       */
      name?: string
    }
    /** @description Represents a unit price */
    UnitPrice: {
      /**
       * @description The actual unit price amount.
       * @example 10.99
       */
      amount?: number
      /** @description Indicates if the unit price amount already includes taxes. */
      taxIncluded: boolean
    }
    /** @description A request to import external accounting contact properties in HubSpot */
    SyncContactsRequest: {
      /**
       * @description The ID of the account in the external accounting system. This is the value that will be passed as `accountId` for all outbound calls for the user from HubSpot to the external accounting system.
       * @example acct-app-123
       */
      accountId: string
      /** @description A list of contacts to be imported. */
      contacts: components['schemas']['UpdatedContact'][]
    }
  }
  responses: {
    /** @description An error occurred. */
    Error: {
      content: {
        '*/*': components['schemas']['Error']
      }
    }
  }
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Endpoint for customer creation response
   * @description Call this endpoint with the response to a customer creation request.
   */
  'post-/crm/v3/extensions/accounting/callback/customer-create/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The ID of the created customer. */
    requestBody: {
      content: {
        'application/json': components['schemas']['ResultIdAccountingResponse']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for customer search response
   * @description Call this endpoint with the response to a customer search request.
   */
  'post-/crm/v3/extensions/accounting/callback/customer-search/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The result of the customer search request. */
    requestBody: {
      content: {
        'application/json': components['schemas']['CustomerSearchResponseExternal']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for exchange rate response
   * @description Call this endpoint with the response to an exchange rate request.
   */
  'post-/crm/v3/extensions/accounting/callback/exchange-rate/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The result of the exchange rate request. */
    requestBody: {
      content: {
        'application/json': components['schemas']['ExchangeRateResponse']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for invoice creation response
   * @description Call this endpoint with the response to a invoice creation request.
   */
  'post-/crm/v3/extensions/accounting/callback/invoice-create/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The ID of the created invoice. */
    requestBody: {
      content: {
        'application/json': components['schemas']['ResultIdAccountingResponse']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for PDF content of invoice
   * @description Call this endpoint with the PDF content of a requested invoice.
   */
  'post-/crm/v3/extensions/accounting/callback/invoice-pdf/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The bytes of the invoice PDF. */
    requestBody: {
      content: {
        'application/json': components['schemas']['InvoicePdfResponse']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for invoice search response
   * @description Call this endpoint with the response to a invoice search request.
   */
  'post-/crm/v3/extensions/accounting/callback/invoice-search/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The result of the invoice search request. */
    requestBody: {
      content: {
        'application/json': components['schemas']['InvoiceSearchResponse']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for invoice get-by-id response
   * @description Call this endpoint with the response to a invoice get-by-id request.
   */
  'post-/crm/v3/extensions/accounting/callback/invoices/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The result of the invoice request. */
    requestBody: {
      content: {
        'application/json': components['schemas']['InvoicesResponseExternal']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for product search response
   * @description Call this endpoint with the response to a product search request.
   */
  'post-/crm/v3/extensions/accounting/callback/product-search/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The result of the product search request. */
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductSearchResponse']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for taxes search response
   * @description Call this endpoint with the response to a taxes search request.
   */
  'post-/crm/v3/extensions/accounting/callback/tax-search/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The result of the taxes search request. */
    requestBody: {
      content: {
        'application/json': components['schemas']['TaxSearchResponse']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Endpoint for terms search response
   * @description Call this endpoint with the response to a terms search request.
   */
  'post-/crm/v3/extensions/accounting/callback/terms/{requestId}': {
    parameters: {
      path: {
        /** @description The ID of the request that this response is for */
        requestId: string
      }
    }
    /** @description The result of the terms search */
    requestBody: {
      content: {
        'application/json': components['schemas']['TermsResponse']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Get invoice data
   * @description Returns invoice data for an Accounting account from the specified ID
   */
  'get-/crm/v3/extensions/accounting/invoice/{invoiceId}': {
    parameters: {
      query: {
        /** @description The ID of the account that the invoice belongs to. This is the account ID from the external accounting system. */
        accountId: string
      }
      path: {
        /** @description The ID of the invoice. This is the invoice ID from the external accounting system. */
        invoiceId: string
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['InvoiceReadResponse']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Update an invoice
   * @description Updates an Invoice by the given ID.
   */
  'patch-/crm/v3/extensions/accounting/invoice/{invoiceId}': {
    parameters: {
      query: {
        /** @description The ID of the account that the invoice belongs to. This is the account ID from the external accounting system. */
        accountId: string
      }
      path: {
        /** @description The ID of the invoice. This is the invoice ID from the external accounting system. */
        invoiceId: string
      }
    }
    /** @description The invoice data to update */
    requestBody: {
      content: {
        'application/json': components['schemas']['InvoiceUpdateRequest']
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['InvoiceUpdateResponse']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Records an invoice payment
   * @description Records an payment against an invoice.
   */
  'post-/crm/v3/extensions/accounting/invoice/{invoiceId}/payment': {
    parameters: {
      query?: {
        /** @description The ID of the account that the invoice belongs to. This is the account ID from the external accounting system. */
        accountId?: string
      }
      path: {
        /** @description The ID of the invoice. This is the invoice ID from the external accounting system. */
        invoiceId: string
      }
    }
    /** @description The payment information */
    requestBody: {
      content: {
        'application/json': components['schemas']['InvoiceCreatePaymentRequest']
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['InvoiceUpdateResponse']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Get URL settings
   * @description Returns the URL settings for an accounting app with the specified ID.
   */
  'get-/crm/v3/extensions/accounting/settings/{appId}': {
    parameters: {
      path: {
        /** @description The ID of the accounting app. This is the identifier of the application created in your HubSpot developer portal. */
        appId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['AccountingAppSettings']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Add/Update URL Settings
   * @description Add/Update the URL settings for an accounting app with the specified ID.  All URLs must use the `https` protocol.
   */
  'put-/crm/v3/extensions/accounting/settings/{appId}': {
    parameters: {
      path: {
        /** @description The ID of the accounting app. This is the identifier of the application created in your HubSpot developer portal. */
        appId: number
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AccountingAppSettings']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Import contacts
   * @description Imports contacts' properties from an external accounting system to HubSpot. Import details, including property mappings, must be configured previously in HubSpot infrastructure.
   */
  'post-/crm/v3/extensions/accounting/sync/{appId}/contacts': {
    parameters: {
      path: {
        /** @description The ID of the accounting app. This is the identifier of the application created in your HubSpot developer portal. */
        appId: number
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SyncContactsRequest']
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['ActionResponse']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Import products
   * @description Imports products' properties from an external accounting system to HubSpot. Import details, including property mappings, must be configured previously in HubSpot infrastructure.
   */
  'post-/crm/v3/extensions/accounting/sync/{appId}/products': {
    parameters: {
      path: {
        /** @description The ID of the accounting app. This is the identifier of the application created in your HubSpot developer portal. */
        appId: number
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SyncProductsRequest']
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['ActionResponse']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Create a user account
   * @description Creates an account which contains the information about the account in the external accounting system.  This *must* be called after a user connects their HubSpot account to the external accounting system, as there is no other way for HubSpot to obtain the external account details.
   */
  'put-/crm/v3/extensions/accounting/user-accounts': {
    /** @description The external accounting system user account information. */
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateUserAccountRequestExternal']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Delete user account
   * @description Deletes a user account from HubSpot, meaning that HubSpot will no longer send requests to the external accounting system for this user.
   */
  'delete-/crm/v3/extensions/accounting/user-accounts/{accountId}': {
    parameters: {
      path: {
        /** @description The ID of the user account to delete. */
        accountId: string
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
