/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/communication-preferences/v3/subscribe': {
    /**
     * Subscribe a contact
     * @description Subscribes a contact to the given subscription type. This API is not valid to use for subscribing a contact at a brand or portal level and will return an error.
     */
    post: operations['post-/communication-preferences/v3/subscribe_subscribe']
  }
  '/communication-preferences/v3/status/email/{emailAddress}': {
    /**
     * Get subscription statuses for a contact
     * @description Returns a list of subscriptions and their status for a given contact.
     */
    get: operations['get-/communication-preferences/v3/status/email/{emailAddress}_getEmailStatus']
  }
  '/communication-preferences/v3/unsubscribe': {
    /**
     * Unsubscribe a contact
     * @description Unsubscribes a contact from the given subscription type. This API is not valid to use for unsubscribing a contact at a brand or portal level and will return an error.
     */
    post: operations['post-/communication-preferences/v3/unsubscribe_unsubscribe']
  }
  '/communication-preferences/v3/definitions': {
    /**
     * Get subscription definitions
     * @description Get a list of all subscription definitions for the portal
     */
    get: operations['get-/communication-preferences/v3/definitions_getPage']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    ErrorDetail: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /** @description The status code associated with the error detail */
      code?: string
      /** @description The name of the field or parameter in which the error was found. */
      in?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /** @description A human readable message describing the error along with remediation steps where appropriate */
      message: string
    }
    /** @description A request to change the status of a contact's subscription. */
    PublicUpdateSubscriptionStatusRequest: {
      /** @description Contact's email address. */
      emailAddress: string
      /**
       * @description Legal basis for updating the contact's status (required for GDPR enabled portals).
       * @enum {string}
       */
      legalBasis?:
        | 'LEGITIMATE_INTEREST_PQL'
        | 'LEGITIMATE_INTEREST_CLIENT'
        | 'PERFORMANCE_OF_CONTRACT'
        | 'CONSENT_WITH_NOTICE'
        | 'NON_GDPR'
        | 'PROCESS_AND_STORE'
        | 'LEGITIMATE_INTEREST_OTHER'
      /** @description ID of the subscription being updated for the contact. */
      subscriptionId: string
      /** @description A more detailed explanation to go with the legal basis (required for GDPR enabled portals). */
      legalBasisExplanation?: string
    }
    /** @description A collection of subscription definitions for the portal. */
    SubscriptionDefinitionsResponse: {
      /** @description A list of all subscription definitions. */
      subscriptionDefinitions: components['schemas']['SubscriptionDefinition'][]
    }
    /** @description A collection of subscription statuses for a contact. */
    PublicSubscriptionStatusesResponse: {
      /** @description Email address of the contact. */
      recipient: string
      /** @description A list of all of the contact's subscriptions statuses. */
      subscriptionStatuses: components['schemas']['PublicSubscriptionStatus'][]
    }
    SubscriptionDefinition: {
      /** @description A default description that is used by some HubSpot tools and cannot be edited. */
      isInternal: boolean
      /**
       * Format: date-time
       * @description Time at which the definition was created.
       */
      createdAt: string
      /** @description A subscription definition created by HubSpot. */
      isDefault: boolean
      /** @description The method or technology used to contact. */
      communicationMethod?: string
      /** @description The purpose of this subscription or the department in your organization that uses it. */
      purpose?: string
      /** @description The name of the subscription. */
      name: string
      /** @description A description of the subscription. */
      description: string
      /** @description The ID of the definition. */
      id: string
      /** @description Whether the definition is active or archived. */
      isActive: boolean
      /**
       * Format: date-time
       * @description Time at which the definition was last updated.
       */
      updatedAt: string
    }
    /** @description The status of a subscription for a contact. */
    PublicSubscriptionStatus: {
      /**
       * Format: int64
       * @description The ID of the brand that the subscription is associated with, if there is one.
       */
      brandId?: number
      /** @description The name of the subscription. */
      name: string
      /** @description A description of the subscription. */
      description: string
      /**
       * @description The legal reason for the current status of the subscription.
       * @enum {string}
       */
      legalBasis?:
        | 'LEGITIMATE_INTEREST_PQL'
        | 'LEGITIMATE_INTEREST_CLIENT'
        | 'PERFORMANCE_OF_CONTRACT'
        | 'CONSENT_WITH_NOTICE'
        | 'NON_GDPR'
        | 'PROCESS_AND_STORE'
        | 'LEGITIMATE_INTEREST_OTHER'
      /** @description The name of the preferences group that the subscription is associated with. */
      preferenceGroupName?: string
      /** @description The ID for the subscription. */
      id: string
      /** @description A more detailed explanation to go with the legal basis. */
      legalBasisExplanation?: string
      /**
       * @description Whether the contact is subscribed.
       * @enum {string}
       */
      status: 'SUBSCRIBED' | 'NOT_SUBSCRIBED'
      /**
       * @description Where the status is determined from e.g. PORTAL_WIDE_STATUS if the contact opted out from the portal.
       * @enum {string}
       */
      sourceOfStatus:
        | 'PORTAL_WIDE_STATUS'
        | 'BRAND_WIDE_STATUS'
        | 'SUBSCRIPTION_STATUS'
    }
    /**
     * @example {
     *   "message": "Invalid input (details will vary based on the error)",
     *   "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
     *   "category": "VALIDATION_ERROR",
     *   "links": {
     *     "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
     *   }
     * }
     */
    Error: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ],
       *   "invalidPropertyName": [
       *     "propertyValue"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /**
       * Format: uuid
       * @description A unique identifier for the request. Include this value with any error reports or support tickets
       * @example aeb5f871-7f07-4993-9211-075dc63e7cbf
       */
      correlationId: string
      /**
       * @description A map of link names to associated URIs containing documentation about the error or recommended remediation steps
       * @example {
       *   "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
       * }
       */
      links?: {
        [key: string]: string
      }
      /**
       * @description A human readable message describing the error along with remediation steps where appropriate
       * @example Invalid input (details will vary based on the error)
       */
      message: string
      /**
       * @description The error category
       * @example VALIDATION_ERROR
       */
      category: string
      /** @description further information about the error */
      errors?: components['schemas']['ErrorDetail'][]
    }
  }
  responses: {
    /** @description An error occurred. */
    Error: {
      content: {
        '*/*': components['schemas']['Error']
      }
    }
  }
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Subscribe a contact
   * @description Subscribes a contact to the given subscription type. This API is not valid to use for subscribing a contact at a brand or portal level and will return an error.
   */
  'post-/communication-preferences/v3/subscribe_subscribe': {
    requestBody: {
      content: {
        'application/json': components['schemas']['PublicUpdateSubscriptionStatusRequest']
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicSubscriptionStatus']
        }
      }
      400: {
        content: {
          'application/json': unknown
        }
      }
      404: {
        content: {
          'application/json': unknown
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Get subscription statuses for a contact
   * @description Returns a list of subscriptions and their status for a given contact.
   */
  'get-/communication-preferences/v3/status/email/{emailAddress}_getEmailStatus': {
    parameters: {
      path: {
        emailAddress: string
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicSubscriptionStatusesResponse']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Unsubscribe a contact
   * @description Unsubscribes a contact from the given subscription type. This API is not valid to use for unsubscribing a contact at a brand or portal level and will return an error.
   */
  'post-/communication-preferences/v3/unsubscribe_unsubscribe': {
    requestBody: {
      content: {
        'application/json': components['schemas']['PublicUpdateSubscriptionStatusRequest']
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicSubscriptionStatus']
        }
      }
      400: {
        content: {
          'application/json': unknown
        }
      }
      404: {
        content: {
          'application/json': unknown
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Get subscription definitions
   * @description Get a list of all subscription definitions for the portal
   */
  'get-/communication-preferences/v3/definitions_getPage': {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['SubscriptionDefinitionsResponse']
        }
      }
      default: components['responses']['Error']
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
