/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/crm/v3/owners/': {
    /** Get a page of owners */
    get: operations['get-/crm/v3/owners/_getPage']
  }
  '/crm/v3/owners/{ownerId}': {
    /** Read an owner by given `id` or `userId` */
    get: operations['get-/crm/v3/owners/{ownerId}_getById']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    ErrorDetail: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /** @description The status code associated with the error detail */
      code?: string
      /** @description The name of the field or parameter in which the error was found. */
      in?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /** @description A human readable message describing the error along with remediation steps where appropriate */
      message: string
    }
    ForwardPaging: {
      next?: components['schemas']['NextPage']
    }
    /**
     * @example {
     *   "id": "6166860",
     *   "email": "jsmith@example.com",
     *   "firstName": "John",
     *   "lastName": "Smith",
     *   "userId": 1296619,
     *   "createdAt": "2019-10-30T03:30:17.883Z",
     *   "updatedAt": "2019-12-07T16:50:06.678Z",
     *   "archived": false,
     *   "teams": [
     *     {
     *       "id": "178588",
     *       "name": "West Coast Sales",
     *       "primary": true
     *     },
     *     {
     *       "id": "178590",
     *       "name": "California Sales",
     *       "primary": false
     *     }
     *   ]
     * }
     */
    PublicOwner: {
      /** @example John */
      firstName?: string
      /** @example Smith */
      lastName?: string
      /** Format: date-time */
      createdAt: string
      /** @example false */
      archived: boolean
      /**
       * @example [
       *   {
       *     "id": "178588",
       *     "name": "West Coast Sales",
       *     "primary": true
       *   },
       *   {
       *     "id": "178590",
       *     "name": "California Sales",
       *     "primary": false
       *   }
       * ]
       */
      teams?: components['schemas']['PublicTeam'][]
      /** @example 6166860 */
      id: string
      /**
       * Format: int32
       * @example 1296619
       */
      userId?: number
      /** @example jsmith@example.com */
      email?: string
      /** Format: date-time */
      updatedAt: string
    }
    PublicTeam: {
      name: string
      id: string
      primary: boolean
    }
    /**
     * @example {
     *   "message": "Invalid input (details will vary based on the error)",
     *   "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
     *   "category": "VALIDATION_ERROR",
     *   "links": {
     *     "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
     *   }
     * }
     */
    Error: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ],
       *   "invalidPropertyName": [
       *     "propertyValue"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /**
       * Format: uuid
       * @description A unique identifier for the request. Include this value with any error reports or support tickets
       * @example aeb5f871-7f07-4993-9211-075dc63e7cbf
       */
      correlationId: string
      /**
       * @description A map of link names to associated URIs containing documentation about the error or recommended remediation steps
       * @example {
       *   "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
       * }
       */
      links?: {
        [key: string]: string
      }
      /**
       * @description A human readable message describing the error along with remediation steps where appropriate
       * @example Invalid input (details will vary based on the error)
       */
      message: string
      /**
       * @description The error category
       * @example VALIDATION_ERROR
       */
      category: string
      /** @description further information about the error */
      errors?: components['schemas']['ErrorDetail'][]
    }
    CollectionResponsePublicOwnerForwardPaging: {
      paging?: components['schemas']['ForwardPaging']
      results: components['schemas']['PublicOwner'][]
    }
    NextPage: {
      link?: string
      after: string
    }
  }
  responses: {
    /** @description An error occurred. */
    Error: {
      content: {
        '*/*': components['schemas']['Error']
      }
    }
  }
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /** Get a page of owners */
  'get-/crm/v3/owners/_getPage': {
    parameters: {
      query?: {
        /** @description Filter by email address (optional) */
        email?: string
        /** @description The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results. */
        after?: string
        /** @description The maximum number of results to display per page. */
        limit?: number
        /** @description Whether to return only results that have been archived. */
        archived?: boolean
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['CollectionResponsePublicOwnerForwardPaging']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Read an owner by given `id` or `userId` */
  'get-/crm/v3/owners/{ownerId}_getById': {
    parameters: {
      query?: {
        idProperty?: 'id' | 'userId'
        /** @description Whether to return only results that have been archived. */
        archived?: boolean
      }
      path: {
        ownerId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicOwner']
        }
      }
      default: components['responses']['Error']
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
