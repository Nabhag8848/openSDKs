/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/automation/v4/actions/callbacks/{callbackId}/complete': {
    /** Completes a single callback */
    post: operations['post-/automation/v4/actions/callbacks/{callbackId}/complete_complete']
  }
  '/automation/v4/actions/callbacks/complete': {
    /** Completes a batch of callbacks */
    post: operations['post-/automation/v4/actions/callbacks/complete_completeBatch']
  }
  '/automation/v4/actions/{appId}': {
    /** Get paged extension definitions */
    get: operations['get-/automation/v4/actions/{appId}_getPage']
    /** Create a new extension definition */
    post: operations['post-/automation/v4/actions/{appId}_create']
  }
  '/automation/v4/actions/{appId}/{definitionId}/functions': {
    /** Get all functions for a given definition */
    get: operations['get-/automation/v4/actions/{appId}/{definitionId}/functions_getPage']
  }
  '/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}': {
    /** Get all functions by a type for a given definition */
    get: operations['get-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_getByFunctionType']
    /** Insert a function for a definition */
    put: operations['put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_createOrReplaceByFunctionType']
    /** Delete a function for a definition */
    delete: operations['delete-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_archiveByFunctionType']
  }
  '/automation/v4/actions/{appId}/{definitionId}/revisions/{revisionId}': {
    /** Gets a revision for a given definition by revision id */
    get: operations['get-/automation/v4/actions/{appId}/{definitionId}/revisions/{revisionId}_getById']
  }
  '/automation/v4/actions/{appId}/{definitionId}': {
    /** Get extension definition by Id */
    get: operations['get-/automation/v4/actions/{appId}/{definitionId}_getById']
    /** Archive an extension definition */
    delete: operations['delete-/automation/v4/actions/{appId}/{definitionId}_archive']
    /** Patch an existing extension definition */
    patch: operations['patch-/automation/v4/actions/{appId}/{definitionId}_update']
  }
  '/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}': {
    /** Get a function for a given definition */
    get: operations['get-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_getById']
    /** Insert a function for a definition */
    put: operations['put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_createOrReplace']
    /** Archive a function for a definition */
    delete: operations['delete-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_archive']
  }
  '/automation/v4/actions/{appId}/{definitionId}/revisions': {
    /** Get all revisions for a given definition */
    get: operations['get-/automation/v4/actions/{appId}/{definitionId}/revisions_getPage']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    PublicActionFunction: {
      functionSource: string
      /** @enum {string} */
      functionType:
        | 'PRE_ACTION_EXECUTION'
        | 'PRE_FETCH_OPTIONS'
        | 'POST_FETCH_OPTIONS'
        | 'POST_ACTION_EXECUTION'
      id?: string
    }
    PublicActionDefinition: {
      functions: components['schemas']['PublicActionFunctionIdentifier'][]
      actionUrl: string
      published: boolean
      labels: {
        [key: string]: components['schemas']['PublicActionLabels']
      }
      inputFields: components['schemas']['InputFieldDefinition'][]
      outputFields?: components['schemas']['OutputFieldDefinition'][]
      revisionId: string
      /** Format: int64 */
      archivedAt?: number
      inputFieldDependencies?: (
        | components['schemas']['PublicSingleFieldDependency']
        | components['schemas']['PublicConditionalSingleFieldDependency']
      )[]
      executionRules?: components['schemas']['PublicExecutionTranslationRule'][]
      id: string
      objectTypes: string[]
      objectRequestOptions?: components['schemas']['PublicObjectRequestOptions']
    }
    /** CONDITIONAL_SINGLE_FIELD */
    PublicConditionalSingleFieldDependency: {
      /**
       * @default CONDITIONAL_SINGLE_FIELD
       * @enum {string}
       */
      dependencyType: 'CONDITIONAL_SINGLE_FIELD'
      dependentFieldNames: string[]
      controllingFieldName: string
      controllingFieldValue: string
    }
    PublicObjectRequestOptions: {
      properties: string[]
    }
    ErrorDetail: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /** @description The status code associated with the error detail */
      code?: string
      /** @description The name of the field or parameter in which the error was found. */
      in?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /** @description A human readable message describing the error along with remediation steps where appropriate */
      message: string
    }
    /** SINGLE_FIELD */
    PublicSingleFieldDependency: {
      /**
       * @default SINGLE_FIELD
       * @enum {string}
       */
      dependencyType: 'SINGLE_FIELD'
      dependentFieldNames: string[]
      controllingFieldName: string
    }
    PublicActionLabels: {
      inputFieldDescriptions?: {
        [key: string]: string
      }
      appDisplayName?: string
      outputFieldLabels?: {
        [key: string]: string
      }
      inputFieldOptionLabels?: {
        [key: string]: {
          [key: string]: string
        }
      }
      actionDescription?: string
      executionRules?: {
        [key: string]: string
      }
      inputFieldLabels?: {
        [key: string]: string
      }
      actionName: string
      actionCardContent?: string
    }
    ForwardPaging: {
      next?: components['schemas']['NextPage']
    }
    FieldTypeDefinition: {
      helpText?: string
      /** @enum {string} */
      referencedObjectType?:
        | 'CONTACT'
        | 'COMPANY'
        | 'DEAL'
        | 'ENGAGEMENT'
        | 'TICKET'
        | 'OWNER'
        | 'PRODUCT'
        | 'LINE_ITEM'
        | 'BET_DELIVERABLE_SERVICE'
        | 'CONTENT'
        | 'CONVERSATION'
        | 'BET_ALERT'
        | 'PORTAL'
        | 'QUOTE'
        | 'FORM_SUBMISSION_INBOUNDDB'
        | 'QUOTA'
        | 'UNSUBSCRIBE'
        | 'COMMUNICATION'
        | 'FEEDBACK_SUBMISSION'
        | 'ATTRIBUTION'
        | 'SALESFORCE_SYNC_ERROR'
        | 'RESTORABLE_CRM_OBJECT'
        | 'HUB'
        | 'LANDING_PAGE'
        | 'PRODUCT_OR_FOLDER'
        | 'TASK'
        | 'FORM'
        | 'MARKETING_EMAIL'
        | 'AD_ACCOUNT'
        | 'AD_CAMPAIGN'
        | 'AD_GROUP'
        | 'AD'
        | 'KEYWORD'
        | 'CAMPAIGN'
        | 'SOCIAL_CHANNEL'
        | 'SOCIAL_POST'
        | 'SITE_PAGE'
        | 'BLOG_POST'
        | 'IMPORT'
        | 'EXPORT'
        | 'CTA'
        | 'TASK_TEMPLATE'
        | 'AUTOMATION_PLATFORM_FLOW'
        | 'OBJECT_LIST'
        | 'NOTE'
        | 'MEETING_EVENT'
        | 'CALL'
        | 'EMAIL'
        | 'PUBLISHING_TASK'
        | 'CONVERSATION_SESSION'
        | 'CONTACT_CREATE_ATTRIBUTION'
        | 'INVOICE'
        | 'MARKETING_EVENT'
        | 'CONVERSATION_INBOX'
        | 'CHATFLOW'
        | 'MEDIA_BRIDGE'
        | 'SEQUENCE'
        | 'SEQUENCE_STEP'
        | 'FORECAST'
        | 'SNIPPET'
        | 'TEMPLATE'
        | 'DEAL_CREATE_ATTRIBUTION'
        | 'QUOTE_TEMPLATE'
        | 'QUOTE_MODULE'
        | 'QUOTE_MODULE_FIELD'
        | 'QUOTE_FIELD'
        | 'SEQUENCE_ENROLLMENT'
        | 'SUBSCRIPTION'
        | 'ACCEPTANCE_TEST'
        | 'SOCIAL_BROADCAST'
        | 'DEAL_SPLIT'
        | 'DEAL_REGISTRATION'
        | 'GOAL_TARGET'
        | 'GOAL_TARGET_GROUP'
        | 'PORTAL_OBJECT_SYNC_MESSAGE'
        | 'FILE_MANAGER_FILE'
        | 'FILE_MANAGER_FOLDER'
        | 'SEQUENCE_STEP_ENROLLMENT'
        | 'APPROVAL'
        | 'APPROVAL_STEP'
        | 'CTA_VARIANT'
        | 'SALES_DOCUMENT'
        | 'DISCOUNT'
        | 'FEE'
        | 'TAX'
        | 'MARKETING_CALENDAR'
        | 'PERMISSIONS_TESTING'
        | 'PRIVACY_SCANNER_COOKIE'
        | 'DATA_SYNC_STATE'
        | 'WEB_INTERACTIVE'
        | 'PLAYBOOK'
        | 'FOLDER'
        | 'PLAYBOOK_QUESTION'
        | 'PLAYBOOK_SUBMISSION'
        | 'PLAYBOOK_SUBMISSION_ANSWER'
        | 'COMMERCE_PAYMENT'
        | 'GSC_PROPERTY'
        | 'SOX_PROTECTED_DUMMY_TYPE'
        | 'BLOG_LISTING_PAGE'
        | 'QUARANTINED_SUBMISSION'
        | 'PAYMENT_SCHEDULE'
        | 'PAYMENT_SCHEDULE_INSTALLMENT'
        | 'MARKETING_CAMPAIGN_UTM'
        | 'DISCOUNT_TEMPLATE'
        | 'DISCOUNT_CODE'
        | 'FEEDBACK_SURVEY'
        | 'CMS_URL'
        | 'SALES_TASK'
        | 'SALES_WORKLOAD'
        | 'USER'
        | 'POSTAL_MAIL'
        | 'SCHEMAS_BACKEND_TEST'
        | 'PAYMENT_LINK'
        | 'SUBMISSION_TAG'
        | 'CAMPAIGN_STEP'
        | 'SCHEDULING_PAGE'
        | 'SOX_PROTECTED_TEST_TYPE'
        | 'ORDER'
        | 'MARKETING_SMS'
        | 'PARTNER_ACCOUNT'
        | 'CAMPAIGN_TEMPLATE'
        | 'CAMPAIGN_TEMPLATE_STEP'
        | 'PLAYLIST'
        | 'CLIP'
        | 'CAMPAIGN_BUDGET_ITEM'
        | 'CAMPAIGN_SPEND_ITEM'
        | 'MIC'
        | 'CONTENT_AUDIT'
        | 'CONTENT_AUDIT_PAGE'
        | 'PLAYLIST_FOLDER'
        | 'LEAD'
        | 'ABANDONED_CART'
        | 'EXTERNAL_WEB_URL'
        | 'VIEW'
        | 'VIEW_BLOCK'
        | 'ROSTER'
        | 'CART'
        | 'AUTOMATION_PLATFORM_FLOW_ACTION'
        | 'SOCIAL_PROFILE'
        | 'PARTNER_CLIENT'
        | 'ROSTER_MEMBER'
        | 'MARKETING_EVENT_ATTENDANCE'
        | 'ALL_PAGES'
        | 'AI_FORECAST'
        | 'CRM_PIPELINES_DUMMY_TYPE'
        | 'KNOWLEDGE_ARTICLE'
        | 'PROPERTY_INFO'
        | 'DATA_PRIVACY_CONSENT'
        | 'GOAL_TEMPLATE'
        | 'SCORE_CONFIGURATION'
        | 'AUDIENCE'
        | 'PARTNER_CLIENT_REVENUE'
        | 'AUTOMATION_JOURNEY'
        | 'UNKNOWN'
      name: string
      options: components['schemas']['Option'][]
      description?: string
      externalOptionsReferenceType?: string
      label?: string
      /** @enum {string} */
      type:
        | 'string'
        | 'number'
        | 'bool'
        | 'datetime'
        | 'enumeration'
        | 'date'
        | 'phone_number'
        | 'currency_number'
        | 'json'
        | 'object_coordinates'
      /** @enum {string} */
      fieldType?:
        | 'booleancheckbox'
        | 'checkbox'
        | 'date'
        | 'file'
        | 'number'
        | 'phonenumber'
        | 'radio'
        | 'select'
        | 'text'
        | 'textarea'
        | 'calculation_equation'
        | 'calculation_rollup'
        | 'calculation_score'
        | 'calculation_read_time'
        | 'unknown'
        | 'html'
      optionsUrl?: string
      externalOptions: boolean
    }
    InputFieldDefinition: {
      isRequired: boolean
      automationFieldType?: string
      typeDefinition: components['schemas']['FieldTypeDefinition']
      supportedValueTypes?: (
        | 'STATIC_VALUE'
        | 'OBJECT_PROPERTY'
        | 'FIELD_DATA'
        | 'FETCHED_OBJECT_PROPERTY'
        | 'ENROLLMENT_EVENT_PROPERTY'
      )[]
    }
    CollectionResponsePublicActionFunctionIdentifierNoPaging: {
      results: components['schemas']['PublicActionFunctionIdentifier'][]
    }
    PublicExecutionTranslationRule: {
      labelName: string
      conditions: {
        [key: string]: Record<string, never>
      }
    }
    PublicActionFunctionIdentifier: {
      /** @enum {string} */
      functionType:
        | 'PRE_ACTION_EXECUTION'
        | 'PRE_FETCH_OPTIONS'
        | 'POST_FETCH_OPTIONS'
        | 'POST_ACTION_EXECUTION'
      id?: string
    }
    PublicActionRevision: {
      revisionId: string
      /** Format: date-time */
      createdAt: string
      definition: components['schemas']['PublicActionDefinition']
      id: string
    }
    CallbackCompletionRequest: {
      outputFields: {
        [key: string]: string
      }
    }
    CollectionResponsePublicActionDefinitionForwardPaging: {
      paging?: components['schemas']['ForwardPaging']
      results: components['schemas']['PublicActionDefinition'][]
    }
    /**
     * @example {
     *   "message": "Invalid input (details will vary based on the error)",
     *   "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
     *   "category": "VALIDATION_ERROR",
     *   "links": {
     *     "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
     *   }
     * }
     */
    Error: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ],
       *   "invalidPropertyName": [
       *     "propertyValue"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /**
       * Format: uuid
       * @description A unique identifier for the request. Include this value with any error reports or support tickets
       * @example aeb5f871-7f07-4993-9211-075dc63e7cbf
       */
      correlationId: string
      /**
       * @description A map of link names to associated URIs containing documentation about the error or recommended remediation steps
       * @example {
       *   "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
       * }
       */
      links?: {
        [key: string]: string
      }
      /**
       * @description A human readable message describing the error along with remediation steps where appropriate
       * @example Invalid input (details will vary based on the error)
       */
      message: string
      /**
       * @description The error category
       * @example VALIDATION_ERROR
       */
      category: string
      /** @description further information about the error */
      errors?: components['schemas']['ErrorDetail'][]
    }
    CollectionResponsePublicActionRevisionForwardPaging: {
      paging?: components['schemas']['ForwardPaging']
      results: components['schemas']['PublicActionRevision'][]
    }
    CallbackCompletionBatchRequest: {
      outputFields: {
        [key: string]: string
      }
      callbackId: string
    }
    PublicActionDefinitionEgg: {
      inputFields: components['schemas']['InputFieldDefinition'][]
      outputFields?: components['schemas']['OutputFieldDefinition'][]
      /** Format: int64 */
      archivedAt?: number
      functions: components['schemas']['PublicActionFunction'][]
      actionUrl: string
      inputFieldDependencies?: (
        | components['schemas']['PublicSingleFieldDependency']
        | components['schemas']['PublicConditionalSingleFieldDependency']
      )[]
      published: boolean
      executionRules?: components['schemas']['PublicExecutionTranslationRule'][]
      objectTypes: string[]
      objectRequestOptions?: components['schemas']['PublicObjectRequestOptions']
      labels: {
        [key: string]: components['schemas']['PublicActionLabels']
      }
    }
    PublicActionDefinitionPatch: {
      inputFields?: components['schemas']['InputFieldDefinition'][]
      outputFields?: components['schemas']['OutputFieldDefinition'][]
      actionUrl?: string
      inputFieldDependencies?: (
        | components['schemas']['PublicSingleFieldDependency']
        | components['schemas']['PublicConditionalSingleFieldDependency']
      )[]
      published?: boolean
      executionRules?: components['schemas']['PublicExecutionTranslationRule'][]
      objectTypes?: string[]
      objectRequestOptions?: components['schemas']['PublicObjectRequestOptions']
      labels?: {
        [key: string]: components['schemas']['PublicActionLabels']
      }
    }
    BatchInputCallbackCompletionBatchRequest: {
      inputs: components['schemas']['CallbackCompletionBatchRequest'][]
    }
    Option: {
      hidden: boolean
      /** Format: int32 */
      displayOrder: number
      doubleData: number
      description: string
      readOnly: boolean
      label: string
      value: string
    }
    OutputFieldDefinition: {
      typeDefinition: components['schemas']['FieldTypeDefinition']
    }
    NextPage: {
      link?: string
      after: string
    }
  }
  responses: {
    /** @description An error occurred. */
    Error: {
      content: {
        '*/*': components['schemas']['Error']
      }
    }
  }
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /** Completes a single callback */
  'post-/automation/v4/actions/callbacks/{callbackId}/complete_complete': {
    parameters: {
      path: {
        callbackId: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CallbackCompletionRequest']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /** Completes a batch of callbacks */
  'post-/automation/v4/actions/callbacks/complete_completeBatch': {
    requestBody: {
      content: {
        'application/json': components['schemas']['BatchInputCallbackCompletionBatchRequest']
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /** Get paged extension definitions */
  'get-/automation/v4/actions/{appId}_getPage': {
    parameters: {
      query?: {
        /** @description The maximum number of results to display per page. */
        limit?: number
        /** @description The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results. */
        after?: string
        /** @description Whether to return only results that have been archived. */
        archived?: boolean
      }
      path: {
        appId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['CollectionResponsePublicActionDefinitionForwardPaging']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Create a new extension definition */
  'post-/automation/v4/actions/{appId}_create': {
    parameters: {
      path: {
        appId: number
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PublicActionDefinitionEgg']
      }
    }
    responses: {
      /** @description successful operation */
      201: {
        content: {
          'application/json': components['schemas']['PublicActionDefinition']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Get all functions for a given definition */
  'get-/automation/v4/actions/{appId}/{definitionId}/functions_getPage': {
    parameters: {
      path: {
        definitionId: string
        appId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['CollectionResponsePublicActionFunctionIdentifierNoPaging']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Get all functions by a type for a given definition */
  'get-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_getByFunctionType': {
    parameters: {
      path: {
        definitionId: string
        functionType:
          | 'PRE_ACTION_EXECUTION'
          | 'PRE_FETCH_OPTIONS'
          | 'POST_FETCH_OPTIONS'
          | 'POST_ACTION_EXECUTION'
        appId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicActionFunction']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Insert a function for a definition */
  'put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_createOrReplaceByFunctionType': {
    parameters: {
      path: {
        definitionId: string
        functionType:
          | 'PRE_ACTION_EXECUTION'
          | 'PRE_FETCH_OPTIONS'
          | 'POST_FETCH_OPTIONS'
          | 'POST_ACTION_EXECUTION'
        appId: number
      }
    }
    requestBody: {
      content: {
        'text/plain': string
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicActionFunctionIdentifier']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Delete a function for a definition */
  'delete-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_archiveByFunctionType': {
    parameters: {
      path: {
        definitionId: string
        functionType:
          | 'PRE_ACTION_EXECUTION'
          | 'PRE_FETCH_OPTIONS'
          | 'POST_FETCH_OPTIONS'
          | 'POST_ACTION_EXECUTION'
        appId: number
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /** Gets a revision for a given definition by revision id */
  'get-/automation/v4/actions/{appId}/{definitionId}/revisions/{revisionId}_getById': {
    parameters: {
      path: {
        definitionId: string
        revisionId: string
        appId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicActionRevision']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Get extension definition by Id */
  'get-/automation/v4/actions/{appId}/{definitionId}_getById': {
    parameters: {
      query?: {
        /** @description Whether to return only results that have been archived. */
        archived?: boolean
      }
      path: {
        definitionId: string
        appId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicActionDefinition']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Archive an extension definition */
  'delete-/automation/v4/actions/{appId}/{definitionId}_archive': {
    parameters: {
      path: {
        definitionId: string
        appId: number
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /** Patch an existing extension definition */
  'patch-/automation/v4/actions/{appId}/{definitionId}_update': {
    parameters: {
      path: {
        definitionId: string
        appId: number
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PublicActionDefinitionPatch']
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicActionDefinition']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Get a function for a given definition */
  'get-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_getById': {
    parameters: {
      path: {
        definitionId: string
        functionType:
          | 'PRE_ACTION_EXECUTION'
          | 'PRE_FETCH_OPTIONS'
          | 'POST_FETCH_OPTIONS'
          | 'POST_ACTION_EXECUTION'
        functionId: string
        appId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicActionFunction']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Insert a function for a definition */
  'put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_createOrReplace': {
    parameters: {
      path: {
        definitionId: string
        functionType:
          | 'PRE_ACTION_EXECUTION'
          | 'PRE_FETCH_OPTIONS'
          | 'POST_FETCH_OPTIONS'
          | 'POST_ACTION_EXECUTION'
        functionId: string
        appId: number
      }
    }
    requestBody: {
      content: {
        'text/plain': string
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['PublicActionFunctionIdentifier']
        }
      }
      default: components['responses']['Error']
    }
  }
  /** Archive a function for a definition */
  'delete-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_archive': {
    parameters: {
      path: {
        definitionId: string
        functionType:
          | 'PRE_ACTION_EXECUTION'
          | 'PRE_FETCH_OPTIONS'
          | 'POST_FETCH_OPTIONS'
          | 'POST_ACTION_EXECUTION'
        functionId: string
        appId: number
      }
    }
    responses: {
      /** @description No content */
      204: {
        content: {}
      }
      default: components['responses']['Error']
    }
  }
  /** Get all revisions for a given definition */
  'get-/automation/v4/actions/{appId}/{definitionId}/revisions_getPage': {
    parameters: {
      query?: {
        /** @description The maximum number of results to display per page. */
        limit?: number
        /** @description The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results. */
        after?: string
      }
      path: {
        definitionId: string
        appId: number
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['CollectionResponsePublicActionRevisionForwardPaging']
        }
      }
      default: components['responses']['Error']
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
