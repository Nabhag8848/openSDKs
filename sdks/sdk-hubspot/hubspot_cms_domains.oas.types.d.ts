/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/cms/v3/domains/': {
    /**
     * Get current domains
     * @description Returns all existing domains that have been created. Results can be limited and filtered by creation or updated date.
     */
    get: operations['get-/cms/v3/domains/_getPage']
  }
  '/cms/v3/domains/{domainId}': {
    /**
     * Get a single domain
     * @description Returns a single domains with the id specified.
     */
    get: operations['get-/cms/v3/domains/{domainId}_getById']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    ErrorDetail: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /** @description The status code associated with the error detail */
      code?: string
      /** @description The name of the field or parameter in which the error was found. */
      in?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /** @description A human readable message describing the error along with remediation steps where appropriate */
      message: string
    }
    ForwardPaging: {
      next?: components['schemas']['NextPage']
    }
    /**
     * @example {
     *   "message": "Invalid input (details will vary based on the error)",
     *   "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
     *   "category": "VALIDATION_ERROR",
     *   "links": {
     *     "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
     *   }
     * }
     */
    Error: {
      /** @description A specific category that contains more specific detail about the error */
      subCategory?: string
      /**
       * @description Context about the error condition
       * @example {
       *   "missingScopes": [
       *     "scope1",
       *     "scope2"
       *   ],
       *   "invalidPropertyName": [
       *     "propertyValue"
       *   ]
       * }
       */
      context?: {
        [key: string]: string[]
      }
      /**
       * Format: uuid
       * @description A unique identifier for the request. Include this value with any error reports or support tickets
       * @example aeb5f871-7f07-4993-9211-075dc63e7cbf
       */
      correlationId: string
      /**
       * @description A map of link names to associated URIs containing documentation about the error or recommended remediation steps
       * @example {
       *   "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
       * }
       */
      links?: {
        [key: string]: string
      }
      /**
       * @description A human readable message describing the error along with remediation steps where appropriate
       * @example Invalid input (details will vary based on the error)
       */
      message: string
      /**
       * @description The error category
       * @example VALIDATION_ERROR
       */
      category: string
      /** @description further information about the error */
      errors?: components['schemas']['ErrorDetail'][]
    }
    Domain: {
      /** @description Whether the domain is used for CMS landing pages. */
      isUsedForLandingPage: boolean
      primaryBlogPost?: boolean
      primaryKnowledge?: boolean
      /** Format: date-time */
      created?: string
      secondaryToDomain?: string
      manuallyMarkedAsResolving?: boolean
      /** @description Whether the domain is used for CMS knowledge pages. */
      isUsedForKnowledge: boolean
      /** @description Whether the domain is used for CMS blog posts. */
      isUsedForBlogPost: boolean
      /** @description Whether the domain is used for CMS site pages. */
      isUsedForSitePage: boolean
      /** @description Whether the DNS for this domain is optimally configured for use with HubSpot. */
      isResolving: boolean
      isSslEnabled?: boolean
      /** @description Whether the domain is used for CMS email web pages. */
      isUsedForEmail: boolean
      /** @description The actual domain or sub-domain. e.g. www.hubspot.com */
      domain: string
      primarySitePage?: boolean
      primaryLandingPage?: boolean
      /** @description The unique ID of this domain. */
      id: string
      correctCname?: string
      isSslOnly?: boolean
      /** Format: date-time */
      updated?: string
      primaryEmail?: boolean
    }
    NextPage: {
      link?: string
      after: string
    }
    CollectionResponseWithTotalDomainForwardPaging: {
      /** Format: int32 */
      total: number
      paging?: components['schemas']['ForwardPaging']
      results: components['schemas']['Domain'][]
    }
  }
  responses: {
    /** @description An error occurred. */
    Error: {
      content: {
        '*/*': components['schemas']['Error']
      }
    }
  }
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Get current domains
   * @description Returns all existing domains that have been created. Results can be limited and filtered by creation or updated date.
   */
  'get-/cms/v3/domains/_getPage': {
    parameters: {
      query?: {
        /** @description Only return domains created at this date. */
        createdAt?: string
        /** @description Only return domains created after this date. */
        createdAfter?: string
        /** @description Only return domains created before this date. */
        createdBefore?: string
        /** @description Only return domains updated at this date. */
        updatedAt?: string
        /** @description Only return domains updated after this date. */
        updatedAfter?: string
        /** @description Only return domains updated before this date. */
        updatedBefore?: string
        sort?: string[]
        /** @description The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results. */
        after?: string
        /** @description Maximum number of results per page. */
        limit?: number
        /** @description Whether to return only results that have been archived. */
        archived?: boolean
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['CollectionResponseWithTotalDomainForwardPaging']
        }
      }
      default: components['responses']['Error']
    }
  }
  /**
   * Get a single domain
   * @description Returns a single domains with the id specified.
   */
  'get-/cms/v3/domains/{domainId}_getById': {
    parameters: {
      path: {
        /** @description The unique ID of the domain. */
        domainId: string
      }
    }
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': components['schemas']['Domain']
        }
      }
      default: components['responses']['Error']
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
